C=======================================================================
C=======================================================================
CE            FINITE ELEMENT PROGRAM FOR FIELD ANALYSES  
C
C =============   S M E A R E D  M O D E L   G E N E R A L ============= 

C          ---------     KOJIC TRANSPORT MODEL    --------------
C=======================================================================
C=======================================================================
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
#ifndef MUMPS_EXTERNAL
      INCLUDE 'mpif.h'
      INCLUDE 'dmumps_struc.h'
#endif
C
      CHARACTER*4 KRAJ
      CHARACTER*1 NASLOV(80)
      CHARACTER*1 IME*20
      CHARACTER*130 ACOZ
      COMMON /PRIMER/ IPRBR,INDIZL,INDGRA
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /ZIGR/ KC1,KC2,KC3,KC4,KC5,KC6,KC7,KC8,TC1,KRK,KC(10,3),
     1LR1,LR2,LR3,LR4,LR5,LR6,LRM,KC9,IVP,VR1,KC10
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA3/ LNEL3D,LMAT3D,LNQ3D,LITG3D,LIP3CV,LNG3D,LNELG3,
     1LEL,LHP,LHK,LSKE,LDEL,LDEHP,LDEHK,LHR
      COMMON /REPEA2/ LNEL2D,LMAT2D,LNQ2D,LITG2D,LIP2CV,LNG2D,LNELG2,
     1LEL2,LHP2,LHK2,LSKE2,LDEL2,LDEHP2,LDEHK2,LTHI2D,LHR2
      COMMON /REPEA1/ LNEL1D,LMAT1D,LNQ1D,LITG1D,LIP1CV,LNG1D,LNELG1,
     1LEL1,LHP1,LHK1,LSKE1,LDEL1,LDEHP1,LDEHK1,LHR1
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON /EL1K03/NMAT1D,MAT1D,NE1D,NGAU1X,NP1DMX,NND1,IELX1,NLM1,
     1IPR1DC,IPTG1,N1DGU,MEL1D,IQE1,NBR1,NCV1,LM1(3),IDEL1(1),NOD1(1)
      COMMON /CONST/ C13,C23,EPST
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /NASLOV/ NASLOV
      COMMON /IME/ IME
      COMMON /SRPSKI/ ISRPS
	common/elemmodels/modelel(20),ngele
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ          
	COMMON/NDSMOLAR/AMOLAR,MINUTTIME
	COMMON/MESSAGES/MESSAGE
	common /prkoraux/VREMEE,LNKDT,LDTDT,LVDT 
	COMMON/FLUXKC/INDFLUXKC
	COMMON/UNITFLUX/LFLUXDXU,LFLUXDYU,LFLUXDZU
      COMMON/CSURFACE/COEFCMOLEC,COEFCMOLAR,LDIFFUSV,LIDIFFUS
      COMMON/FITNODES/INFF
c     DARCY
      COMMON /GROUPSOL/ NGROUPSOL,NMATSOL,NGROUPSDAT(300,30),
     1MATSOLID(50,5),MATSOLDIF(50,5),LGNODE,LPRESS1SOL,LIDPRESSOL,
     2 LPRESSOL,LVMESHSOL,IALESOL,LPRESS_OLD,LIDPRESS_OLD,LPRESSNODES
      COMMON/DARCYEQ/ ELDARCYX,ELDARCYY,ELDARCYZ,VDARCY,PINLET,
     1       DARCYX,JEDNDARCY,ISOLVER,IDARCY,LDARCYD,LDARCYMI,
     2       LIDARCYMA,NPTINDARCY
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10)   
      COMMON/MAINIDT/NDIMIDT
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON/UNSYMMETRIC/LALEVO,LDESNO,LSILE,ISYMM
      COMMON/SURFACE3DBC/NODSURF(8,3)
	COMMON /MUMPS_PAK/IMUMPS,MUFILE,MUFILE2
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
      COMMON/PIPEMIX/FLAMREF,IPIPEMIX,NETIP,LIDPRESS,LPRESS,LIDP,
     2               LLAMDAV,IDEFORMG,INDFLUXE,ILAMDA
      COMMON/DEFORMPIPE/IDEFORM
      COMMON/COMMPART/IPART,LNODEPART,LPARTV,LIPARTCAP,LIPARTCELL     
      COMMON/CSMEARED/ISMEARED,VOLFRACT,POROSSME,LVOLFRACTV,LDWALLSME,
     1 LPWALLSMEV,LDIAMSME,LTHICKSME,IPARTSME,LVOLSME,IRAVSME,DRAVSME
      COMMON/CAPILLWALL/LCAPWTHICKV
      COMMON/OXYGEN/IOXYGEN,EM0OXY,ALPHAOXY,PMOXY
      COMMON/ZADATAV/NZADVOL,VOLREZ,CREZ,CREZ0,DELTAM,INFLUXVOL
      COMMON/VOLSOURCE/IVSOURCE,NTIMEFSOURCE,NPTMXSOURCE,LITIMESOURCE,
     1      LTIMESOURCE
      COMMON/CSMEAREDG/ISMEAREDG,NDIMIDG,ICONVG,INDIFFUSG,LAMI,
     1     LDARCYCOEF,MATNEWUSE,LHYDRCOEF,LDPIPE,LDTISSUE,IPRINTVEL,
     2     IACTIVE(4),LZADATA1,LZADATA0,LZADAVXYZ,LWALLAREA,
     3     LWALLPOROSV,LIPIPENOD,ILARGEVES
      COMMON/ITERSMEARED/TREFP,DTMODP,TREFD,DTMODD
      COMMON/CSMEARED2/IPASSME,JEDNPRES,JEDNCONC,LTT1P,LTT1C,LTT10P,
     1      LTT10C,LDIRCOEFF,LDPIPECA,LDARCYCA,I2D3D,IANIZS,NDIMTENSOR
      COMMON/CMULTITIS/MULTITIS,MULTIMOL,IACTIVECELL(4),NDIMCELL,LIDTV,
     1      LIDTVCELL,JEDNPV(10),JEDNCV(10),JEDNPMAX,JEDNCMAX,MM 
      COMMON/MULTITISAD/LIPARTITV,LIACTIVEV,LIVSOURCEV,LIADHESIV,
     1 LVOLFRACT,LDARCYCOEFV,LHYDRCOEFPV,LHYDRCOEFCV,LAMIPV,LAMICV,
     2 LVOLSMEV,LDARTENSOR,LWALLAREAV,LVFMULTIT,LDIAMCELLV,
     3 LDPIPEEXV,LDCELLSV,LDPIPECAP,LIPARTNODEV,LPARTNODEV,
     4 LIACTIVENODEV,LACTIVENODEV,LISOURCENODEV,LSOURCENODEV,
     5 LADHESINODEV,LIADHESINODEV,LDWALLSMEV,LDWALLCELL,LDIAMSMEV,
     6 LTHICKSMEV,LDWALLV,LIPIPENODV,LICRITICALV,LCRITICALV,
     7 LTT1PM,LTT01PM,LTT1CM,LTT01CM,LFMULT    
      COMMON/CMATDATA/NDIMPIPEMAX,NDIMCAPMAX,NDIMCELLMAX,NDIMPMAX,
     4 NDIMAMAX,NDIMSMAX,NDIMADHMAX,NDIMWPIPEMAX,NDIMWCAPMAX,
     5 NDIMWCELLMAX,DARCYCOEF,AMICOEFP,AMICOEFC,HYDROCOEFP,HYDROCOEFC,
     6 DARCYTENSOR(6),DPIPE,DTISSUE,DIFFTENSOR(6),PARTPIPE1,PARTPIPE2,
     7 PARTCELL(2,4),ACTIVECOEF(2,4),SOURCECOEFF(4),ADHCOEFF(2,4),
     8 DWALLPIPE,DWALLCAP,DWALLCELL(4),INODEDTOT,INODEWTOT,LDPIPEEXA, 
     9 LDPIPECAPA,LCELLA,LPARTA,LACTIVEA,LSOURCEA,LADHISEA,LWALLPIPEA,
     1 LWALLCAPA,LWALLCELLA,IREADDIFNODE   
      COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
      COMMON/CZADATMULT/NZADPV(10),NZADPMAX,LZADATM0,LZADATM1,LNZADNODF,
     1      LZADVALUE,NPTIMESYSV(10),NPTSYSMAX,LZADSYSV    
      COMMON/CMIGRATION/IMIGTABLE(10),JEDNMIGV(10),VMIGC(10),
     1 INDCHTAXV(10),INDCHTAX,IMIGTOT,IMIGNODE,LIVMIGV,LVMIGV,LIDTMIG,
     2 INDMIG,LVFTT,JEDNMIG,INDCHTAXTOT,LCHTAXV
      COMMON/CADHESION/IADHIMAX,LADHICONCV
      COMMON/CCELLIN/INDCELLIN,INDCELLINV(10),VFVS(10,5),DIAMVS(10,5),
     1 RAVVS(10,5),DDIFFICY(10,10),DDIFFIVS(10,10,5),DDIFFICM(10,10,5)
     2 ,IPARTIVS(10,10,5),PARTIVS(10,10,5),NDIMVS,NVSMAX,LIDVS,NZADVS,
     3 LNZADNODVS,LNZADNFVS,LNZADFVS,LZADVALUEVS,LZADATAVS0,LZADATAVS
      COMMON/CLYMPH/INDLYMPH,INDLYMPHH,INDLYMPHC,LRVLYMPH,LPLYMHV,
     1 LCLYMHV,TABLYHW(10),TABLYCW(10,10),TABLYD(10),TENSORLYP(10,6),
     2 TENSORLYC(10,10,6),ITABLYP,ITABLYC,ITABLYD,LHCOEFLYNOD,
     3 LHCOEFLYNODW,LCCOEFLYNOD,LCCOEFLYNODW,LDCOEFLYNOD,LIDLYMPHH,
     4 LIDLYMPHC
      COMMON/CLYMHZADA/NZADLYMPH,LINPUTLY,LZADVALUELY,LZADALYMH1,
     1 LZADALYMH0,NZADPLYV(10),NZADLYMPHMX
C
C      PARAMETER (NTOTAT = 120000000)   
	COMMON A(120000000)
	
	DIMENSION KART(2)      
	DIMENSION EFFVOLDIFF1(3),ICINITV(10,12),CINITV(10,12)
	
	double precision, dimension(:), allocatable :: TT1TOTP, TT1TOTC
C
#ifndef MUMPS_EXTERNAL
	COMMON /MUMPS/ mumps_par
      TYPE (DMUMPS_STRUC) mumps_par
#else
	CHARACTER*55 JOBID
#endif
C
      NTOTAT=120000000
      NTOTA = NTOTAT
CE    NTOTA- MAXIMUM TOTAL STORAGE AVAILABLE
CE    VARIABLE NTOTA MUST BE EQUAL TO DIMENSION OF VECTOR A(NTOTA)
C
      INDIZL = 0
      INDGRA = 0
      KARTIC = 0
      IIZLAZ = 3
      IPRBR  = 0
      IMUMPS = 0
CE    ISRPS  - VERSION INDICATOR
CE             (=0, SERBIAN; =1, ENGLISH)
      ISRPS  = 1
      INDVEL = 0
      IPASS  = 1
      C13 = 1./3.
      C23 = 2.*C13
      IDEFORMG = 0 
      KONVL=1
      KONVLF=1
C
CE    BASIC DATA FOR THE PROBLEM
C
 9999 CONTINUE
      CALL OTVORI(IPASS)
      CALL VREM(1)
      INDFOR=2
      CALL ISPITA(ACOZ)
      KART(1)=KARTIC
      READ(ACOZ,1000) NASLOV
 1000 FORMAT(80A1)
      KART(2)=KARTIC
      INDFOR=2
      IF(INDFOR.EQ.0) INDFOR = 1
	NDS  = 0
	NANOCH = 0
	ITOR = 0
C
    5 CONTINUE
	MESSAGE=62
      OPEN (MESSAGE,FILE='MESSAGES.LST',STATUS='UNKNOWN',
     1                  FORM='FORMATTED',ACCESS='SEQUENTIAL')
	WRITE(MESSAGE,3029)
 3029 FORMAT('      ')
C -------------------------------------------------------------
C
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(1,*) NPT,NGET,NMATT,NSTAC,NPER,NPRINT,IANIZ,NULAZ,ITOR,
     1IGRAF
      IF(INDFOR.EQ.2) THEN
         READ(ACOZ,1005) NPT,NGET,NMATTCONV,NMATTDIF,NSTAC,NPER,NPRINT,
     1   IANIZ,NULAZ,IGRAF,IDARCY,ICONV,INDIFFUS,IDINF,ISOLVER,IHEAT,
     2   IPIPEMIX,ILAMDA,ICOUPLEDCD,NFICTGROUPS
         CALL ISPITA(ACOZ)
         READ(ACOZ,1006)ISMEARED,IPARTSME,IPART,IVSOURCE,IRAVSME,
     2                  DRAVSME,IPRINTVEL,I2D3D,IANIZS,MULTITIS,
     3                  MULTIMOL,NDIMCELL,INDCELLIN,INDLYMPHH,INDLYMPHC
         IF(MULTIMOL.EQ.0) MULTIMOL=1
C
         CALL ICLEAR(IACTIVECELL,4)
      ENDIF
C
C     IDARCY=1 IN THIS CODE
C
      IF(IDARCY.EQ.0) IDARCY=1
      IF(I2D3D.EQ.0)I2D3D=2
      ISMEAREDG=ISMEARED
      NCYCLECONV=1
      IF(ISMEARED.GT.1) NCYCLECONV=4  
C     FOR SMEARED MODELS, PIPE IS CONSIDERED TO HAVE RIGID WALLS:
      IF(ISMEARED.NE.1)IPIPEMIX=0
      IF(IGRAF.EQ.0)     IGRAF = 1
      IF(NMATTCONV.GT.0) NMATT = NMATTCONV
C     SET DEGREES OF FREEDOM
      CALL ICLEAR(IACTIVE,4)
      IF(INDIFFUS.EQ.0) THEN
         IF(ICONV.EQ.0) THEN
            ICONV=1
            WRITE(3,2735)
 2735       FORMAT(//' WARNING: WHEN INDIFFUS.EQ.0,ICONV MUST BE. EQ. 1'
     1      /' IT IS SET BY   P A K   TO BE ICONV.EQ.1************')
         ENDIF
      ENDIF
C
      IF(ISMEARED.EQ.0) THEN
         IF(ICONV.EQ.1) THEN
             IACTIVE(1)=1
             IACTIVE(2)=1
         ENDIF
         IF(INDIFFUS.EQ.1)THEN
            IACTIVE(3)=1
            IACTIVE(4)=1
         ENDIF
      ENDIF   
C
      IF(ISMEARED.EQ.1) THEN
C     CONVECTION IN CAPILLARIES (AND IN TISSUE), UNIFORM CONCENTRATION IN CAPILLARIES
C     FOR ISMEARED.EQ.1, IT MUST BE ICONV=0,INDIFFUS=1
         ICONV=0
         INDIFFUS=1
         IF(ICONV.EQ.1) IACTIVE(1)=1
         IF(INDIFFUS.EQ.1)IACTIVE(4)=1
      ENDIF    
      IF(ISMEARED.EQ.2) THEN
C     CONVECTION IN CAPILLARIES ONLY, NO COUPLING WITH TISSUE   
         IACTIVE(1)=1
      ELSEIF (ISMEARED.EQ.3) THEN
C        DIFFUSION IN CAPILLARIES, NO COUPLING WITH TISSUE
         IACTIVE(3)=1
         IF(ICONV.EQ.1)IACTIVE(1)=1       
      ELSEIF(ISMEARED.EQ.4) THEN
C        CONVECTION IN CAPILLARIES AND IN TISSUE, NO DIFFUSION    
         IACTIVE(1)=1
         IACTIVE(2)=1
      ELSEIF (ISMEARED.EQ.5) THEN
C        DIFFUSION (AND CONVECTION) IN CAPILARIES COUPLED WITH TISSUE 
         IACTIVE(3)=1
         IACTIVE(4)=1     
         IF(ICONV.EQ.1) THEN
            IACTIVE(1)=1
            IACTIVE(2)=1
         ENDIF
      ENDIF
C
C     IN CASE OF HEAT TRANSFER, NMATTHEAT=NMATTDIF
      IF(IHEAT.GT.0) THEN
        NMATTHEAT = NMATTDIF
        NMATTDIF  = 0   	
      ENDIF
 1005 FORMAT(I10,20I5)
 1006 FORMAT(5I5,E10.3,12I5)
C
C     CHANGED, FOR SIMPLICITY THAT IS ALWAYS
      IF(IPIPEMIX.EQ.0) THEN
          NDIMIDT=1
          IF(INDIFFUS.EQ.1.OR.IHEAT.EQ.1)NDIMIDT=2
      ELSE
          NDIMIDT=2
          IF(INDIFFUS.EQ.1.OR.IHEAT.EQ.1)NDIMIDT=3
      ENDIF
C  
C     SET DIMENSION NDIMIDG IN CASE OF ISMEARED.GT.0
C
      NDIMIDG   = NDIMIDT
      ICONVG    = ICONV
      INDIFFUSG = INDIFFUS
      IF(ISMEARED.EQ.0) THEN
         NDIMID =4
         NDIMIDG=4
         NDIMIDT=4
      ENDIF
      IF(ISMEAREDG.GE.2) THEN
         IF(ISMEAREDG.EQ.2) THEN
            INDIFFUSG=0
            ICONV =1
            ICONVG=1
         ELSEIF(ISMEAREDG.EQ.3) THEN
            INDIFFUSG=1
            INDIFFUS =1
         ELSEIF(ISMEAREDG.EQ.4) THEN
            ICONV=1
            ICONVG=1
            INDIFFUSG=0
            INDIFFUS=0
         ELSEIF (ISMEAREDG.EQ.5) THEN
            INDIFFUSG=1
            INDIFFUS=1
            IF(ICONV.EQ.1) THEN
              ICONVG=1
            ENDIF
         ENDIF         
      ENDIF        
C
C     SET NDIMID=4 FOR ISMEARED.NE.1 CORRECTED TO NDIMIDG = 4 ALWAYS, MK APRIL 13,17--
C
      NDIMIDG = 4
      NDIMIDT = NDIMIDG
C
      ISYMM=0
C
      IF(NPT.GT.0) GO TO 222
      IF(ISRPS.EQ.0)
     1WRITE(3,2017)NPT
      IF(ISRPS.EQ.1)
     1WRITE(3,6017)NPT
 2017 FORMAT(/' GRESKA U ULAZNIM PODACIMA :'/' BROJ CVOROVA =',I3/
     1' A MORA BITI VECI OD NULE |')
 6017 FORMAT(/' ERROR IN INPUT DATA :'/
     1' NUMBER OF NODAL POINT - NP =',I5/
     1' MUST BE GREATER THAN ZERO!')
      STOP
  222 IF(NPER.EQ.0)   NPER   = 1
      IF(NGET.EQ.0)   NGET   = 1
      IF(NMATT.EQ.0)  NMATT  = 1
      IF(NPRINT.EQ.0) NPRINT = 1
      IF(NULAZ.EQ.0)  NULAZ  = 1
      IF(NULAZ.LT.0) THEN
        IF(ISRPS.EQ.0)
     1  WRITE(6,2063) (NASLOV(I),I=1,78)
        IF(ISRPS.EQ.1)
     1  WRITE(6,6063) (NASLOV(I),I=1,78)
      ENDIF
 2063 FORMAT(/' NE STAMPAJU SE ULAZNI PODACI ZA PROBLEM POD NASLOVOM'/
     1' "',78A1,'"'/)
 6063 FORMAT(/' NO PRINTOUT INPUT DATA FOR PROBLEM UNDER TITLE'/
     1' "',78A1,'"'/)

CE    O P E N     O U T P U T     F I L E
      IF(IPASS.EQ.1) THEN
         IF((NULAZ.GE.0.OR.NPRINT.GE.0).AND.INDIZL.EQ.0) THEN
           CALL OTVIZL
           INDIZL=1
           CALL ZAGLAV
         ENDIF
      ENDIF
      IF(NPRINT.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(3,2064) (NASLOV(I),I=1,78)
      IF(ISRPS.EQ.1)
     1WRITE(3,6064) (NASLOV(I),I=1,78)
      ENDIF
 2064 FORMAT(/' NE STAMPAJU SE REZULTATI ZA PROBLEM POD NASLOVOM :'/
     1' "',78A1,'"'/)
 6064 FORMAT(/' NO PRINTOUT RESULTS FOR PROBLEM UNDER TITLE:'/
     1' "',78A1,'"'/)
      WRITE(3,3020)INDFOR,INDIFFUS,ISOLVER,IDARCY
 3020 FORMAT(/
     111X,'READING DATA OPTION ............. INDFOR =',I5/
     116X,'EQ.0; INDFOR = 1'/
     116X,'EQ.1; FREE FORMAT'/
     116X,'EQ.2; IN SPECIFIED FORMAT'/
     211X,'DIFFUSION FLAG (0-NO, 1 WITH DIFFUSION)......INDIFFUS=',I5/
     311X,'SOLVER FLAG (0-SKYLINE,1-MUMUMPS)..... ......ISOLVER =',I5/
     411X,'DARCY MODEL FLAG.............................IDARCY  =',I5/ 
     516X,' 0 - NOT A DARCY MODEL, SET TO 1 IN THIS CODE'/
     516X,' 1 - DARCY PROBLEM SOLUTION'/
     616X,'-1 - EQUIVALENT DARCY COEFFICIENT CALCULATION'/
     716X,'-2 - EQUIVALENT DIFFUSION COEFFICINET CALCULATION')
      CALL CZINIT
CE    O P E N       F I L E     F O R     G R A P H I C S
      IF(IGRAF.GT.0.AND.INDGRA.EQ.0.AND.IPASS.EQ.1) THEN
        CALL OTVGRA
        INDGRA=1
      ENDIF
      IF(IGRAF.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(3,2065) (NASLOV(I),I=1,78)
      IF(ISRPS.EQ.1)
     1WRITE(3,6065) (NASLOV(I),I=1,78)
      ENDIF
 2065 FORMAT(/' NE STAMPAJU SE PODACI ZA GRAFIKU ZA PROBLEM POD NASLOVOM
     1 :'/' "',78A1,'"'/)
 6065 FORMAT(/' NO PRINTOUT GRAPHICS DATA FOR PROBLEM UNDER TITLE:'/
     1' "',78A1,'"'/)
CE    P R I N T       I N P U T      F I L E
      IF((NULAZ.EQ.1.OR.NULAZ.EQ.2).AND.IPRBR.EQ.0) CALL WIMIDZ
      IF(IPRBR.EQ.0.AND.INDIZL.EQ.1) IPRBR=1
CE    P R I N T       B A S I C      I N P U T     D A T A
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) KART(1)
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) KART(1)
 6000 FORMAT(///'1'/' CARD NUMBER',I5///)
 2000 FORMAT(///'1'/' KARTICA BROJ',I5///)
      WRITE(3,5010)
 5010 FORMAT(' ',78('*'))
      WRITE(3,5001) NASLOV
 5001 FORMAT(/' ',80A1/)
      WRITE(3,5010)
      IF(ISRPS.EQ.0)
     *WRITE(3,2006) KART(2)
      IF(ISRPS.EQ.1)
     *WRITE(3,6006) KART(2)
 6006 FORMAT(//////' CARD NUMBER',I5///)
 2006 FORMAT(//////' KARTICA BROJ',I5///)
      IF(ISRPS.EQ.0)
     *WRITE(3,30020) INDFOR
      IF(ISRPS.EQ.1)
     *WRITE(3,7020) INDFOR,NDS,NANOCH
30020 FORMAT(
     111X,'NACIN UCITAVANJA ULAZNIH PODATAKA ............. INDFOR =',I5/
     116X,'EQ.0; INDFOR = 1'/
     116X,'EQ.1; U SLOBODNOM FORMATU'/
     116X,'EQ.2; U OPISANOM FORMATU')
 7020 FORMAT(
     111X,'FORMAT INDICATOR .............................. INDFOR =',I5/
     116X,'EQ.0; INDFOR = 1'/
     116X,'EQ.1; FREE FORMAT'/
     116X,'EQ.2; FIXED FORMAT, AS DESCRIBED'/
     111X,'INDICATOR FOR NDS DEVICE MODELING..............    NDS =',I5/
     116X,'EQ.1; MODELING NDS DEVICE'/
     116X,'EQ.0; NO NDS DEVICE MODELING'/
     111X,'INDICATOR FOR NANOCHANNEL MODELING............ NANOCH =',I5/
     116X,'EQ.1; MODELING NANOCHANNEL WITHOUT RESERVOIRS'/
     116X,'EQ.2; MODELING NANOCHANNEL WITH LEFT RESERVOIR'/
     116X,'EQ.3; MODELING NANOCHANNEL WITH LEFT AND RIGHT RESERVOIRS'/
     116X,'EQ.0; NO NANOCHANNEL MODELING')
C 
C     NELEDAT - GENERAL DATA ABOUT GROUP OF ELEMENTS
C
      DO I=1,NGET
        DO J=1,50
          NELEDAT(I,J)=0
        ENDDO
      ENDDO   
C
      IF(ISRPS.EQ.0)
     *WRITE(3,2006) KARTIC
      IF(ISRPS.EQ.1)
     *WRITE(3,6006) KARTIC
      IF(ISRPS.EQ.0)
     *WRITE(3,2001) NPT,NGET,NMATT,NSTAC,NPER,NPRINT,NFICTGROUPS
      IF(ISRPS.EQ.1)
     *WRITE(3,6001) NPT,NGET,NMATTCONV,NMATTDIF,NMATTHEAT,NSTAC,NPER,
     1       NPRINT
 2001 FORMAT(6X,'O S N O V N I    P O D A C I    O    P R O B L E M U'
     1/6X,52('-')///
     111X,'UKUPAN BROJ CVORNIH TACAKA ........................ NP =',I5/
     116X,'EQ.0; PREKIDA SE IZVRSAVANJE PROGRAMA'///
     211X,'BROJ GRUPA ELEMENATA ............................ NGET =',I5/
     216X,'EQ.0; POSTAJE "1"; (MAX. 1 GRUPA)'///
     311X,'BROJ RAZLICITIH MATERIJALA ..................... NMATT =',I5/
     316X,'EQ.0; POSTAJE "1"'///
     411X,'INDIKATOR STACIONARNOSTI ....................... NSTAC =',I5/
     416X,'EQ.0; STACIONARAN PROBLEM'/
     416X,'EQ.1; NESTACIONARAN PROBLEM'///
     511X,'BROJ PERIODA SA KONSTANTNIM VREMENSKIM KORACIMA . NPER =',I5/
     516X,'EQ.0; POSTAJE "1"; (MAX. 16 PERIODA)'///
     611X,'DEFINISANJE STAMPARSKOG KORAKA ................ NPRINT =',I5/
     616X,'EQ.0; POSTAJE "1"')
 6001 FORMAT(6X,'B A S I C    D A T A    F O R   T H E   P R O B L E M'
     1/6X,53('-')///
     111X,'TOTAL NUMBER OF NODAL POINTS ...................... NP =',I5/
     116X,'EQ.0; PROGRAM STOP'///
     211X,'NUMBER OF ELEMENT GROUPS ........................ NGET =',I5/
     216X,'EQ.0; DEFAULT SET "1"'///
     311X,'NUMBER OF DIFERENT MATERIALS FOR CONVECTION..NMATTCONV=',I5/
     311X,'NUMBER OF DIFERENT MATERIALS FOR DIFFUSION....NMATTDIF=',I5/
     311X,'NUMBER OF DIFERENT MATERIALS FOR HEAT TRAN...NMATTHEAT=',I5/
     316X,'EQ.0; NO MATERIAL FOR EITHER CONVECTION,DIFFUSION,',
     4     ' OR HEAT TRANSFER'///
     411X,' INDICATOR FOR STEADY FLOW...................... NSTAC =',I5/
     416X,'EQ.0; STEADY STATE'/
     416X,'EQ.1; TRANSIENT'///
     511X,'NUMBER OF CONSTANT TIME STEP PERIODS ............ NPER =',I5/
     516X,'EQ.0; DEFAULT SET "1"; (MAX. 16 PERIODS)'///
     611X,'OUTPUT PRINTING INTERVAL IN OUTPUT FILE........ NPRINT =',I5/
     616X,'EQ.0; DEFAULT SET "1"'/
     116X,'EQ.-1; RESULTS NOT PRINTED'/
	216X,'EQ.1; EACH STEP PRINTED'/
     116X,'GT.1; STEP NUMBER TO BE PRINTED'/
     225X,' E.G. EQ.3 - EACH THIRD STEP PRINTED'
     611X,'NUMBER OF FICTITIOUS ELEMENTS GROUPS...... NFICTGROUPS =',I5)
      IF (ISRPS.EQ.0) THEN
      WRITE(3,2220) IANIZ,NULAZ,ITOR
      WRITE(3,2222)
      ELSEIF (ISRPS.EQ.1) THEN
      WRITE(3,6220) IANIZ,NULAZ,ITOR
      WRITE(3,6222)
      ENDIF
 2220 FORMAT(//
     711X,'INDIKATOR ANIZOTROPIJE ......................... IANIZ =',I5/
     716X,'EQ.0; IZOTROPNI MATERIJALI'/
     716X,'EQ.1; ANIZOTROPNI MATERIJALI'///
     111X,'NACIN STAMPANJA ULAZNIH PODATAKA ............... NULAZ =',I5/
     116X,'EQ.0; NULAZ = 1'/
     116X,'EQ.1; ULAZNA DATOTEKA, ULAZNI PODACI UCITANI I GENERISANI'/ 
     116X,'EQ.2; ULAZNA DATOTEKA'/
     116X,'EQ.3; ULAZNI PODACI UCITANI I GENERISANI'/
     116X,'LT.0; NE STAMPAJU SE ULAZNI PODACI'///
     911X,'INDIKATOR PRORACUNA TORZIJE PREKO TEMPERATURA ... ITOR =',I5)
 2222 FORMAT(
     916X,'EQ.0; NE RESAVA  ANALOGNE PROBLEME TEMPERATURAMA'/
     916X,'EQ.1; RACUNANJE SMICAJNIH NAPONA I MOMENATA TORZIJE'/
     916X,'      ANALOGIJE:     TEMPERATURA  - TORZIJA'/
     916X,'                ZAPREMINSKI IZVOR = UGAO UVIJANJA'/
     916X,'                KONDUKTIVNOST     = .5/MODUL SMICANJA'///
     916X,'EQ.2; RACUNANJE ZAPREMINSKIH IZVORA ZAVARIVANJA'/
     916X,'                ZAPREMINSKI IZVOR = OTPORNOST'/
     916X,'                   QB=((BXV)**2+(BYV)**2)/RO'/
     916X,'      UCITAVAJU SE FUNKCIJE NAPONSKOG POTENCIJALA SA DISKA,'/
     916X,'      I RACUNAJU NJIHOVI IZVODI PO GLOBALNIM KOORDINATAMA') 
 6220 FORMAT(//
     711X,'ANISOTROPIC FLAG ............................... IANIZ =',I5/
     716X,'EQ.0; ISOTROPIC MATERIJAL'/
     716X,'EQ.1; ANISOTROPIC MATERIJAL'///
     111X,'KIND OF PRINTOUT OF THE INPUT DATA ............. NULAZ =',I5/
     116X,'EQ.0; NULAZ = 1'/
     116X,'EQ.1; CARD IMAGE, INPUT DATA READ AND GENERATED ARE PRINTED'/
     116X,'EQ.2; CARD IMAGE PRINTED'/
     116X,'EQ.3; INPUT DATA READ AND GENERATED ARE  PRINTED'///
     911X,'INDICATOR FOR SOLVING    ANALOG PROBLEMS .... ITOR =',I5)
 6222 FORMAT(
     916X,'EQ.0; NOT SOLVING'/
     916X,'EQ.1; SOLVING TORSIONAL RIGIDITY OF A SQUARE SHAFT'/
     916X,'      ANALOGOUS:     TEMPERATURE  - TORSION'/
     916X,'                HEAT GENERATION   = TORSION ANGLE'/
     916X,'                CONDUCTIVITY      = .5/SHEAR MODUL'/
     916X,'EQ.2;'/
     916X,'EQ.3; SOLVING POTENTIAL FLOW')
      IF(ISRPS.EQ.0)
     *WRITE(3,2221) IGRAF
      IF(ISRPS.EQ.1)
     *WRITE(3,6221) IGRAF,IDARCY,ICONV,indiffus,IDINF,ISOLVER,IHEAT,
     1     IPIPEMIX,ILAMDA
      WRITE(3,6230) ISMEARED,NDIMIDG,IPARTSME,IPART,IVSOURCE,
     1   IRAVSME,DRAVSME,IPRINTVEL,I2D3D,IANIZS,MULTITIS,MULTIMOL,
     3   NDIMCELL,INDCELLIN,INDLYMPHH,INDLYMPHC
      IANIZS=1
 6230 FORMAT(//
     111X,'FLAG FOR SMEARED CAPILLARY MODEL ........     ISMEARED =',I5/
     216X,'ISMEARED =0  NO SMEARED IS USED'/
     316X,'          1  DIFF ONLY UNIFORM CONC IN CAPILLARIES'/
     416X,'          2  CONVECTION ONLY IN CAPILLARIES '/
     516X,'          3  DIFFUSSION ONLY IN CAPILLARIES (WITH OR WITHOUT'
     6                 ,' CONVECTION, ICONV=1 OR 0)'/
     616X,'          4  CONVECTION ONLY COUPLED WITH TISSUE '/
     716X,'          5  DIFFUSION COUPLED WITH TISSUE', 
     8                 ' (WITH OR WITHOUT CONVECTION, ICONV=1 OR 0)'/ 
     811X,'DIMENSION OF IDT(NDIMIDG,NPT) SET IN PAK00..  NDIMIDG  =',I5/
     111X,'         PARTITION OF CAPILL WALL (ISMEARED=1)IPARTSME =',I5/
     211X,'         PARTITIONING IN CONTINUUM...........    IPART =',I5/
     311X,'         VOLUMETRIC SOURCE................... IVSOURCE =',I5/
     311X,'         SURFACE-VOLUME RATIO INDICATOR...... IRAVSME  =',I5/
     216X,'IRAVSME = 0  USE EQUATION FOR STRAIGHT PIPE'/
     316X,'          1  USE PRE-CALCULATED VALUE FOR COMPLEX PIPES'/
     311X,'         SURFACE-VOLUME RATIO VALUE ......... DRAVSME  =',
     4               1PD10.3/
     411X,'FLAG FOR PRINTOUT VELOCITIES (0-N0,1-YES)..  IPRINTVEL =',I5/
     511X,'2D-3D FLAG (0-RESET TO 2)  2-2D, 3-3D PROBLEM    I2D3D =',I5/
     311X,'ANISOTROPY FLAG FOR ISMEARED.GE.2 ............. IANIZS =',I5/
     416X,'0-ISOTR,1-DIAGONALLY ANSIOTR, 2-FULL SYMMETRIC TENSOR'/
     516X,'IT IS SET IN THIS VERSION OF THE CODE THAT IANIZS=1'/ 
     511X,'MULTICOMPONENTS OF TISSUE (0-HOMOGENOUS)......MULTITIS =',I5/
     611X,'NUMBER OF TRANSPORTED MOLECULES (0-SET TO 1)..MULTIMOL =',I5/
     711X,'NUMBER OF CELL TYPES............(0-NO CELLS)..NDIMCELL =',I5/
     811X,'CELL INTERIOR MODELING  (0-NO, 1-YES)....... INDCELLIN =',I5/
     911X,'LYMPHATIC HYDRAULIC TRANSPORT(0-NO, 1-YES).. INDLYMPHH =',I5/
     111X,'LYMPHATIC DIFFUSIVE TRANSPORT(0-NO, 1-YES).. INDLYMPHC =',I5)
     
      IF(IPIPEMIX.EQ.1)THEN
         ICONV=1
      ENDIF
      INDLYMPH=0
      IF(INDLYMPHH.GT.0.OR.INDLYMPHC.GT.0)INDLYMPH=1
C     PRIVREMENO ISKLJUCENA OVA PROVERA --------
C------------  DOVDE ISKLJUCENO
 2221 FORMAT(//
     111X,'INDIKATOR FORMIRANJA GRAFICKOG FILEA ........... IGRAF =',I5/
     116X,'EQ. 0; POSTAJE "1"'/
     116X,'EQ.-1; NE FORMIRA SE'/
     116X,'EQ. 1; FORMIRA SE')
 6221 FORMAT(//
     111X,'INDICATOR FOR GRAPHICS FILE .................... IGRAF =',I5/
     116X,'EQ. 0; DEFAULT SET "1"'/
     116X,'EQ.-1; NOT FORMED'/
	216X,'EQ.1; EACH STEP WRITTEN IN GRAPHICS FILE'/
     116X,'GT.1; STEP NUMBER TO BE WRITTEN IN GRAPHICS FILE'/
     225X,' E.G. EQ.3 - EACH THIRD STEP WRITTEN'/
     311X,'FLAG FOR DARCY FLOW CALCULATION.............IDARCY  =',I5/
     416X,'EQ.0, CASE NOT USED IN THIS CODE, RESET TO 1'/
     516X,'EQ. 1, DARCY FLOW CALCULATION'/
     416X,'EQ.-1, EQUIVALENT DARCY COEFFICIENT'/
     516X,'EQ.-2, EQUIVALENT DIFFUSION COEFFCIENT CALCULATION'/
     611X,'FLAG FOR CONVECT(1-D) FLOW CALCULAT (0-NO,1-YES)ICONV =',I5/
     711X,'FLAG FOR DIFFUSION (0-NO, 1-YES).............indiffus ='I5/
     711X,'FLAG FOR INERTIAL FLUID FORCES 1-D (0-NO,1-YES)IDINF=',I5/
     811X,'FLAG FOR SOLVER (0-SKYLINE; 1-SPARCE MATRIX, MUMPS)ISOLVER=',
     9 I5/
     111X,'FLAG FOR HEAT (0-NO HEAT, 1-HEAT PROBLEM)..... IHEAT=',I5/
     211X,'FLAG FOR PIPE MIXED FORMULATION(0-NO, 1-YES).. IPIPEMIX=',I5/
     311X,'FLAG FOR USE LAGRANGE MULTIPLIERS FOR MIXED FORMULATION,',
     4 ' ILAMDA=',I5)

      ENDIF
      
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(1,*) INTEB,INDSC,IFORM,MAXIT,EPSTA,EPSTR,NJRAP,EPSTRL,
     2 IDISJCALC,IDISJMESH,IGRAFS,NPERS
      IF(INDFOR.EQ.2)
     1 READ(ACOZ,1002) INTEB,INDSC,IFORM,MAXIT,EPSTA,EPSTR,NJRAP,EPSTRL,
     2 IDISJCALC,IDISJMESH,IGRAFS,NPERS,nIndGauss,nConcDiags
 1002 FORMAT(4I5,2F10.2,I5,F10.2,6I5)
C
      IF(nConcDiags.eq.1) CALL OPENCONCMASSFILES
C
      IF(ISOLVER.EQ.1) IMUMPS = 1
C
      IF(INTEB.EQ.0) INTEB=1
      IF(NJRAP.EQ.0) NJRAP=1
      IF(MAXIT.EQ.0) MAXIT=15
      IF(DABS(EPSTA).LT.1.D-10.AND.DABS(EPSTR).LT.1.D-10)  EPSTR =.001
      IF(DABS(EPSTA).LT.1.D-10.AND.DABS(EPSTRL).LT.1.D-10) EPSTRL=.001
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      CALL WBROJK(KARTIC,0)
      IF(ISRPS.EQ.0)
     *WRITE(3,2002) INTEB,INDSC,IFORM,MAXIT,EPSTA,EPSTR,EPSTRL,NJRAP
      IF(ISRPS.EQ.1)
     *WRITE(3,6002) INTEB,INDSC,IFORM,MAXIT,EPSTA,EPSTR,EPSTRL,NJRAP
 2002 FORMAT(
     111X,'PRIMENJEN METOD VREMENSKE INTEGRACIJE .......... INTEB =',I5/
     116X,'EQ.0; POSTAJE "1"'/
     116X,'EQ.1; EULER BACWARD INTEGRACIJA (ALFA = 1)'///
     211X,'STAMPANJE REZULTATA U ZELJENIM CVOROVIMA ....... INDSC =',I5/
     216X,'EQ.0; U SVIM CVOROVIMA'/
     216X,'EQ.1; U ZELJENIM CVOROVIMA'///
     311X,'STAMPANJE REZULTATA U ZELJENOM FORMATU ......... IFORM =',I5/
     316X,'EQ.0; U FORMATU  D13.5'/
     316X,'EQ.1; U FORMATU  F10.3'///
     411X,'MAXIMALNI BROJ RAVNOTEZNIH ITERACIJA ........... MAXIT =',I5/
     416X,'EQ.0; POSTAJE "15"'///11X,
     5'APSOLUTNA TACNOST PRI ITERACIJAMA ......... EPSTA =',1PD10.3///
     611X,'RELATIVNA TACNOST PRI ITERACIJAMA ......... EPSTR =',1PD10.3/
     616X,'EQ.0; POSTAJE "1.E-3"'///
     611X,'RELATIVNA TACNOST ZA LAGRANZEOVE MNOZIOCE.. EPSTRL=',1PD10.3/
     616X,'EQ.0; POSTAJE "1.E-3"'///
     111X,'PRIMENJEN ITERATIVNI METOD ..................... NJRAP =',I5/
     116X,'EQ.0; POSTAJE "1"'/
     116X,'EQ.1; MODIFIKOVAN NJUTN-RAPSONOV METOD'/
     116X,'EQ.2; POTPUN NJUTNOV')
 6002 FORMAT(
     111X,'TIME INTEGRATION METHOD USED ................... INTEB =',I5/
     116X,'EQ.0; DEFAULT SET "1"'/
     116X,'EQ.1; EULER BACKWARD INTEGRATION (ALPHA = 1)'///
     211X,'PRINT OF RESULTS IN PRESCRIBED NODES ........... INDSC =',I5/
     216X,'EQ.0; IN ALL NODES'/
     216X,'EQ.1; IN PRESCRIBED NODES'///
     311X,'PRINT OF RESULTS IN PRESCRIBED FORMAT .......... IFORM =',I5/
     316X,'EQ.0; IN FORMAT  D13.5'/
     316X,'EQ.1; IN FORMAT  F10.3'///
     411X,'MAXIMUM NUMBER OF ITERATIONS ................... MAXIT =',I5/
     416X,'EQ.0; DEFAULT SET "15"'///11X,
     5'APSOLUTE ACCURACY AT ITERATIONS ......... EPSTA =',1PD10.3///
     611X,'RELATIVE ACCURACY AT ITERATIONS ........ EPSTR =',1PD10.3/
     616X,'EQ.0; DEFAULT SET "1.E-3"'///
     611X,'RELATIVE ACCURACY FOR LAGRANGE MULTIPL.. EPSTRL=',1PD10.3/
     616X,'EQ.0; DEFAULT SET "1.E-3"'///
     111X,'ITERATION METHODS EMPLOYED ..................... NJRAP =',I5/
     116X,'EQ.0; DEFAULT SET "1"'/
     116X,'EQ.1; MODIFIED NEWTON'/
     116X,'EQ.2; FULL NEWTON')
      ENDIF
      
      WRITE(3,6102) IDISJCALC,IGRAFS,NPERS,nIndGauss,nConcDiags
 6102 FORMAT(
     111X,'DISJOINT CALCULATION FOR PRESSURE AND CONC . IDISJCALC =',I5/
     211X,'STEP OF PRINTOUT FOR DISJOINT CALCULATION ..... IGRAFS =',I5/
     311X,'NUMBER OF TIME PERIODS FOR DISJOINT CALC ....... NPERS =',I5/
     411X,'PIPES IMMERSED IN TISSUE (IMM. GAUSS POINTS) nIndGauss =',I5/
     411X,'TISSUE MEAN CONCENTRATION CALCULATION ..... nConcDiags =',I5)
C      
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(1,*) IREST,NCZK,NCZR,VREM0,NPTPR
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1003) IREST,NCZK,NCZR,VREM0,NPTPR
 1003 FORMAT(3I5,D15.8,I5)
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      CALL WBROJK(KARTIC,0)
      IF(ISRPS.EQ.0)
     *WRITE(3,2003) IREST,NCZK,NCZR,VREM0
      IF(ISRPS.EQ.1)
     *WRITE(3,6003) IREST,NCZK,NCZR,VREM0
 2003 FORMAT(
     111X,'INDIKATOR IZVRSENJA PROGRAMA ................... IREST =',I5/
     116X,'EQ.0; KONTROLA ULAZNIH PODATAKA'/
     116X,'EQ.1; IZVRSENJE PROGRAMA'/
     116X,'EQ.2; RESTARTOVANJE'///
     211X,'BROJ ZADNJIH KORAKA KOJE TREBA ZAPISATI NA DISK . NCZK =',I5/
     216X,'EQ.0; ZAPISIVANJE SVIH KORAKA'///
     211X,'BROJ PREDHODNO ZAPISANIH ZADNJIH KORAKA NA DISKU  NCZR =',I5/
     216X,'KOD RESTARTOVANJA JEDNAK "NCZK" IZ PREDHODNOG RESAVANJA'///
     311X,'VREME POCETKA IZVRSENJA PROGRAMA .......... VREM0 =',1PD10.3/
     316X,'GT.0; KOD RESTARTOVANJA')  
C    211X,'BROJ CVORNIH TACAKA PRI PRED. PUSTANJU PROGRAMA  NPTPR =',I5/
C    216X,'GT.0; SAMO KOD RACUNANJA ZAPREMIN. IZVORA ZAVARIVANJA')
 6003 FORMAT(
     111X,'INDICATOR FOR JOB EXECUTION .................... IREST =',I5/
     116X,'EQ.0; CHECK OF INPUT DATA'/
     116X,'EQ.1; JOB EXECUTION'/
     116X,'EQ.2; RESTART'///
     211X,'NUMBER OF LAST WRITE STEP ....................... NCZK =',I5/
     216X,'EQ.0; WRITE ALL STEPS'///
     211X,'NUMBER OF PREWRITED LAST STEPS ON THE DISK....... NCZR =',I5/
     216X,'AT RESTART MUST BE EQUAL "NCZK" FROM EARLIER SOLVING'///
     311X,'TIME OF START JOB EXECUTION ............... VREM0 =',1PD10.3/
     316X,'GT.0; FOR RESTART')
      ENDIF
      LMAX=1
      VREME=0.
      NNDT=NPER
      IF(NSTAC.EQ.0) NDT=NNDT
      IF(NSTAC.EQ.0) GO TO 49
      LNKDT=LMAX
      LDTDT=LNKDT+NNDT
      LVDT=LDTDT+NNDT
      LMAX=LVDT+NNDT
      IF(LMAX.LE.NTOTA) GO TO 4
      IF(ISRPS.EQ.0)
     *WRITE(3,2009) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6009) LMAX,NTOTA
      STOP
    4 CALL PRKOR(A(LNKDT),A(LDTDT),A(LVDT),VREME,NNDT,NDT,0)
      LVDT=LMAX
      LMAX=LVDT+NDT
C
      IF(LMAX.LE.NTOTA) GO TO 41
      IF(ISRPS.EQ.0)
     *WRITE(3,2009) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6009) LMAX,NTOTA
      STOP
   41 CALL PRKOR(A(LNKDT),A(LDTDT),A(LVDT),VREME,NNDT,NDT,1)
CE    SPACE IN WORKING VECTOR FOR INPUT DATA
   49 CONTINUE
      call MEMORYT(LCORD,LMAX,NPT*3,NTOTA,IIZLAZ)     
C     ADRESSES IN ID MATRICES      
      call MEMORYT(LIDT,LMAX,NPT*NDIMIDG,NTOTA,IIZLAZ)
      LIDTV=LMAX
      LIDTVCELL=LMAX
      IF(MULTIMOL.GT.1) THEN 
         call MEMORYT(LIDTV,LMAX,MULTIMOL*NDIMIDG*NPT,NTOTA,IIZLAZ)
      ENDIF
      IF(MULTITIS.GT.0) THEN
         call MEMORYT(LIDTVCELL,LMAX,MULTIMOL*NPT*NDIMCELL,NTOTA,IIZLAZ)
      ENDIF 
      call MEMORYT(LIDP,LMAX,MULTIMOL*NPT*2,NTOTA,IIZLAZ)
C
      LTCONS=LIDP
      LFVPOT=LMAX
C
      IF(LMAX.LE.NTOTA) GO TO 555
      IF(ISRPS.EQ.0)
     *WRITE(3,2009) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6009) LMAX,NTOTA
 2009 FORMAT(/1X,'NEDOVOLJNA DIMENZIJA U OSNOVNOM RADNOM VEKTORU A ZA UC
     1ITAVANJE ULAZNIH PODATAKA'/1X,'POTREBNA DIMENZIJA, LMAX=',I10/1X,'
     2RASPOLOZIVA DIMENZIJA, NTOTA=',I10)
 6009 FORMAT(/1X,' UNSUFFICIENT DIMENSION OF WORKING VECTOR A FOR RE
     1AD IN INPUT DATA'/1X,' REQUIRED DIMENSION, LMAX =',I10/1X,
     2' AVAILABLE DIMENSION, NTOTA=',I10)
      STOP
  555 CONTINUE
      IF(LMAX.GE.NTOTA)THEN
        IF(ISRPS.EQ.0)
     *  WRITE(3,2009) LMAX,NTOTA
        IF(ISRPS.EQ.1)
     *  WRITE(3,6009) LMAX,NTOTA
        STOP
      ENDIF
      IIZLAZ=3
C
      call MEMORYT(LIDARCYMA,LMAX,NPT,NTOTA,IIZLAZ)
C
C     GENERAL DATA FOR COMPOSITE TISSUE(PARTITIONING,ACTIVE TRANSPORT AND SOURCES)
C     FIRST, GENERAL DATA FOR COMPOSITE AND/OR MULTIMOLECULE CASE
C
      LIPIPENODV=LMAX
      LIPIPENOD=LIPIPENODV
      LIPARTITV=LMAX
      LIACTIVEV=LMAX
      LIVSOURCEV=LMAX
      LIADHESIV=LMAX  
      call MEMORYT(LIPIPENODV,LMAX,NPT,NTOTA,IIZLAZ)                  
      call MEMORYT(LVOLFRACT,LMAX,NPT,NTOTA,IIZLAZ)
      LVOLFRACTV=LVOLFRACT
      call MEMORYT(LDIAMSMEV,LMAX,NPT,NTOTA,IIZLAZ)
      LDIAMSME=LDIAMSMEV
      call MEMORYT(LTHICKSMEV,LMAX,NPT,NTOTA,IIZLAZ)
      LTHICKSME=LTHICKSMEV
      call MEMORYT(LVOLSMEV,LMAX,NPT,NTOTA,IIZLAZ)
      LVOLSME=LVOLSMEV
      call MEMORYT(LWALLAREAV,LMAX,NPT,NTOTA,IIZLAZ)  
      LDARCYCOEFV=LMAX
      LHYDRCOEFPV=LMAX
      LHYDRCOEFCV=LMAX
      LAMIPV=LMAX
      LAMICV=LMAX
      NDIMTENSOR=2
      IF(I2D3D.EQ.2) THEN
         IF(IANIZS.EQ.2)NDIMTENSOR=3
      ELSE
         NDIMTENSOR=3
         IF(IANIZS.EQ.2)NDIMTENSOR=6
      ENDIF
C
C     BASIC DATA ABOUT MATERIAL PARAMETERS 
C
      CALL MATERIALDATA(MULTITIS,MULTIMOL,ICONVG,INDIFFUS,NDIMTENSOR,
     1     NDIMCELL,LMAX,I2D3D)        
C
      IF(ICONVG.EQ.1) THEN
         IF(ICMTABLE(1).EQ.3)
     1   call MEMORYT(LDARCYCOEFV,LMAX,NPT,NTOTA,IIZLAZ)
         IF(ICMTABLE(2).EQ.3)
     1   call MEMORYT(LAMIPV,LMAX,NPT,NTOTA,IIZLAZ)
         LAMICV=LMAX  
         IF(ICMTABLE(3).EQ.3)
     1   call MEMORYT(LAMICV,LMAX,NPT,NTOTA,IIZLAZ) 
         LHYDRCOEFPV=LMAX
         IF(ICMTABLE(4).EQ.3)
     1   call MEMORYT(LHYDRCOEFPV,LMAX,NPT,NTOTA,IIZLAZ)
         LHYDRCOEFCV=LMAX
         IF(ICMTABLE(5).EQ.3)
     1   call MEMORYT(LHYDRCOEFCV,LMAX,NPT,NTOTA,IIZLAZ)
         LDARTENSOR=LMAX
         IF(ICMTABLE(6).EQ.3)
     1   call MEMORYT(LDARTENSOR,LMAX,NDIMTENSOR*NPT,NTOTA,IIZLAZ) 
         LDARCYCA=LDARTENSOR     
      ENDIF
      LVFMULTIT=LMAX
      LDIAMCELLV=LMAX
      IF(MULTITIS.GT.0) THEN    
         call MEMORYT(LVFMULTIT,LMAX,NDIMCELL*NPT,NTOTA,IIZLAZ) 
         call MEMORYT(LDIAMCELLV,LMAX,NDIMCELL*NPT,NTOTA,IIZLAZ)
      ENDIF 
      LDPIPEEXV=LMAX 
      LDPIPECAP=LMAX
      LDCELLSV=LMAX
      LIPARTNODEV=LMAX
      LPARTNODEV=LMAX
      LIACTIVENODEV=LMAX
      LACTIVENODEV=LMAX
      LISOURCENODEV=LMAX
      LSOURCENODEV=LMAX
      LDWALLV=LMAX
      LDWALLSMEV=LMAX
      LDWALLCELL=LMAX 
      IREADDIFNODE=0 
      IF(NDIMPIPEMAX.GT.0.OR.NDIMCAPMAX.GT.0.OR.NDIMCELLMAX.GT.0.
     1 OR.NDIMPMAX.GT.0.OR.NDIMAMAX.GT.0.OR.NDIMSMAX.GT.0.OR.NDIMADHMAX.
     2 GT.0.OR.NDIMWPIPEMAX.GT.0.OR.NDIMWCAPMAX.GT.0.OR.
     3 NDIMWCELLMAX.GT.0)IREADDIFNODE=1
C
C      CHECK FOR CELL MIGRATION
C
       LIDTMIG=LMAX
       LIVMIGV=LMAX
       LVMIGV=LMAX
       IF(IMIGTOT.GT.0) THEN
          call MEMORYT(LIDTMIG,LMAX,NPT*IMIGTOT,NTOTA,IIZLAZ)
          call MEMORYT(LVFTT,LMAX,NPT*IMIGTOT,NTOTA,IIZLAZ)
          IF(IMIGNODE.GT.0) THEN
             call MEMORYT(LIVMIGV,LMAX,NPT*IMIGNODE,NTOTA,IIZLAZ)
             call MEMORYT(LVMIGV,LMAX,NPT*IMIGNODE,NTOTA,IIZLAZ)
          ENDIF 
       ENDIF
C
C     CHECK FOR ADHESION      
C
      LIADHESINODEV=LMAX
      LADHESINODEV=LMAX
      IADHIMAX=0
      DO K=1,MULTIMOL
         IADH=0
         DO I=1,2+NDIMCELL
           IF(IADHISEC(I,K).GT.0) IADH=IADH+1
         ENDDO  
         IF(IADH.GT.IADHIMAX)IADHIMAX=IADH 
      ENDDO    
      LADHICONCV=LMAX   
      IF(IADHIMAX.GT.0) THEN
          call MEMORYT(LADHICONCV,LMAX,MULTIMOL*IADHIMAX*NPT,NTOTA,
     1                 IIZLAZ)
          CALL CLEAR(A(LADHICONCV),MULTIMOL*IADHIMAX*NPT)               
      ENDIF    
      LCHTAXV=LMAX
      IF(INDCHTAXTOT.GT.0) THEN
         call MEMORYT(LCHTAXV,LMAX,INDCHTAXTOT*NPT,NTOTA,IIZLAZ)
      ENDIF    
C      
      IF(INDIFFUS.EQ.1.AND.IREADDIFNODE.EQ.1) THEN
         IF(NDIMPIPEMAX.GT.0) 
     1       call MEMORYT(LDPIPEEXV,LMAX,MULTIMOL*NPT*2,NTOTA,IIZLAZ) 
         LDPIPECAP=LMAX
         IF(NDIMCAPMAX.GT.0)
     1   call MEMORYT(LDPIPECAP,LMAX,MULTIMOL*NPT*NDIMTENSOR,NTOTA,
     2   IIZLAZ) 
         LDPIPECA=LDPIPECAP       
         LDCELLSV=LMAX
         IF(NDIMCELLMAX.GT.0)
     1   call MEMORYT(LDCELLSV,LMAX,MULTIMOL*NDIMCELLMAX*NPT,NTOTA,
     2   IIZLAZ)
         LIPARTNODEV=LMAX
         LPARTNODEV=LMAX
         IF(NDIMPMAX.GT.0) THEN
            call MEMORYT(LIPARTNODEV,LMAX,MULTIMOL*NDIMPMAX*NPT,NTOTA,
     1      IIZLAZ)
            call MEMORYT(LPARTNODEV,LMAX,MULTIMOL*NDIMPMAX*NPT,NTOTA,
     1      IIZLAZ)
         ENDIF
         LIACTIVENODEV=LMAX
         LACTIVENODEV=LMAX
         IF(NDIMAMAX.GT.0) THEN   
            call MEMORYT(LIACTIVENODEV,LMAX,MULTIMOL*NDIMAMAX*NPT,NTOTA,
     1      IIZLAZ)
            call MEMORYT(LACTIVENODEV,LMAX,MULTIMOL*NDIMAMAX*NPT*2,
     1      NTOTA,IIZLAZ)       
         ENDIF
         LISOURCENODEV=LMAX
         LSOURCENODEV=LMAX
         IF(NDIMSMAX.GT.0) THEN 
            call MEMORYT(LISOURCENODEV,LMAX,MULTIMOL*NDIMSMAX*NPT,NTOTA,
     1      IIZLAZ)
            call MEMORYT(LSOURCENODEV,LMAX,MULTIMOL*NDIMSMAX*NPT,NTOTA,
     1      IIZLAZ)        
         ENDIF
         IF(NDIMADHMAX.GT.0) THEN
            call MEMORYT(LIADHESINODEV,LMAX,MULTIMOL*NDIMADHMAX*NPT,
     1      NTOTA,IIZLAZ)
            call MEMORYT(LADHESINODEV,LMAX,MULTIMOL*NDIMADHMAX*NPT*2,
     1      NTOTA,IIZLAZ)
         ENDIF                    
         LDWALLV=LMAX
         IF(NDIMWPIPEMAX.GT.0)
     1   call MEMORYT(LDWALLV,LMAX,MULTIMOL*NPT,NTOTA,IIZLAZ) 
         LDWALLSMEV=LMAX
         IF(NDIMWCAPMAX.GT.0)
     1   call MEMORYT(LDWALLSMEV,LMAX,MULTIMOL*NPT,NTOTA,IIZLAZ)
         LDWALLCELL=LMAX
         IF(MULTITIS.GT.0.AND.NDIMWCELLMAX.GT.0)
     1      call MEMORYT(LDWALLCELL,LMAX,MULTIMOL*NDIMWCELLMAX*NPT,
     2      NTOTA,IIZLAZ)  
      ENDIF
C
C     CHECK FOR DIFFUSION WITHIN INTERIOR OF CELLS
C
      LIDVS=LMAX
      IF(INDCELLIN.GT.0) THEN
         NVSMAX=0
         NDIMVS=0
         DO NC=1,NDIMCELL
            IF(INDCELLINV(NC).GT.0) THEN
               NDIMVS=NDIMVS+1
               IF(INDCELLINV(NC).GT.NVSMAX)NVSMAX=INDCELLINV(NC)
            ENDIF
         ENDDO
        call MEMORYT(LIDVS,LMAX,MULTIMOL*NDIMVS*NVSMAX*NPT,NTOTA,IIZLAZ)
      ENDIF 
C
C     CHECK FOR LYMPHATIC SYSTEM
C
      LIDLYMPHH=LMAX
      LIDLYMPHC=LMAX
      LRVLYMPH=LMAX
      LHCOEFLYNOD=LMAX
      LHCOEFLYNODW=LMAX
      LCCOEFLYNOD=LMAX
      LCCOEFLYNODW=LMAX
      LDCOEFLYNOD=LMAX
      IF(INDLYMPH.GT.0) THEN
         IF(INDLYMPHH.GT.0)call MEMORYT(LIDLYMPHH,LMAX,NPT,NTOTA,
     1   IIZLAZ)
         IF(INDLYMPHC.GT.0)call MEMORYT(LIDLYMPHC,LMAX,MULTIMOL*NPT,
     1   NTOTA,IIZLAZ)
         call MEMORYT(LRVLYMPH,LMAX,NPT,NTOTA,IIZLAZ)
        IF(ITABLYP.EQ.0.AND.INDLYMPHH.GT.0) THEN
           call MEMORYT(LHCOEFLYNOD,LMAX,NPT*NDIMTENSOR,NTOTA,IIZLAZ)
           call MEMORYT(LHCOEFLYNODW,LMAX,NPT,NTOTA,IIZLAZ)
        ENDIF
        IF(ITABLYC.EQ.0.AND.INDLYMPHC.GT.0) THEN     
           call MEMORYT(LCCOEFLYNOD,LMAX,MULTIMOL*NDIMTENSOR*NPT,NTOTA,
     1                  IIZLAZ)
           call MEMORYT(LCCOEFLYNODW,LMAX,MULTIMOL*NPT,NTOTA,IIZLAZ)
        ENDIF
        IF(ITABLYD.EQ.0) THEN
           call MEMORYT(LDCOEFLYNOD,LMAX,NPT,NTOTA,IIZLAZ)
        ENDIF
      ENDIF
C
      CALL ULAZT1DARCY(A(LCORD),A(LIDT),A(LIDTV),A(LIDTMIG),
     1  A(LIDARCYMA),A(LIPIPENODV),IACTIVE,A(LVOLFRACT),A(LDIAMSMEV),
     2  A(LTHICKSMEV),A(LVOLSMEV),A(LWALLAREAV),A(LDARCYCOEFV),
     3  A(LAMIPV),A(LAMICV),A(LHYDRCOEFPV),A(LHYDRCOEFCV),A(LDARTENSOR),
     4  A(LIDTVCELL),A(LVFMULTIT),A(LDIAMCELLV),A(LIVMIGV),A(LVMIGV),
     5  A(LDPIPEEXV),A(LDCELLSV),A(LDPIPECAP),A(LIPARTNODEV),
     6  A(LPARTNODEV),A(LIACTIVENODEV),A(LACTIVENODEV),A(LISOURCENODEV),
     7  A(LSOURCENODEV),A(LIADHESINODEV),A(LADHESINODEV),A(LDWALLV),
     8  A(LDWALLSMEV),A(LDWALLCELL),A(LIDVS),A(LIDLYMPHH),A(LIDLYMPHC),
     9  A(LRVLYMPH),A(LHCOEFLYNOD),A(LHCOEFLYNODW),A(LCCOEFLYNOD),
     1  A(LCCOEFLYNODW),A(LDCOEFLYNOD),NPT,IPART,ISMEARED,
     2  IPARTSME,NZADVOL,JEDN,NZADP,ICONVG,ILARGEVES,NDIMIDG) 
C 
      CALL TGRAFC(A(LCORD),NPT,18)
C
      LMAXA=LMAX
      LMHT=LMAXA
      IF(IMUMPS.EQ.0) THEN
          LMAXA = LMAXA + NPT*NDIMIDT+1
          LMAX  = LMAXA + NPT*NDIMIDT+1
          IF(LMAX.LE.NTOTA) GO TO 30
          IF(ISRPS.EQ.0)
     *    WRITE(3,2009) LMAX,NTOTA
          IF(ISRPS.EQ.1)
     *    WRITE(3,6009) LMAX,NTOTA
          STOP
   30     DO 35 I=LMHT,LMAX
   35     A(I)=0. 
      ENDIF
C
CE ==================================================
CE    INPUT DATA FOR ELEMENTS
C====================================================
C
  377 CONTINUE
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
         IF(ISRPS.EQ.0)
     *   WRITE(3,2010)
         IF(ISRPS.EQ.1)
     *   WRITE(3,6010)
      ENDIF
      IZI=1
      NGET2D3D = 0
      NGET1D   = 0
      LAYER1D  = 0
      DO 50 NGE=1,NGET
C  
	ngele=nge
      IF(NGE.LE.100) GO TO 45
      IF(ISRPS.EQ.0)
     *WRITE(3,2012) NGE
      IF(ISRPS.EQ.1)
     *WRITE(3,6012) NGE
      STOP
   45 CONTINUE
C 
      CALL ISPITA (ACOZ)
      IF(INDFOR.EQ.1)
     1READ(1,*) NETIP,NET,INDAX,IZIP
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1055) NETIP,NET,INDAX,IZIP,IDIFUSE
 1055 FORMAT(I5,I10,5I5)
C   
      IF(NETIP.EQ.1.OR.NETIP.EQ.4)NGET1D  =NGET1D  +1
      IF(NETIP.EQ.2.OR.NETIP.EQ.3)NGET2D3D=NGET2D3D+1   
      IF(INDIFFUS.EQ.0)IDIFUSE=0
      IF(INDIFFUS.EQ.0. AND.IDIFUSE.EQ.1) THEN
         WRITE(3,6150)NGE
 6150    FORMAT(' ERROR IN INPUT DATA:'/
     1   ' FOR ELEMENT GROUP   NGE=',I5/
     2   ' FLAG FOR DIFFUSION IDIFUSE=1; GENERAL FLAG indiffus',
     3   ' MUST BE INPUT AS indiffus=1'/
     4   ' STOP IN MAIN PROGRAM')
         STOP
      ENDIF      
      IF(IZIP.EQ.2) IZIP=0
      IF(NETIP.EQ.1) NE1D=NET
      IF(NETIP.EQ.2) NE2D=NET
      IF(NETIP.EQ.3) NE3D=NET
      NELEDAT(NGE,1)=NETIP  
      NELEDAT(NGE,2)=NET
      NELEDAT(NGE,3)=INDAX
      NELEDAT(NGE,4)=IZIP
      NELEDAT(NGE,13)=IDIFUSE
      NELEDAT(NGELE,33)=IDEFORM
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      CALL WBROJK(KARTIC,0)
      IF(ISRPS.EQ.0)
     *WRITE(3,2014) NGE
      IF(ISRPS.EQ.1)
     *WRITE(3,6014) NGE 
      IF(ISRPS.EQ.0)
     *WRITE(3,2011) NGE,NETIP,NGE,NET,NGE,INDAX,NGE,IZIP
      IF(ISRPS.EQ.1)
     *WRITE(3,6011) NGE,NETIP,NGE,NET,INDAX,IZIP,IDIFUSE
      ENDIF
      CALL ELEMT(NETIP,1)
C
      IF (NETIP.EQ.1.OR.NETIP.EQ.4) THEN
        LAYER1D = 1
        IF(NELEDAT(NGE,10).EQ.1) GOTO 50
        CALL TGRAF1(A(LNEL1D),NBR1,NET,NGE,18,NGE)
      ELSE IF(NETIP.EQ.2) THEN
        CALL TGRAFE(A(LNEL2D),NBR2,NET,NGE,18,NGE)
      ELSE IF(NETIP.EQ.3) THEN
        CALL TGRAF3(A(LNEL3D),NBRE,NET,NGE,18,NGE)
      ENDIF
   50 CONTINUE
C
C     SET EQUATION NUMBERS FOR NODES WITH BRANCHING FOR MIXED FORMULATION
C
      LIBRANCH = LMAX
      LLAMDAV  = LMAX
      IF(ILAMDA.EQ.1) THEN
         LLAMDAV=LIBRANCH+NPT
         LMAX   =LLAMDAV+NPT
         KK=0
         DO NGE=1,NGET
            NETIP=NELEDAT(NGE,1)  
            NET  =NELEDAT(NGE,2)
            IF(NETIP.EQ.4.OR.NETIP.EQ.1) THEN
               KK=KK+1
               LNEL1D=NELEDAT(NGE,7)    
               CALL ALAMDAEQ(A(LIDT),A(LIBRANCH),A(LNEL1D),A(LIDARCYMA),
     1                      A(LLAMDAV),NET,NPT,JEDN,KK,0,NDIMIDT)
            ENDIF
         ENDDO 
C        EQUATION NUMBERS FOR LAMDA      
         CALL ALAMDAEQ(A(LIDT),A(LIBRANCH),A(LNEL1D),A(LIDARCYMA),
     1                      A(LLAMDAV),NET,NPT,JEDN,KK,1,NDIMIDT)     
      ENDIF
C
 2010 FORMAT(///'1'///,6X,'U L A Z N I   P O D A C I   O   E L E M E N T
     1 I M A'/6X,51('-'))
 6010 FORMAT(///'1'/6X,'I N P U T    D A T A    F O R    E L E M E N T
     1  G R O U P S'/6X,59('-'))
 2014 FORMAT(/' G R U P A  E L E M E N A T A   B R O J',5X,I5)
 6014 FORMAT(/' E L E M E N T  G R O U P  N U M B E R',5X,I5)
 2011 FORMAT(
     111X,'TIP KONACNOG ELEMENTA GRUPE ELEMENATA ',I6,' ... NETIP =',I5/
     116X,'EQ.1; LINIJSKI IZOPARAMETARSKI 1D ELEMENT '/
     116X,'EQ.2; CETVOROUGAONI IZOPARAM. 2D ELEMENT U RAVNI X-Y'/
     116X,'EQ.3; PROSTORNI IZOPARAMETARSKI 3D ELEMENT'///
     211X,'BROJ KONACNIH ELEMENATA GRUPE ELEMENATA ',I6,' ... NET =',I5/
     216X,'GT.0; '///
     311X,'INDIKATOR OSNOSIMETRI. ELEMENTA GRUPE ',I6,' ... INDAX =',I5/
     316X,'      (UCITAVA SE SAMO ZA GRUPU 2D ELEMENATA)'/
     316X,'EQ.0; RAVANSKI CETVOROUGAONI IZOPARAM. 2D ELEMENT'/
     316X,'EQ.1; OSNOSIM. CETV. IZOPARAM. 2D ELEMENT OKO OSE X'///
     411X,'INDIKATOR ZAPREM. IZVORA U ELEMENT. GRUPE ',I6,'  IZIP =',I5/
     416X,'EQ.0; NEMA ZAPREMINSKIH IZVORA ILI PONORA'/
     416X,'EQ.1; ZAPREMINSKI IZVORI FUNKCIJE VREMENA'/
     416X,'EQ.2; ZAPREMINSKI IZVORI FUNKCIJE TEMPERATURE')
 6011 FORMAT(
     111X,'ELEMENT TYPE FOR GROUP ',I6,' .................. NETIP =',I5/
     116X,'EQ.1; ISOPARAMETRIC 1D ELEMENT '/
     116X,'EQ.2; ISOPARAMETRIC 2D ELEMENT IN PLANE X-Y'/
     116X,'EQ.3; ISOPARAMETRIC 3D ELEMENT'///
     211X,'NUMBER OF ELEMENTS IN THE GROUP ',I6,' ........... NET =',I5/
     216X,'GT.0; '///
     311X,'INDICATOR FOR AXISYMETRIC ELEMENTS  ............ INDAX =',I5/
     316X,'(READING ONLY FOR  2D ELEMENATS)'/
     316X,'EQ.0; 2/D IN PLANE'/
     316X,'EQ.1; AXISYMETRIC '///
     411X,'INDICATOR FOR VOLUME. SOURCE ...... ............. IZIP =',I5/
     416X,'EQ.0; THERE IS NOT VOLUMETRIC SOURCE'/
     416X,'EQ.1; VOL SOURCES ARE FUNCTION OF TIME'/
     416X,'EQ.2; VOL SOURCES ARE FUNCTION OF CONCENTRATION'/
     511X,'FLAG FOR DIFFUSION WITHIN THE ELEM GROUP...... IDIFUSE =',I5/
     616X,'0-NO DIFFUSION, 1- DIFFUSION IS PRESENT'/
     711X,'IF GLOBALA PARAMETER INDIFFUS=0,IDIFUSE IS SET TO ZERO!')
 2012 FORMAT(/1X,'BROJ TIPOVA ELEMENATA NGET=',I3,3X,'-VECI OD 10;  URAD
     1ITI SLEDECE:'/5X,'POVECATI DIMENZIJU U VEKTORU NETV(10,3)- COMMON/
     2TEMPGL/,'/8X,'-DIMENZIJA MORA BITI VECA ILI JEDNAKA BROJU TIPOVA
     3ELEMENATA'/5X,'2. ZAMENITI INSTRUKCIJU .IF(NGE.LE.10) GO TO 45. U
     4MAIN-U U INSTRUKCIJU:'/8X,'.IF(NGE.LE.NDIM) GO TO 45. GDE JE NDIM
     5-BROJ NA KOJI JE DIMENZIJA POVECANA')
 6012 FORMAT(/1X,'BROJ TIPOVA ELEMENATA NGET=',I3,3X,'-VECI OD 100;',
     1'  URADITI SLEDECE:'/5X,'POVECATI DIMENZIJU U MATRICI',
     2' NELEDAT(100,50)- COMMON/ELEMENTS2D3D/'/8X,'-DIMENZIJA MORA BITI'
     3,' VECA ILI JEDNAKA BROJU TIPOVA ELEMENATA'/
     4 5X,'2. ZAMENITI INSTRUKCIJU .IF(NGE.LE.100) GO TO 45. U
     4 MAIN-U U INSTRUKCIJU:'/8X,'.IF(NGE.LE.NDIM) GO TO 45. GDE JE NDIM
     5-BROJ NA KOJI JE DIMENZIJA POVECANA')
C     END FOR DATA ABOUT ELEMENT GROUPS

C
C     DATA FOR CELLS AND CAPILLARIES
C  
      CALL ISPITA (ACOZ)
      READ(ACOZ,1056) MODCELL,NCAPILARY,NCELL,INTRACELL,NPMAXCAP,
     1             NPMAXCELL,ICELL2D3D,IWALL,NZADW,HMODEL,NZADO
 1056 FORMAT(9I5,F10.2,I5)    
      WRITE(3,6056)MODCELL,NCAPILARY,NCELL,INTRACELL,NPMAXCAP,
     1             NPMAXCELL,ICELL2D3D,IWALL,NZADW,HMODEL,NZADO
      IF(ICELL2D3D.EQ.0)ICELL2D3D=2
 6056 FORMAT(/6X,'I N P U T  D A T A  F O R  C A P I L L A R I E S',
     1  '  A N D   C E L L S'/6X,59('-')//
     2 11X,'TYPE OF THE CELL MODEL (1-2D AXIAL, 2-2D CIRCULAR, 3-3D)..',
     3 '.. MODCELL=',I5/
     411X,'NUMBER OF CAPILLARIES',24('.'), ' NCAPILARY=',I5/
     516X,'IN CASE OF WALL MODEL USED (IWALL.EQ.1), THIS IS'/
     616X,'NUMBER OF COLLAGEN SLEEVES'/ 
     511X,'NUMBER OF CELLS',29('.'), '      NCELL=',I5/
     511X,'MODELING OF CELLS INTERIOR (0-NO, 1-YES)..... INTRACELL=',I5/
     616X,'IF INTRACELL.EQ.0 - NO MESH INSIDE ANY CELL'/
     611X,'MAX NUMBER OF NODES FOR ANY CAPILLARY',9('.'),' NPMAXCAP=',
     7    I5/
     611X,'MAX NUMBER OF NODES FOR ANY CELL MEMBRANE',5('.'),
     8    'NPMAXCELL=',I5/
     711X,'FLAG FOR 2D-3D CELL (2-2D,3-3D)',15('.'),'ICELL2D3D=',I5/
     811X,'WALL MODELING FLAG (0-NO WALL MODEL, 1-YES)...... IWALL=',I5/
     911X,'NO OF NODES WITH PRESCRIBED CONCENTRATION........ NZADW=',I5/
     116X,'APPLICABLE WHEN WALL MODEL IS USED (IWALL=1)'/
     611X,'MODEL THICKNESS...............................HMODEL=',D12.3/
     711X,'NO OF NODES WITH PRESCR OUT CONCENTRATION........ NZADO=',I5)
C
CE     DATA ABOUT CONDUCTION COEFICIENT AND SPECIFIC HEAT
CE     TEMPERATURE DEPENDENCE
C
C     MATERIAL DATA ARE READ AS CONSTANT OR AT NODES ---------- SKIPPED PART ABOUT MATERIALS
      IMATERREAD=0
      IF(IMATERREAD.EQ.1) GO TO 473
      
      CALL ISPITA(ACOZ)
C     MATNEW JE VESTACKI PARAMETAR DA BI SE PODACI O MATERIJALU CITALI U ULMATERT     
      MATNEWUSE=1
      IF(IDARCY.EQ.0.AND.MATNEWUSE.EQ.0) THEN
        IF(INDFOR.EQ.1)
     1  READ(1,*) NANLK,NTABK,MAXTK,NANLC,NTABC,MAXTC
        IF(INDFOR.EQ.2)
     1  READ(ACOZ,1065) NANLK,NTABK,MAXTK,NANLC,NTABC,MAXTC
 1065   FORMAT(10I5)
      ELSE
        READ(ACOZ,1065)maxPmatC,maxPmatD,maxPmatH
c   
	  MAXTK=maxPmat
	  NTABK=NMATT
	  NANLK=0
        NANLC=0
	  NTABC=0
	  MAXTC=0
        IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
           CALL WBROJK(KARTIC,0)
           write(3,6075)NMATT,maxPmatC,maxPmatD,maxPmatH
 6075      format(6X,' BASIC DATA ABOUT MATERIAL PARAMETER TABLES: ',
     1    ' DARCY AND DIFFUSION COEFFICIENTS'/
     2    6X,' N O T  U S E D  F O R  1D  E L E M E N T S (EXCEPT FOR',
     3     ' HEAT TRANSFER'/
     2     10X,'(	DATA ARE GIVEN IN TABLE FORM )'/  7X,58('-')///
     1     11X,' TOTAL NUMBER OF TABLES FOR MATERIAL PARAMETERS....',
	2     'NMATT=',I5/
     3    11X,'MAXIMUM NUMBER OF PAIRS for DARCY Coefficints,maxPmatC=',
     4     I5/ 
     1     11X,'MAXIMUM NUMBER OF PAIRS "CONCENTRATION-DIFF COEFF" ...',
     2     'maxPmatD =',I5/
     1     11X,'MAXIMUM NUMBER OF PAIRS "TEMPERATURE-RO,C,K" ...',
     2     'maxPmatH =',I5)
	  ENDIF
	  NUMMAT=nmatt
        LMATER=LMAX
	  LMATFUN=LMATER+NUMMAT
	  LMAX=LMATFUN+NUMMAT*2*maxPmat
	  LMATCONV=LMAX
	  LMATDIF=LMAX
	  LMATFUNC=LMAX
	  LMATFUND=LMAX
	  ! CONVECTION
	  IF(NMATTCONV.NE.0.AND.maxPmatC.GT.0) THEN
	    CALL MEMORYT(LMATCONV,LMAX,NMATTCONV,NTOTA,IIZLAZ)
	    CALL MEMORYT(LMATFUNC,LMAX,NMATTCONV*2*maxPmatC,NTOTA,IIZLAZ)
	    IF(LMAX.gt.NTOTA) then
            WRITE(3,6009) LMAX,NTOTA
            STOP
	    ENDIF         
	    CALL ULMATERT(A(LMATCONV),A(LMATFUNC),NMATTCONV,maxPmatC,1)
	  ENDIF
	  ! DIFFUSION
	  IF(NMATTDIF.NE.0.AND.maxPmatD.GT.0) THEN
	    CALL MEMORYT(LMATDIF,LMAX,NMATTDIF,NTOTA,IIZLAZ)
	    CALL MEMORYT(LMATFUND,LMAX,NMATTDIF*2*maxPmatD,NTOTA,IIZLAZ)
	    IF(LMAX.gt.NTOTA) then
            WRITE(3,6009) LMAX,NTOTA
            STOP
	    ENDIF                     
	    CALL ULMATERT(A(LMATDIF),A(LMATFUND),NMATTDIF,maxPmatD,2)	   
	  ENDIF
		! HEAT TRANSFER
		LMATHEAT=LMAX
		LMATFUNHRO=LMAX
		LMATFUNHSH=LMAX
		LMATFUNHK=LMAX
	  IF(NMATTHEAT.GT.0) THEN   	                            
          CALL MEMORYT(LMATHEAT,LMAX,NMATTHEAT,NTOTA,IIZLAZ)
          CALL MEMORYT(LMATFUNHRO,LMAX,NMATTHEAT*2*maxPmatH,NTOTA
     1  ,IIZLAZ)
          CALL MEMORYT(LMATFUNHSH,LMAX,NMATTHEAT*2*maxPmatH,NTOTA
     1  ,IIZLAZ)
          CALL MEMORYT(LMATFUNHK,LMAX,NMATTHEAT*2*maxPmatH,NTOTA
     1  ,IIZLAZ)
	    IF(LMAX.gt.NTOTA) then
            WRITE(3,6009) LMAX,NTOTA
            STOP
	    ENDIF                     
	    CALL ULMATERTH(A(LMATHEAT),A(LMATFUNHRO),A(LMATFUNHSH),
     1                   A(LMATFUNHK),NMATTHEAT,maxPmatH)	   
	  ENDIF
	  JEDNMAX = JEDN
        NWKMAX  = NWK
	  GO TO 473 
	ENDIF
C 
      IF((NULAZ.EQ.1.OR.NULAZ.EQ.3).AND.NDS.EQ.0.AND.IDARCY.EQ.0) THEN
      CALL WBROJK(KARTIC,0)
      IF(ISRPS.EQ.0.AND.NDS.EQ.0)
     *WRITE(3,2005) NANLK,NTABK,MAXTK
      IF(ISRPS.EQ.1.AND.NDS.EQ.0)
     *WRITE(3,6005) NANLK,NTABK,MAXTK
 2005 FORMAT(6X,' OSNOVNI PODACI O ZAVISNOSTI MATERIJALNIH KONSTANTI OD
     1TEMPERATURE'/7X,65('-')///
     116X,'ZAVISNOST KOEFICIJENATA PROVODJENJA OD TEMPERATURE:'/
     116X,'(ZA IANIZ.EQ.1 BROJ ZADATIH FUNKCIJA JE VECI OD NMATT)'///
     111X,'BROJ ANALITICKI ZADATIH FUNKCIJA ............ NANLK =',I5/
     116X,'EQ.0; SVE FUNKCIJE ZADATE TABELARNO'///
     211X,'BROJ TABELARNO ZADATIH FUNKCIJA ............. NTABK =',I5/
     216X,'EQ.0; SVE FUNKCIJE ZADATE ANALITICKI'///
     311X,'MAX. BROJ TACAKA ZA DEFINISANJE KRIVE AK(T) . MAXTK =',I5/
     316X,'EQ.0; SVE FUNKCIJE ZADATE ANALITICKI'/
     316X,'EQ.1; KOEFICIJENTI PROVODJENJA SU LINEARNI'/
     316X,'GT.1; KOEFICIJENTI PROVODJENJA SU NELINEARNI')
 6005 FORMAT(6X,' BASIC DATA ABOUT DEPENDENCE OF MATERIAL',
     1' CONSTANTS ON CONCENTRATION'/7X,58('-')///
     116X,' DEPENDENCE OF DIFFUSION COEFICIENT ON CONCENTRATION:'///
     111X,'NUMBER OF FUNCTIONS GIVEN IN ANALITICAL FORM ... NANLK =',I5/
     116X,'EQ.0; ALL FUNCTIONS ARE GIVEN IN TABLE FORM'///
     211X,'NUMBER OF FUNCTIONS GIVEN AS TABLES ............ NTABK =',I5/
     216X,'EQ.0; ALL FUNCTIONS ARE GIVEN IN ANALITICAL FORM'///
     311X,'MAX. NO. OF POINTS USED FOR ANY FUNCTION .... MAXTK =',I5/
     316X,'EQ.0; ALL FUNCTIONS ARE GIVEN IN ANALITICAL FORM'/
     316X,'EQ.1; DIFFUSION COEFICIENTS ARE CONSTANT'/
     316X,'GT.1; DIFFUSION COEFICIENTS DEPEND ON CONCENTRATION')
      IF(ISRPS.EQ.0.AND.NDS.EQ.0)
     *WRITE(3,2225) NANLC,NTABC,MAXTC
      IF(ISRPS.EQ.1.AND.NDS.EQ.0)
     *WRITE(3,6225) NANLC,NTABC,MAXTC
 2225 FORMAT(////
     416X,'ZAVISNOST KOEFICIJENATA SPECIFICNE TOPLOTE OD TEMPERATURE:'/
     416X,'(ZA NSTAC.EQ.0 NE ZADAJU SE FUNKCIJE SPECIFICNE TOPLOTE)'/
     416X,'(ZA NSTAC.EQ.1 BROJ ZADATIH FUNKCIJA JE JEDNAK NMATT)'///
     411X,'BROJ ANALITICKI ZADATIH FUNKCIJA ............ NANLC =',I5/
     416X,'EQ.0; SVE FUNKCIJE ZADATE TABELARNO'///
     511X,'BROJ TABELARNO ZADATIH FUNKCIJA ............. NTABC =',I5/
     516X,'EQ.0; SVE FUNKCIJE ZADATE ANALITICKI'///
     611X,'MAX. BROJ TACAKA ZA DEFINISANJE KRIVE CP(T) . MAXTC =',I5/
     616X,'EQ.0; SVE FUNKCIJE ZADATE ANALITICKI'/
     616X,'EQ.1; KOEFICIJENTI SPEC. TOPLOTE SU LINEARNI'/
     616X,'GT.1; KOEFICIJENTI SPEC. TOPLOTE SU NELINEARNI')
 6225 FORMAT(////
     416X,'TEMPERATURE DEPENDENCE SPECIFIC HEAT COEFICIENT:'/
     416X,'(FOR NSTAC.EQ.0 FUNCTIONS OF SPECIFIC HEAT ARE NOT GIVEN)'/
     416X,'(FOR NSTAC.EQ.1 NUMBER OF GIVEN FUNCTIONS ARE NMATT)'///
     411X,'NUMBER OF FUNCTION GIVEN IN ANALITICAL FORM .... NANLC =',I5/
     416X,'EQ.0; ALL FUNCTIONS ARE GIVEN AS TABLE'///
     511X,'NUMBER OF FUNCTION GIVEN AS TABLE .............. NTABC =',I5/
     516X,'EQ.0; ALL FUNCTION ARE GIVEN IN ANALITICAL FORM'///
     611X,'MAX. NO. OF POINTS USED FOR DEFIN. FUNCTION .... MAXTC =',I5/
     616X,'EQ.0; ALL FUNCTION ARE GIVEN IN ANALITICAL FORM'/
     616X,'EQ.1; SPECIFIC HEAT COEFICIENTS ARE LINEAR'/
     616X,'GT.1; SPECIFIC HEAT COEFICIENTS ARE NONLINEAR')
      ENDIF
C
c
CE    POINTERS FOR DATA ABOUT MATERIALS-for original PAKT-not used
c     for difusion
c
      lmaxdifus=lmax
      INTABK=NTABK
      IF(NTABK.EQ.0) INTABK=1
      LIBFK=LMAX
      LFAKP=LIBFK+NMATT*3
      LGUSM=LFAKP+NMATT*3
      LTOPM=LGUSM+NMATT
      LTMNM=LTOPM+NMATT
      LNTAKV=LTMNM+NMATT
      LTABK=LNTAKV+INTABK
      LNTACV=LTABK+INTABK*MAXTK*2
      LTABC=LNTACV
      IF(NSTAC.GT.0) LTABC=LNTACV+NMATT
      LMAX=LTABC
      IF(NSTAC.GT.0) LMAX=LTABC+NMATT*MAXTC*2
      IF(LMAX.LE.NTOTA) GO TO 8
      IF(ISRPS.EQ.0)
     *WRITE(3,2009) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6009) LMAX,NTOTA 
      STOP
    8 continue
      if(NDS.eq.0.AND.idarcy.eq.0)CALL ULAZT2(A(LTABK),A(LTABC),
     1    A(LNTAKV), A(LNTACV),
     1A(LIBFK),A(LFAKP),A(LGUSM),A(LTOPM),A(LTMNM),INTABK)
C
CE    INPUT DATA ABOUT INITIAL VALUES AND BOUNDARY CONDITIONS
CE    GENERAL DATA
C
  473 CONTINUE
 
      JEDNMAX = JEDN
      NWKMAX  = NWK     
      NTEMP=0
      !IF(NZADP.EQ.0) GO TO 9 
      
C     TIME FUNCTIONS
      CALL UCVRFN
	LNZADJ=LMAX
C 
    9 CONTINUE
C
C     PRESCRIBED VALUES
C
      NZADLYMPHMX=0
      IF(MULTIMOL.EQ.1) THEN
C        ONE MOLECULE CASE      
         LZADATA1=LMAX
         LZADATA0=LMAX
         LZADAVXYZ=LMAX
         TIME=0.D0
         IF(NZADP.gt.0)THEN
            CALL UCZADP
            LZADATA1=LMAX
            LZADATA0=LZADATA1+NZADP
            LZADAVXYZ=LZADATA0+NZADP
            LMAX=LZADAVXYZ
            ! NO PRESCRIBED VELOCITIES IN THIS CODE
            IF(IPRINTVEL.GT.0.AND.ICONV.GT.0)LMAX=LZADAVXYZ+6*NPT
            CALL ZADATAF(A(LNZADJ),A(LZADFM),A(LZADATA1),TIME,NZADP,
     1      NTABFT,MAXTFT,LNTFT,LTABFT)
         ENDIF
         IF(NZADLYMPH.GT.0) THEN
            MM=1
            KKK=1
            NZADLYMPHMX=NZADLYMPH
            NZADPLYV(1)=NZADLYMPH
            CALL MEMORYT(LINPUTLY,LMAX,NZADLYMPH*3,NTOTA,IIZLAZ)
            CALL MEMORYT(LZADVALUELY,LMAX,NZADLYMPH,NTOTA,IIZLAZ)
            CALL MEMORYT(LZADALYMH1,LMAX,NZADLYMPH,NTOTA,IIZLAZ)
            CALL MEMORYT(LZADALYMH0,LMAX,NZADLYMPH,NTOTA,IIZLAZ)
                 CALL UZADATLY(A(LINPUTLY),A(LZADVALUELY),NZADPV,
     1           NZADLYMPH,NZADLYMPHMX,MULTIMOL,MM,KKK) 
            CALL ZADATALY(A(LINPUTLY),A(LZADVALUELY),A(LZADALYMH1),
     1           TIME,NZADLYMPHMX,NZADLYMPH,NTABFT,MAXTFT,LNTFT,LTABFT,
     2           MULTIMOL,MM)
         ENDIF    
C         IF(INDCELLIN,NZADVS FOR INTERNAL CELL DIFFUSION
      ELSE
C        MULTIMOLECULE CASE
        NZADPMAX=0
        DO I=1,MULTIMOL
           IF(NZADPV(I).GT.NZADPMAX) NZADPMAX=NZADPV(I)
        ENDDO  
        call MEMORYT(LZADATM0,LMAX,MULTIMOL*NZADPMAX,NTOTA,IIZLAZ) 
        call MEMORYT(LZADATM1,LMAX,MULTIMOL*NZADPMAX,NTOTA,IIZLAZ)
        call MEMORYT(LNZADNODF,LMAX,MULTIMOL*3*NZADPMAX,NTOTA,IIZLAZ)
        call MEMORYT(LZADVALUE,LMAX,MULTIMOL*NZADPMAX,NTOTA,IIZLAZ) 
        KKK=0
        DO MM=1,MULTIMOL
           CALL UZADATAMULT(A(LNZADNODF),A(LZADVALUE),NZADPMAX,
     1     NZADPV(MM),MULTIMOL,MM,KKK)
        ENDDO
        TIME=0.D0
        DO MM=1,MULTIMOL           
            CALL ZADATAFM(A(LNZADNODF),A(LZADVALUE),A(LZADATM1),TIME,
     1      NZADPMAX,NZADPV(MM),NTABFT,MAXTFT,LNTFT,LTABFT,MULTIMOL,MM) 
        ENDDO
        IF(NZADLYMPH.GT.0) THEN
            NZADLYMPHMX=0
            DO I=1,MULTIMOL
              IF(NZADPLYV(MM).GT.NZADLYMPHMX)NZADLYMPHMX=NZADPLYV(MM)
            ENDDO
            CALL MEMORYT(LINPUTLY,LMAX,MULTIMOL*3*NZADLYMPHMX,NTOTA,
     1           IIZLAZ)
            CALL MEMORYT(LZADVALUELY,LMAX,MULTIMOL*NZADLYMPHMX,NTOTA,
     1      IIZLAZ)
            CALL MEMORYT(LZADALYMH1,LMAX,MULTIMOL*NZADLYMPHMX,NTOTA,
     1           IIZLAZ)
            CALL MEMORYT(LZADALYMH0,LMAX,MULTIMOL*NZADLYMPHMX,NTOTA,
     1           IIZLAZ)
            KKK=0
            DO MM=1,MULTIMOL
              NZADLYMPH=NZADPLYV(MM)
              IF(NZADLYMPH.GT.0) THEN
                 KKK=KKK+1
                 CALL UZADATLY(A(LINPUTLY),A(LZADVALUELY),NZADPV,
     1           NZADLYMPH,NZADLYMPHMX,MULTIMOL,MM,KKK)
              ENDIF
            ENDDO
            DO MM=1,MULTIMOL
               NZADLYMPH=NZADPV(MM)
               IF(NZADLYMPH.GT.0) THEN
                 CALL ZADATALY(A(LINPUTLY),A(LZADVALUELY),A(LZADALYMH1),
     1           TIME,NZADLYMPHMX,NZADLYMPH,NTABFT,MAXTFT,LNTFT,LTABFT,
     2           MULTIMOL,MM)
               ENDIF
            ENDDO
         ENDIF
      ENDIF
C
C     PRESCRIBED VALUES FOR CELL INTERIOR
C
      IF(INDCELLIN.GT.0.AND.NZADVS.GT.0) THEN
         call MEMORYT(LNZADNODVS,LMAX,NZADVS*4,NTOTA,IIZLAZ)
         call MEMORYT(LNZADFVS,LMAX,NZADVS,NTOTA,IIZLAZ)
         call MEMORYT(LZADVALUEVS,LMAX,NZADVS,NTOTA,IIZLAZ)
         call MEMORYT(LZADATAVS0,LMAX,NZADVS,NTOTA,IIZLAZ)
         call MEMORYT(LZADATAVS,LMAX,NZADVS,NTOTA,IIZLAZ)
         CALL ULZADVS(A(LNZADNODVS),A(LNZADFVS),A(LZADVALUEVS),A(LIDVS),
     1        MULTIMOL,NDIMCELL,NDIMVS,NVSMAX,NPT,NTABFT,NZADVS)
        CALL ZADATAVS(A(LNZADFVS),A(LZADVALUEVS),A(LZADATAVS),TIME,
     1       MULTIMOL,NDIMCELL,NDIMVS,NVSMAX,NPT,NTABFT,MAXTFT,LNTFT,
     2       LTABFT,NZADVS) 
      ENDIF        
C          
C     TIME FUNCTION FOR SYSTEMIC CONCENTRATION
C
      IF(ISMEARED.EQ.1) THEN
C
C        CASE OF ONE MOLECULE
         IF(MULTIMOL.EQ.1) THEN
	      CALL ISPITA(ACOZ)
            READ(ACOZ,1030)NPTIMESYS
 1030       FORMAT(I5)
            WRITE(3,6058)NPTIMESYS
 6058       FORMAT(/6X,'I N P U T  D A T A  F O R  T I M E',
     1      '  F U N C T I O N',
     1      '  FOR SYSTEMIC C O N C E N T R A T I O N'/6X,59('-')//
     2      7X,'NUMBER OF TIME POINTS =',I5/
     3      '         TIME      CONCENTRATION')
            LTIMESYS=LMAX
            LMAX=LTIMESYS+NPTIMESYS*2
C   
            KK=LTIMESYS
            DO N=1,NPTIMESYS
	         CALL ISPITA(ACOZ)
               READ(ACOZ,1031)A(KK),A(KK+1)     
               WRITE(3,6059)A(KK),A(KK+1)  
 1031          FORMAT(2F10.2)
               WRITE(3,6059)A(KK),A(KK+1)
 6059          FORMAT(5X,D10.3,5X,D10.3)
               KK=KK+2    
            ENDDO
         ELSE
C
C        MULTIMOLECULE CASE
            CALL ISPITA(ACOZ)
            READ(ACOZ,1050)(NPTIMESYSV(I),I=1,MULTIMOL)
 1050       FORMAT(10I5)
            WRITE(3,6060)(NPTIMESYSV(I),I=1,MULTIMOL)  
 6060       FORMAT(/6X,'NUMBER OF POINTS AT CURVES FOR SYSTEMIC',
     1      ' CONCENTRATIONS FOR EACH MOLECULE'/
     2      6X,10I5)
            NPTSYSMAX=0
            DO MM=1,MULTIMOL
               IF(NPTIMESYSV(MM).GT.NPTSYSMAX)NPTSYSMAX=NPTIMESYSV(MM)
            ENDDO
           call MEMORYT(LZADSYSV,LMAX,MULTIMOL*2*NPTSYSMAX,NTOTA,IIZLAZ)
            DO MM=1,MULTIMOL
               CALL ULAZSYSMULT(A(LZADSYSV),NPTSYSMAX,NPTIMESYSV(MM),
     1                          MULTIMOL,MM) 
            ENDDO  
         ENDIF
      ENDIF
C
C     TIME FUNCTIONS FOR SOURCES IN CONTINUUM
C
      IF(IVSOURCE.EQ.1) THEN
C        TIME FUNCTION FOR SYSTEMIC CONCENTRATION
	   CALL ISPITA(ACOZ)
         READ(ACOZ,1060)NTIMEFSOURCE,NPTMXSOURCE
 1060    FORMAT(2I5)
         WRITE(3,6068)NTIMEFSOURCE,NPTMXSOURCE
         LITIMESOURCE=LMAX
         LTIMESOURCE=LITIMESOURCE+NTIMEFSOURCE
         LMAX=LTIMESOURCE+NTIMEFSOURCE*NPTMXSOURCE*2
          CALL ULTABFSUB(A(LITIMESOURCE),A(LTIMESOURCE),NTIMEFSOURCE,
     1         NPTMXSOURCE,TMAX)               
C   
 6068    FORMAT(/6X,'TIME FUNCTIONS FOR SOURCES IN CONTINUUM'/
     1   6X,'NUMBER OF TIME FUNCTIONS...................NTIMEFSOURCE=',
     2   I5/
     2   6X,'MAX NUMBER OF TIME POINTS ON ANY FUNCTION...NPTMXSOURCE=',
     3   I5)
      ENDIF       
C     
	CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(1,*) NPOC,NQP,MAXTQP,NHP,MAXTHP,NTOK,MAXTOK,NQE,MAXTQE,
     1NHR,MAXTHR
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1005) NPOC,NQP,MAXTQP,NHP,MAXTHP,NTOK,MAXTOK,NQE,MAXTQE,
     1NHR,MAXTHR
C     1READ(ACOZ,1025) NPOC,NQP,MAXTQP,NHP,MAXTHP,NTOK,MAXTOK,NQE,MAXTQE,
c     1NHR,MAXTHR
	IF(NPOC.EQ.0.AND.NDS.NE.0) NPOC=1
 1025 FORMAT(15I5)
CE    LIMITATIONS FOR POTENTIAL FLOW
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      CALL WBROJK(KARTIC,0)
      IF(ISRPS.EQ.0)
     *WRITE(3,2020)NPOC,NQP,MAXTQP,NHP,MAXTHP
      IF(ISRPS.EQ.1)
C     *WRITE(3,6020)NPOC,NQP,MAXTQP,NHP,MAXTHP
     *WRITE(3,6020)NPOC,NQP,MAXTQP 
 2020 FORMAT(' O P S T I  P O D A C I  Z A  P O C E T N E  I  G R A N I
     1C N E  U S L O V E'/' ',75('-')///
     111X,'UKUPAN BROJ RAZLICITIH POCETNIH TEMPERATURA ..... NPOC =',I5/
     116X,'EQ.0; STACIONARNO LINEARNO STANJE '/
     116X,'EQ.1; SVE POCETNE TEMPERATURE SU ISTE'/
     116X,'EQ.2; POCETNE TEMPERATURE SU RAZLICITE'///
     211X,'BROJ RAZLICITIH FUNKCIJA FLUKSEVA NA POVRSINI .... NQP =',I5/
     216X,'EQ.0; NEMA FLUKSEVA NA POVRSINI TELA'//
     311X,'MAX. BROJ TACAKA ZA DEF. FUNK. POV. FLUKSEVA .. MAXTQP =',I5/
     316X,'EQ.0; NEMA FLUKSEVA NA POVRSINI TELA'/
     316X,'EQ.1; FLUKSEVI SU KONSTANTNI TOKOM VREMENA'/
     316X,'GT.1; FLUKSEVI SU PROMENLJIVI TOKOM VREMENA'///
     411X,'BROJ RAZL. FUNKCIJA KOEF. PRELAZA TOPLOTE ........ NHP =',I5/
     416X,'EQ.0; NEMA KONVEKCIJE NA POVRSINI TELA'//
     511X,'MAX. BROJ TACAKA ZA DEF. FUNK. KOEF. PRELAZA .. MAXTHP =',I5/
     516X,'EQ.0; NEMA KONVEKCIJE NA POVRSINI TELA'/
     516X,'EQ.1; KOEF. PRELAZA NE ZAVISE OD TEMPERATURE'/
     516X,'GT.1; KOEF. PRELAZA SU FUNKCIJE TEMPERATURE')
6020  FORMAT(6X,'INITIAL VELUES AND BOUNDARY CONDITIONS  --  GENERAL DAT
     1A:'/
     16X,53('-')///
     111X,'TOTAL NUMBER OF DIFERENT INITIAL CONCENTRATIONS.. NPOC =',I5/
     116X,'EQ.0; LINEAR STEADY STATE'/
     116X,'EQ.1; ALL INITIAL CONCENTRATIONS ARE THE SAME'/
     116X,'GT.1 -INITIAL CONCENTRATIONS ARE GIVEN FOR EACH POINT'///
     211X,'NUMBER OF DIFERENT CONCENTRATION FLUX FUNCTIONS .. NQP =',I5/
     216X,'EQ.0; THERE IS NO SURFACE FLUX'//
     311X,'MAX. NO. OF VALUES FOR SURFACE FLUX DEFINITION  MAXTQP =',I5/
     316X,'EQ.0; THERE IS NO SURFACE FLUX'/
     316X,'EQ.1; SURFACE FLUXES ARE CONSTANT'/
     316X,'GT.1; SURFACE FLUXES ARE FUNCTION OF TIME')
      IF(ISRPS.EQ.0) THEN
      WRITE(3,2226) NTOK,MAXTOK,NQE,MAXTQE,NHR,MAXTHR
      WRITE(3,2227)
      ENDIF
 2226 FORMAT(///
     611X,'BROJ RAZL. FUNKCIJA ZA TEMPERATURE OKOLINE ...... NTOK =',I5/
     616X,'EQ.0; NEMA KONVEKCIJE NA POVRSINI TELA'//
     711X,'MAX. BROJ TACAKA ZA DEF. FUNK. TEMP. OKOLINE .. MAXTOK =',I5/
     716X,'EQ.0; NEMA KONVEKCIJE NA POVRSINI TELA'/
     716X,'EQ.1; TEMPERATURE SU KONSTANTNE TOKOM VREMENA'/
     716X,'GT.1; TEMPERATURE SU PROMENLJIVE TOKOM VREMENA'///
     811X,'BROJ RAZL. FUNK. TOPLOTNIH IZVORA UNUTAR TELA .... NQE =',I5/
     816X,'EQ.0; NEMA TOPLOTNIH IZVORA (PONORA)'//
     911X,'MAX. BROJ TACAKA ZA DEF. FUNK. TOPL. IZVORA ... MAXTQE =',I5/
     916X,'EQ.0; NEMA IZVORA (PONORA) U TELU'/
     916X,'EQ.1; FUNKCIJA TOPL. IZVORA JE LINEARNA'/
     916X,'GT.1; FUNKCIJA TOPL. IZVORA JE NELINEARNA'///
     411X,'BROJ RAZL. FUNKCIJA KOEF. EMISIVNOSTI ............ NHR =',I5/
     416X,'EQ.0; NEMA ZRACENJA NA POVRSINI TELA'//
     511X,'MAX. BROJ TACAKA ZA DEF. FUNK. KOEF. EMISIVN .. MAXTHR =',I5)
 2227 FORMAT(
     516X,'EQ.0; NEMA ZRACENJA NA POVRSINI TELA'/
     516X,'EQ.1; KOEF. EMISIVNOSTI NE ZAVISE OD TEMPERATURE'/
     516X,'GT.1; KOEF. EMISIVNOSTI SU FUNKCIJE TEMPERATURE')
 6226 FORMAT(///
     611X,'NO. OF DIFERENT VELUES FOR ENVIRONMENT TEMP. .... NTOK =',I5/
     616X,'EQ.0; THERE IS NOT CONVECTION ON SURFACE'//
     711X,'MAX. NUMBER OF VELUES FOR ENVIROM. TEMP. DEF. . MAXTOK =',I5/
     716X,'EQ.0; THERE IS NOT CONVECTION ON SURFACE'/
     716X,'EQ.1; TEMPERATURES ARE CONSTANT WITHIN TIME'/
     716X,'GT.1; TEMPERATURES ARE VARIABLE WITHIN TIME'///
     811X,'NUMBER OF VOLUMETRIC HEAT SOURCES (SINKS) ........ NQE =',I5/
     816X,'EQ.0; THERE IS NOT VOLUMETRIC HEAT SOURCES (SINKS)'//
     911X,'MAX. NUMBER OF VELUES FOR SOURCES FUNCT. DEF. . MAXTQE =',I5/
     916X,'EQ.0; THERE IS NOT VOLUMETRIC HEAT SOURCES'/
     916X,'EQ.1; VOLUMETRIC HEAT SOURCE FUNCTION ARE LINEAR'/
     916X,'GT.1; VOLUMETRIC HEAT SOURCE FUNCTION ARE NONLINEAR'///
     411X,'NO. OF DIFERENT VELUES FOR EMISSIVITY COEFICIENT . NHR =',I5/
     416X,'EQ.0; THERE IS NOT RADIATION ON SURFACE'//
     511X,'MAX. NUMBER OF VELUES FOR EMISSIVITY COEF. .... MAXTHR =',I5)
 6227 FORMAT(
     516X,'EQ.0; THERE IS NOT RADIATION ON SURFACE'/
     516X,'EQ.1; EMISSIVITY COEF. ARE NOT DEPENDENT OF TEMPERATURE'/
     516X,'GT.1; EMISSIVITY COEFICIENTS ARE FUNCTION OF TEMPERATURE')
      ENDIF
CE    READ FUNCTIONS OF SOURCES AND SINKS
      TMAX=VREME
      IF(NQE.EQ.0) GO TO 90
      IBR = 0
      ITMAX = 0
      LNTAQE = LMAX
      LQEFN = LNTAQE + NQE
      LMAX = LQEFN + 2*NQE*MAXTQE
      IF(LMAX.LE.NTOTA) GO TO 80
      IF(ISRPS.EQ.0)
     *WRITE(3,2009) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6009) LMAX,NTOTA
      STOP
   80 IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     *WRITE(3,2008)
      IF(ISRPS.EQ.1)
     *WRITE(3,6008)
      ENDIF
 2008 FORMAT(////6X,'FUNKCIJE ZAVISNOSTI IZVORA (PONORA) TOPLOTE OD VREM
     1ENA'/6X,54('-'))
 6008 FORMAT(////6X,'FUNCTIONS OF TEMPERATURE SOURCES (SINKS) TIME DEPEN
     1DENCE'/6X,56('-'))
      CALL ULTABF(A(LNTAQE),A(LQEFN),NQE,MAXTQE,IBR,IMAX,ITMAX,TFMX,
     1TMAX,IZI)
      IF(IBR.EQ.0.OR.ITMAX.EQ.1) GO TO 85
      IF(ISRPS.EQ.0)
     *WRITE(3,2019)
      IF(ISRPS.EQ.1)
     *WRITE(3,6019)
      IF(ISRPS.EQ.0)
     *WRITE(3,2021)IBR,IMAX,MAXTQE
      IF(ISRPS.EQ.1)
     *WRITE(3,6021)IBR,IMAX,MAXTQE
 2019 FORMAT(//1X,'GRESKA U ULAZNIM PODACIMA ZA FUNKCIJE TOPL. IZVORA:')
 6019 FORMAT(//1X,'ERROR IN FUNCTIONS OF TEMPERATURE SOURCES (SINKS) IN
     *PUT DATA:')
 2021 FORMAT(//1X,'FUNKCIJA BR. =',I3//1X,'UCITAN BROJ TACAKA, IMAX=',I5
     1//1X,'ZADATI MAX. BROJ TACAKA ZA KRIVU =',I5)
 6021 FORMAT(//1X,'FUNCTION NO. =',I3//1X,'NUMBER OF POINTS READ IN, IMA
     1X=',I5//1X,'PRESCRIBED MAX. NO. OF POINTS FOR CURVE =',I5)
      STOP
   85 IF(ITMAX.EQ.0) GO TO 90
      IF(ISRPS.EQ.0)
     *WRITE(3,2019)
      IF(ISRPS.EQ.1)
     *WRITE(3,6019)
      IF(ISRPS.EQ.0)
     *WRITE(3,2023)IBR,TFMX,TMAX
      IF(ISRPS.EQ.1)
     *WRITE(3,6023)IBR,TFMX,TMAX
 2023 FORMAT(//' VREMENSKA FUNKCIJA NIJE DEFINISANA U CELOM INTERVALU'/
     1 /' FUNKCIJA BR. =',I3//1X,'INTERVAL DEFINISANOSTI =',D12.5//1X,
     2'VREMENSKI INTERVAL INTEGRACIJE, TMAX =',D12.5)
 6023 FORMAT(//' TIME FUNCTION IS NOT DEFINED WITHIN THE WHOLE RANGE '/
     1 /' FUNCTION NO. =',I3//1X,' DEFINE INTERVAL =',D12.5//1X,
     2' INTEGRATION TIME INTERVAL, TMAX =',D12.5)
      STOP
CE    FUNCTIONS OF SURFACE FLUX
   90 IF(NQP.EQ.0) GO TO 100
      IBR = 0
      ITMAX = 0
      LNTAQP = LMAX
      LQPFN = LNTAQP + NQP
      LMAX = LQPFN + 2*NQP*MAXTQP
      IF(LMAX.LE.NTOTA) GO TO 92
      IF(ISRPS.EQ.0)
     *WRITE(3,2009) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6009) LMAX,NTOTA
      STOP
   92 IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)THEN
      IF(ISRPS.EQ.0)
     *WRITE(3,2029)
      IF(ISRPS.EQ.1)
     *WRITE(3,6029)
      ENDIF
 2029 FORMAT(/////6X,'FUNKCIJE ZAVISNOSTI FLUKSEVA OD VREMENA'/
     16X,39('-'))
 6029 FORMAT(/////6X,'SURFACE FLUX FUNCTION DEPENDENCE OF TIME'/
     16X,40('-'))
      CALL ULTABF(A(LNTAQP),A(LQPFN),NQP,MAXTQP,IBR,IMAX,ITMAX,TFMX,
     1TMAX,1)
      IF(IBR.EQ.0.OR.ITMAX.EQ.1) GO TO 95
      IF(ISRPS.EQ.0)
     *WRITE(3,2024)
      IF(ISRPS.EQ.1)
     *WRITE(3,6024)
 2024 FORMAT(/1X,'GRESKA U ULAZNIM PODACIMA ZA FUNKCIJE FLUKSEVA NA PO',
     1'VRSINI TELA :')
 6024 FORMAT(/1X,'ERROR IN FUNCTIONS OF SURFACE FLUXES INPUT DATA  :')
      IF(ISRPS.EQ.0)
     *WRITE(3,2021)IBR,IMAX,MAXTQP
      IF(ISRPS.EQ.1)
     *WRITE(3,6021)IBR,IMAX,MAXTQP
      STOP
   95 IF(ITMAX.EQ.0) GO TO 100
      IF(ISRPS.EQ.0)
     *WRITE(3,2024)
      IF(ISRPS.EQ.1)
     *WRITE(3,6024)
      IF(ISRPS.EQ.0)
     *WRITE(3,2023)IBR,TFMX,TMAX
      IF(ISRPS.EQ.1)
     *WRITE(3,6023)IBR,TFMX,TMAX
      STOP
CE    ENVIRONMENT TEMPERATURE
  100 IF(NTOK.EQ.0) GO TO 110
      IBR = 0
      ITMAX = 0
      LNTAOK = LMAX
      LTOKFN = LNTAOK + NTOK
      LMAX = LTOKFN + 2*NTOK*MAXTOK
      IF(LMAX.LE.NTOTA) GO TO 102
      IF(ISRPS.EQ.0)
     *WRITE(3,2009) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6009) LMAX,NTOTA
      STOP
  102 IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)THEN
      IF(ISRPS.EQ.0)
     *WRITE(3,2032)
      IF(ISRPS.EQ.1)
     *WRITE(3,6032)
      ENDIF
 2032 FORMAT(/////6X,
     1'FUNKCIJE ZAVISNOSTI TEMPERATURE OKOLINE OD VREMENA'/6X,50('-'))
 6032 FORMAT(/////6X,
     1'ENVIRONMENT TEMPERATURE FUNCTION DEPENDENCE OF TIME'/6X,51('-'))
      CALL ULTABF(A(LNTAOK),A(LTOKFN),NTOK,MAXTOK,IBR,IMAX,ITMAX,TFMX,
     1TMAX,1)
      IF(IBR.EQ.0.OR.ITMAX.EQ.1) GO TO 105
      IF(ISRPS.EQ.0)
     *WRITE(3,2026)
      IF(ISRPS.EQ.1)
     *WRITE(3,6026)
 2026 FORMAT(/1X,'GRESKA U ULAZNIM PODACIMA ZA FUNKCIJE TEMPERATURE ',
     1'OKOLINE :')
 6026 FORMAT(/1X,'ERROR IN ENVIRONMENT TEMPERATURE FUNCTIONS ',
     1'INPUT DATA :')
      IF(ISRPS.EQ.0)
     *WRITE(3,2021)IBR,IMAX,MAXTOK
      IF(ISRPS.EQ.1)
     *WRITE(3,6021)IBR,IMAX,MAXTOK
      STOP
  105 IF(ITMAX.EQ.0) GO TO 110
      WRITE(3,6026)
      WRITE(3,6023)IBR,TFMX,TMAX
      STOP
CE FUNCTIONS OF CONVECTION COEFICIENT TEMPERATURE DEPENDENCE
  110 LNTAHP = LMAX
      IF(NHP.EQ.0) GO TO 120
      IBR = 0
      LNTAHP = LMAX
      LHPFN = LNTAHP + NHP
      LMAX = LHPFN + 2*NHP*MAXTHP
      IF(LMAX.LE.NTOTA) GO TO 112
      IF(ISRPS.EQ.0)
     *WRITE(3,2009) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6009) LMAX,NTOTA
      STOP
  112 IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)THEN
      IF(ISRPS.EQ.0)
     *WRITE(3,2033)
      IF(ISRPS.EQ.1)
     *WRITE(3,6033)
      ENDIF
 2033 FORMAT(/////6X,
     1'FUNKCIJE ZAVISNOSTI KOEF. PRELAZA TOPLOTE ',
     1'(KONVEKCIJE) OD TEMPERATURE'/6X,69('-'))
 6033 FORMAT(/////6X,
     1'FUNCTIONS OF CONVECTION COEFICIENT TEMPERATURE DEPENDENCE'/
     16X,57('-'))
      CALL ULTABF(A(LNTAHP),A(LHPFN),NHP,MAXTHP,IBR,IMAX,ITMAX,TFMX,
     1TMAX,0)
      IF(IBR.EQ.0) GO TO 120
      IF(ISRPS.EQ.0)
     *WRITE(3,2027)
      IF(ISRPS.EQ.1)
     *WRITE(3,6027)
 2027 FORMAT(/1X,'GRESKA U ULAZNIM PODACIMA ZA FUNKCIJE ZAVISNOSTI',
     1' KOEF. PRENOSA TOPLOTE (KONVEKCIJE) OD TEMPERATURE :')
 6027 FORMAT(/1X,'ERROR IN FUNCTIONS OF CONVECTION COEFICIENT ',
     1'TEMPERATURE DEPENDENCE  :')
      IF(ISRPS.EQ.0)
     *WRITE(3,2021)IBR,IMAX,MAXTHP
      IF(ISRPS.EQ.1)
     *WRITE(3,6021)IBR,IMAX,MAXTHP
      STOP
CE FUNCTIONS OF RADIATION COEFICIENT TEMPERATURE DEPENDENCE
  120 LNTAHR = LMAX
      LFOHR=LMAX
      IF(NHR.EQ.0) GO TO 130
      IBR = 0
      LNTAHR = LMAX
      LHRFN = LNTAHR + NHR
      LMAX = LHRFN + 2*NHR*MAXTHR
      IF(LMAX.LE.NTOTA) GO TO 113
      IF(ISRPS.EQ.0)
     *WRITE(3,2009) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6009) LMAX,NTOTA
      STOP
  113 IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)THEN
      IF(ISRPS.EQ.0)
     *WRITE(3,2034)
      IF(ISRPS.EQ.1)
     *WRITE(3,6034)
      ENDIF
 2034 FORMAT(/////6X,
     1'FUNKCIJE ZAVISNOSTI KOEFICIJENTA EMISIVNOSTI ZRACENJA OD TEMPERTU
     1RE'/6X,67('-'))
 6034 FORMAT(/////6X,
     1'FUNCTIONS OF RADIATION COEFICIENT TEMPERATURE DEPENDENCE'/
     16X,56('-'))
      CALL ULTABF(A(LNTAHR),A(LHRFN),NHR,MAXTHR,IBR,IMAX,ITMAX,TFMX,
     1TMAX,0)
      IF(IBR.EQ.0) GO TO 125
      IF(ISRPS.EQ.0)
     *WRITE(3,2024)
      IF(ISRPS.EQ.1)
     *WRITE(3,6024)
      IF(ISRPS.EQ.0)
     *WRITE(3,2021)IBR,IMAX,MAXTHR
      IF(ISRPS.EQ.1)
     *WRITE(3,6021)IBR,IMAX,MAXTHR
      STOP
  125 CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(1,*) SBC,NFO
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1145) SBC,NFO
 1145 FORMAT(F15.0,I5)
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      CALL WBROJK(KARTIC,0)
      IF(ISRPS.EQ.0)
     *WRITE(3,2145) SBC,NFO
      IF(ISRPS.EQ.1)
     *WRITE(3,6145) SBC,NFO
      ENDIF
 2145 FORMAT(11X,
     1'STEFAN-BOLCMANOVA KONSTANTA ................. SBC =',1PD10.3///
     111X,'BROJ FUNKCIJA OBLIKA POVRSINE ZRACENJA ........... NFO =',I5/
     216X,'EQ.0; OBLIK POVRSINE NEMA UTICAJA ')
 6145 FORMAT(11X,
     1'STEFAN-BOLZMAN CONSTANT ..................... SBC =',1PD10.3///
     111X,'NUMBER OF SURFACE RADIATION SHAPE FACTORS ........ NFO =',I5/
     116X,'EQ.0; SURFACE RADIATION SHAPE IS WITHOUT EFFECT')
      LFOHR=LMAX
      LMAX=LFOHR+NFO
      IF(NFO.EQ.0) GO TO 130
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(1,*) (A(LFOHR+I-1),I=1,NFO)
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1146) (A(LFOHR+I-1),I=1,NFO)
 1146 FORMAT(8F10.3)
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      CALL WBROJK(KARTIC,0)
      IF(ISRPS.EQ.0)
     *WRITE(3,2146) (A(LFOHR+I-1),I=1,NFO)
      IF(ISRPS.EQ.1)
     *WRITE(3,6146) (A(LFOHR+I-1),I=1,NFO)
 2146 FORMAT(11X,'F A K T O R I  O B L I K A'/11X,26('-')/8F10.3)
 6146 FORMAT(11X,'S H A P E    F A C T O R S'/11X,26('-')/8F10.3)
      ENDIF
CE  PROBLEM LINEARITY CRITERIA
  130 KONK=0
      IF(NANLK.GT.0.OR.MAXTK.GT.1) KONK = 1
      KONC = 0
      IF(NANLC.GT.0.OR.MAXTC.GT.1) KONC = 1
      LINTE = 0
      IF(KONK.GT.0.OR.KONC.GT.0.OR.MAXTHP.GT.1.OR.(MAXTQE.GT.1.AND.IZI.
     1EQ.0).OR.MAXTHR.GT.0) LINTE = 1
      NMCON = 0
      IF(KONK.EQ.0.AND.KONC.EQ.0.AND.MAXTHP.LE.1.AND.NPER.EQ.1)
     1 NMCON = 1
      NFCON = 0
      IF(MAXTQE.LE.1.AND.LINTE.EQ.0.AND.MAXTOK.LE.1.AND.MAXTQP.LE.1.AND.
     1NPER.EQ.1) NFCON = 1
      NMCON = 0
      NFCON = 0
c
CE    READING INITIAL TEMPERATURES/C0NCENTRATIONS
C      
      IF(IDARCY.NE.0)LINTE=1
      IF(ISMEARED.EQ.1) THEN
         IF(MULTIMOL.EQ.1) THEN
C
C           ONE MOLECULE CASE
            JEDN = JEDNCONC
            LTT1 = LMAX
            NDIMIDTT=NDIMIDT
            IF(IPIPEMIX.EQ.1)NDIMIDTT=NDIMIDTT+2
            NDIMTT1=NPT*NDIMIDTT
            IF(JEDN.GT.NDIMTT1)NDIMTT1=JEDN
            LTT2 = LTT1+NDIMTT1
            LTT0 = LTT2+NDIMTT1
            LMAX = LTT0+NDIMTT1
            LTT1C  = LTT1
            LTT10C = LTT0
            IF(IPIPEMIX.EQ.1)LMAX=LMAX+NPT*NDIMIDTT  
            call MEMORYT(LF,LMAX,JEDN,NTOTA,IIZLAZ)   
            DO  I=LTT1,LMAX-1
	         A(I)=0.0
            ENDDO
            LTT1PM  = LTT1
            LTT01PM = LTT1
            LTT1CM  = LTT1
            LTT01CM = LTT1
            LMAXM   = LMAX
            JEDNMAX = JEDN
            LFMULT  = LF
         ELSE
            JEDNPMAX=0                       
            JEDNCMAX=0
            DO MM=1,MULTIMOL
               IF(JEDNPV(MM).GT.JEDNPMAX)JEDNPMAX=JEDNPV(MM)
               IF(JEDNCV(MM).GT.JEDNCMAX)JEDNCMAX=JEDNCV(MM)
            ENDDO
            IF(JEDNCMAX.LT.JEDNPMAX)JEDNCMAX=JEDNPMAX
            call MEMORYT(LTT1CM,LMAX,MULTIMOL*JEDNCMAX,NTOTA,IIZLAZ)
            call MEMORYT(LTT01CM,LMAX,MULTIMOL*JEDNCMAX,NTOTA,IIZLAZ)
            IF(IMIGTOT.GT.0) THEN
               IF(JEDNMIG.GT.JEDNCMAX)JEDNCMAX=JEDNMIG
            ENDIF
            call MEMORYT(LFMULT,LMAX,JEDNCMAX,NTOTA,IIZLAZ)
            LF=LFMULT
            CALL CLEAR(A(LTT1CM),JEDNCMAX)
            CALL CLEAR(A(LTT01CM),JEDNCMAX)
            NWK=0
            LMAXM=LMAX
            WRITE(3,6123)JEDNCMAX,NWK,LMAX,NTOTA
            IF(LMAX.GT.NTOTA) THEN
               WRITE(3,6045) LMAXM,NTOTA
               STOP
            ENDIF
            LTT1=LTT1CM
            LTT10=LTT01CM
            LTT1PM=LTT1
            LTT01PM=LTT1
            GO TO 150 
         ENDIF         
      ELSE
C
C        CASE WHEN ISMEARED.GT.1 OR EQ.0  
         IF(MULTIMOL.EQ.1) THEN   
            LTT1P=LMAX    
            LTT10P=LMAX
            IF(ICONVG.EQ.1) THEN
               LTT10P=LTT1P+JEDNPRES
               LMAX=LTT10P+JEDNPRES
            ENDIF
            LTT1C=LMAX
            LTT10C=LMAX
            IF(INDIFFUS.EQ.1) THEN
               LTT10C=LTT1C+JEDNCONC
               LMAX=LTT10C+JEDNCONC          
            ENDIF
            JEDNCMAX=JEDNCONC
            IF(JEDNCONC.LT.JEDNPRES) JEDNCMAX=JEDNPRES
            LMAX=LMAX+JEDNCMAX
            NWK=0
            call MEMORYT(LF,LMAX,JEDNCMAX,NTOTA,IIZLAZ)
            LMAXM=LMAX
            LFMULT=LF
            WRITE(3,6123)JEDNCMAX,NWK,LMAX,NTOTA
            IF(LMAX.GT.NTOTA) THEN
                WRITE(3,6045) LMAXM,NTOTA
                STOP
            ENDIF           
            DO I=LTT1P,LMAX-1
               A(I)=0.D0
            ENDDO
            LTT1PM=LTT1P
            LTT01PM=LTT10P
            LTT1CM=LTT1C
            LTT01CM=LTT10C
        ELSE
            JEDNPMAX=0
            JEDNCMAX=0
            DO MM=1,MULTIMOL
               IF(JEDNPV(MM).GT.JEDNPMAX)JEDNPMAX=JEDNPV(MM)
               IF(JEDNCV(MM).GT.JEDNCMAX)JEDNCMAX=JEDNCV(MM)
            ENDDO
            JEDNMAX=JEDNCMAX
            IF(JEDNMAX.LT.JEDNPMAX)JEDNMAX=JEDNPMAX
            call MEMORYT(LTT1PM,LMAX,MULTIMOL*JEDNPMAX,NTOTA,IIZLAZ)
            call MEMORYT(LTT01PM,LMAX,MULTIMOL*JEDNPMAX,NTOTA,IIZLAZ)
            call MEMORYT(LTT1CM,LMAX,MULTIMOL*JEDNCMAX,NTOTA,IIZLAZ)
            call MEMORYT(LTT01CM,LMAX,MULTIMOL*JEDNCMAX,NTOTA,IIZLAZ)
            call MEMORYT(LFMULT,LMAX,JEDNMAX,NTOTA,IIZLAZ) 
            CALL CLEAR(A(LTT1PM),MULTIMOL*JEDNPMAX)
            CALL CLEAR(A(LTT01PM),MULTIMOL*JEDNPMAX)
            CALL CLEAR(A(LTT1CM),MULTIMOL*JEDNCMAX)            
            CALL CLEAR(A(LTT01CM),MULTIMOL*JEDNCMAX)   
            LF=LFMULT                                            
            NWK=0
            WRITE(3,6123)JEDNMAX,NWK,LMAX,NTOTA
            LMAXM=LMAX  
            IF(LMAX.GT.NTOTA) THEN
                WRITE(3,6045) LMAXM,NTOTA
                STOP
            ENDIF
            LTT1=LTT1PM
            LTT10=LTT01PM
            LTT1C=LTT1CM
            LTT10C=LTT01CM         
        ENDIF
        NWK=0
        WRITE(3,6123)JEDNCMAX,NWK,LMAX,NTOTA
        IF(LMAX.GT.NTOTA) THEN
            WRITE(3,6045) LMAXM,NTOTA
            STOP
        ENDIF 
        GO TO 150
      ENDIF
      IF(IMUMPS.EQ.1) THEN
         NWK    = 0
         NWKMAX = 0
      ENDIF       
      IF(LMAX.LE.NTOTA) GO TO 150
      IF(ISRPS.EQ.0)
     *WRITE(3,2009) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6009) LMAX,NTOTA   
      STOP
C  150 IF(NSTAC.EQ.0.AND.LINTE.EQ.0) GO TO 155
  150 CONTINUE
C
      IF(indiffus.NE.0.OR.IHEAT.NE.0) THEN
C        INTIAL CONCENTRATIONS FOR CELLS -  KORISTI SE I KADA NEMA CELIJA !
         WRITE(3,2075)
 2075    FORMAT(/6X,'INITIAL CONCENTRATIONS FOR EXTRACEL SPACE AND',
     1       ' CELLS'/
     1    6X,'MOLEC FLAGS FOR',
     2    ' PIPE-CAP-EX.CELL SPACE AND CELLS/',
     3     '  AND CONCENTRATIONS')
C
         DO MM=1,MULTIMOL
            CALL ISPITA(ACOZ)
            READ(ACOZ,2076)(ICINITV(MM,I),I=1,12)
 2076       FORMAT(12I5) 
            CALL ISPITA(ACOZ)
            READ(ACOZ,2077)(CINITV(MM,I),I=1,12)
 2077       FORMAT(12F10.2)
            WRITE(3,2078)MM,(ICINITV(MM,I),I=1,2+NDIMCELL)       
 2078       FORMAT(6X,I5,3X,12I5) 
            WRITE(3,2079)(CINITV(MM,I),I=1,2+NDIMCELL)       
 2079       FORMAT(12X,12F10.2)                
         ENDDO
C         
         DO MM=1,MULTIMOL
            CALL POCTEMULTMOL(A(LIDT),(LIDTV),A(LIDTVCELL),
     1           A(LTT1),A(LTT1C),A(LTT1CM),IACTIVECELL,ICINITV,
     3           CINITV,NDIMIDG,ISMEARED,NDIMCELL,NDIMCELL+2,
     4           MULTIMOL,JEDNCMAX,JEDNCONC,NPT,MM) 
         ENDDO
      ENDIF
C
      IF(MULTIMOL.GT.1.OR.MULTITIS.GT.0) GO TO 165      
      IF(ISMEARED.NE.1) GO TO 165
C
C      IF(NSTAC.GT.0.AND.LINTE.EQ.0) GO TO 155
      DO 160 I=1,JEDN
      II = I - 1
      A(LTT0 + II) = A(LTT1 + II)
  160 CONTINUE
C  160 A(LTT2 + II) = A(LTT1 + II)
      GO TO 165
CE  DATA ABOUT BOUNDARY SURFACES
  157 IF(NQP.EQ.0.AND.NHP.EQ.0.AND.NTOK.EQ.0.AND.NHR.EQ.0) GO TO 165
  
C----------- LOOP OVER ELEMENT GROUPS
CE   GROUP OF ELEMENTS LOOP
      DO 140 NGE = 1,NGET
      NETIP=NELEDAT(NGE,1)  
      GO TO (134,133,132),NETIP
  132 NE3D=NELEDAT(NGE,2)
      LNG3D = LMAX
      LNELG3 = LNG3D + NE3D
      LMAX = LNELG3 + 30*NE3D
      IF(LMAX.LE.NTOTA) GO TO 135
      IF(ISRPS.EQ.0)
     *WRITE(3,2009) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6009) LMAX,NTOTA
      STOP
  135 CALL GRAN3D(A(LNG3D),A(LNELG3),A(LNEL3D),N3DGU)
      LMAX = LNELG3 + 30*N3DGU
      GO TO 140
  133 NE2D=NELEDAT(NGE,2)
      LNG2D = LMAX
      LNELG2 = LNG2D + NE2D
      LMAX = LNELG2 +20*NE2D
      IF(LMAX.LE.NTOTA) GO TO 136
      IF(ISRPS.EQ.0)
     *WRITE(3,2009) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6009) LMAX,NTOTA
      STOP
  136 CALL GRAN2D(A(LNG2D),A(LNELG2),A(LNEL2D),N2DGU)
      LMAX = LNELG2 + 20*N2DGU
      GO TO 140
  134 NE1D=NELEDAT(NGE,2)
      LNG1D = LMAX
      LNELG1 = LNG1D + NE1D
      LMAX = LNELG1 +10*NE1D
      IF(LMAX.LE.NTOTA) GO TO 137
      IF(ISRPS.EQ.0)
     *WRITE(3,2009) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6009) LMAX,NTOTA
      STOP
  137 CALL GRAN1D(A(LNG1D),A(LNELG1),A(LNEL1D),N1DGU)
      LMAX = LNELG1 +10*N1DGU
  140 CONTINUE
C     END OF GROUP ELEMENT LOOP

CE  READ NODES, RESULTS ARE TO BE PRINTED
C     SPACE FOR VECTOR OF PRESCRIBED VALUES AT END OF TIME STEP
  165 CONTINUE
C
      LTT1TOT=LMAX
      LMAX=LMAX+NDIMIDT*NPT
C
	LVELOC = LMAX
	IF      (ICONV.EQ.1.AND.ISMEARED.EQ.1) THEN
	  LMAX=LMAX+3*NPT
	ELSE IF (ICONV.EQ.1.AND.ISMEARED.NE.1) THEN
	  LMAX=LMAX+6*NPT
	ENDIF
	LMAXM = LMAX
C
	IF(MULTIMOL.GT.1.OR.MULTITIS.GT.0) GO TO 171
C
      LISKC=LMAX
      IF(INDSC.EQ.0) GO TO 168
      LISKC=LMAX
      LKSK=LISKC+NPT
      LMAX=LKSK+NPT
      IF(LMAX.LE.NTOTA) GO TO 169
      IF(ISRPS.EQ.0)
     *WRITE(3,2009) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6009) LMAX,NTOTA
      STOP
  169 DO 167 I=1,NPT
      II=I-1
      A(LKSK+II)=0
  167 A(LISKC+II)=0
      CALL INDST (A(LISKC),A(LKSK),NPT)
      LMAX=LKSK
CE  POINTERS FOR SYSTEM MATRIX AND VECTORS
  168 CONTINUE
      LSK=LMAX
      IF (IMUMPS.EQ.1) then
	  NWK = 1
	ENDIF
      CALL MEMORYT(LALEVO,LMAX,NWK,NTOTA,IIZLAZ)     
	CALL MEMORYT(LDESNO,LMAX,NWK,NTOTA,IIZLAZ)
	LCONM=LMAX
      LF = LCONM
      IF(ISMEARED.EQ.1) THEN
         JEDNMAX=JEDN
      ELSE
         JEDNMAX=JEDNPRES
         IF(JEDNCONC.GT.JEDNPRES) JEDNMAX=JEDNCONC
      ENDIF
      LFC = LF + JEDNMAX
      LMAXM = LFC
      LSILE=LF
      LFMULT=LF
      IF(NFCON.EQ.1) LMAXM = LFC + JEDNMAX
      IF(ISRPS.EQ.0)
     *WRITE(3,2123) JEDN,NWK,LMAXM,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6123) JEDNMAX,NWK,LMAXM,NTOTA
 2123 FORMAT(///'1'///6X,
     1'PODACI O DIMENZIJAMA MATRICA SISTEMA I RADNOG VEKTORA'/
     16X,53('-')///
     111X,'BROJ JEDNACINA .............................. JEDN =',I9///
     211X,'BROJ ELEMENATA U MATRICI SISTEMA ............. NWK =',I9///
     311X,'ZAUZET PROSTOR U RADNOM VEKTORU ............ LMAXM =',I9///
     411X,'RASPOLOZIV PROSTOR U RADNOM VEKTORU ........ NTOTA =',I9///) 
 6123 FORMAT(///'1'///6X,
     1'DATA ABOUT DIMENSIONS OF SYSTEM MATRIX AND WORKING VECTOR'/
     16X,57('-')///
     111X,'MAX NUMBER OF EQUATIONS .................. JEDNMAX =',I9///
     211X,'NUMBER OF ELEMENTS INTO MATRIX OF SYSTEM ..... NWK =',I9///
     311X,'REQUIRED DIMENSION INTO WORKING VECTOR ..... LMAXM =',I9///
     411X,'MAXIMUM TOTAL STORAGE AVAILABLE ............. MTOT =',I9///)
      IF(LMAXM.LE.NTOTA) GO TO 170
      IF(ISRPS.EQ.0)
     *WRITE(3,2030) LMAXM,NTOTA
      IF(ISRPS.EQ.1)
     *WRITE(3,6045) LMAXM,NTOTA
 2030 FORMAT(/1X,'NEDOVOLJNA DIMENZIJA ZA SMESTANJE MATRICA I VEKTORA',
     1'SISTEMA :'/1X,'POTREBNA DIMENZIJA, LMAXM=',I10/1X,'RASPOLOZIVA',
     2'DIMENZIJA, NTOTA =',I10)
 6045 FORMAT(///' UNSUFFICIENT DIMENSION OF WORKING VECTOR:'/
     1' REQUIRED DIMENSION LMAXM =',I10/
     2' AVAILABLE DIMENSION NTOT =',I10)
      STOP
  170 IF(IREST.NE.0) GO TO 171
      IF(ISRPS.EQ.0)
     *WRITE(3,2101)
      IF(ISRPS.EQ.1)
     *WRITE(3,6101)
 2101 FORMAT(///' ZAVRSENO JE UCITAVANJE I GENERISANJE ULAZNIH PODATAKA'
     1/' ULAZNI PODACI SU BEZ FORMALNIH GRESAKA'/
     2' ZA IZVRSENJE PROGRAMA PROMENITI:   IREST = 1'//)
 6101 FORMAT(///' READING AND GENERATING OF INPUT DATA IS OVER'/
     1' INPUT DATA ARE WITHOUT FORMAL ERROR'/
     2' FOR EXECUTION OF PROGRAM ENTER:   IREST = 1'//)
      STOP
  171 CONTINUE
      INFF = 1
      NDTT = NDT
C   
C======================= LOOP OVER TIME STEPS=======================
c
C===================================================================
C
 1791 CALL VREM(2)
      CALL ZASTIT
	
  178 IPRINT  = 0
      IGRKOR  = 0
      LTT8 = LTT1
      IF(INTEB.EQ.1) LTT8 = LTT2
C
      IREPEATDC = 0
	KORGR     = 0
	LMAX      = LMAXM
	KOR       = 0
	VREME     = 0.0D00
      NCZZ      = 0
C
  996 CONTINUE
      IDIFFHEAT=0
     	IF(INDIFFUS.NE.0.OR.IHEAT.NE.0)IDIFFHEAT=1
C
      IGRAFF = IGRAF
 8100 CONTINUE
      CONCSYS=0.D0
      IF(ISMEARED.EQ.1.AND.MULTIMOL.EQ.1) THEN
          CALL FUNCT2(A(LTIMESYS),NPTIMESYS,VREME,CONCSYS,IND)
          IF(IND.EQ.1) THEN
             WRITE(3,2530)KOR,VREME
             STOP
          ENDIF
          CONCSYS0  = CONCSYS
      ENDIF
C
      DO 500 KORR = 1,NDTT
C
      INDFLUX=0
      INDMIG=0
      MM=1
C
      KOR=KORR
      DT=A(LVDT+KOR-1)
      VREME = VREME + DT
C 
      IF(MULTIMOL.GT.1) GO TO 860
C
C     ONE MOLECULE CASE
C
      IF(ISMEARED.EQ.1) THEN
          CONCSYS0  = CONCSYS
          CALL FUNCT2(A(LTIMESYS),NPTIMESYS,VREME,CONCSYS,IND)
          IF(IND.EQ.1) THEN
             WRITE(3,2530)KOR,VREME
             STOP
          ENDIF
      ELSE
          IF(NZADP.GT.0) THEN
             DO I=1,NZADP
                II=I-1
                A(LZADATA0+II)=A(LZADATA1+II)
             ENDDO      
             CALL ZADATAF(A(LNZADJ),A(LZADFM),A(LZADATA1),
     2       VREME,NZADP,NTABFT,MAXTFT,LNTFT,LTABFT)
          ENDIF
      ENDIF
      IF(INDCELLIN.GT.0.AND.NZADVS.GT.0) THEN 
         DO I=1,NZADVS
            II=I-1
            A(LZADATAVS0+II)=A(LZADATAVS+II)
         ENDDO
         CALL ZADATAVS(A(LNZADFVS),A(LZADVALUEVS),A(LZADATAVS),VREME,
     1       MULTIMOL,NDIMCELL,NDIMVS,NVSMAX,NPT,NTABFT,MAXTFT,LNTFT,
     2       LTABFT,NZADVS) 
      ENDIF 
C     LYMHATIC SYSTEM
      IF(NZADLYMPHMX.GT.0) THEN
         DO I=1,NZADLYMPH
            II=I-1
            A(LZADALYMH0+II)=A(LZADALYMH1+II)
         ENDDO
          MM=1
          CALL ZADATALY(A(LINPUTLY),A(LZADVALUELY),A(LZADALYMH1),
     1           VREME,NZADLYMPHMX,NZADLYMPH,NTABFT,MAXTFT,LNTFT,LTABFT,
     2           MULTIMOL,MM)   
      ENDIF          
C              
C
C     PRESCRIBED VALUES AT END OF TIME STEP        
C
  179 CONTINUE
      IF(ISMEARED.EQ.1) THEN
         DO 194 I = 1,JEDNMAX
         II = I - 1
C         A(LTT2+II) = 0.
  194    A(LTT0+II) = A(LTT1+II)
         LTT8=LTT1
      ELSE
         IF(ICONV.EQ.1) THEN
             DO I = 1,JEDNPRES
                II = I - 1
                A(LTT10P+II)=A(LTT1P+II)
             ENDDO 
             LTT8=LTT1P
         ENDIF
         IF(INDIFFUS.EQ.1) THEN
             DO I = 1,JEDNCONC
                II = I - 1
                A(LTT10C+II)=A(LTT1C+II)
             ENDDO 
             LTT8=LTT1C
         ENDIF     
      ENDIF
C
      ITER = 0
      TREF = 0.
	KONV = 0
	INDFLUXE = 0
C
 8000 continue
C
C     FORM VECTOR OF PRESCRIBED VALUES AT END OF TIME STEP
  173 CONTINUE  
C
C     INITIAL VALUSE FOR LAMDA
      IF(ILAMDA.EQ.1) THEN
        ALAMDA0=0.D0
        CALL SETLAMDA(A(LLAMDAV),A(LTT1),NPT,ALAMDA0,JEDN)
      ENDIF
C     SYSTEMIC CONCENTRATION AT TIME=VREME, END OF TIME STEP 
C
      CONCSYS0  = CONCSYS
      
      IF(ISMEARED.EQ.1) THEN    
         CALL FUNCT2(A(LTIMESYS),NPTIMESYS,VREME,CONCSYS,IND)
         IF(IND.EQ.1) THEN
            WRITE(3,2530)KOR,VREME
 2530       FORMAT(//' STOP - TIME IS OUT OF RANGE OF TIME FINCTION'/
     1            ' FOR SYSTEMIC CONCENTRATION'/
     2            ' STEP NUMBER KOR=',I5/
     3            '            TIME=',D12.3)
            STOP
         ENDIF
      ENDIF 
      IPASSME=0
      GO TO 333
C
C     MULTIMOLECULE CASE
C
  860 CONTINUE
  
      CALL SETINITMULTI(A(LTT1PM),A(LTT01PM),A(LTT1CM),A(LTT01CM),
     1  A(LNZADNODF),A(LZADVALUE),A(LZADATM0),A(LZADATM1),A(LZADSYSV),
     2  NZADPV(MM),NPTIMESYSV(MM),LINPUTLY,LZADVALUELY,A(LZADALYMH1),
     3  A(LZADALYMH0),NZADPLYV(MM),NZADLYMPHMX,NPTSYSMAX,KOR,VREME,
     4  NTABFT,MAXTFT,LNTFT,LTABFT,CONCSYS0,CONCSYS,NZADPMAX,ISMEARED,
     5  ICONV,INDIFFUS,JEDNPV(MM),JEDNCV(MM),JEDNPMAX,JEDNCMAX,MULTITIS,
     6  MULTIMOL,MM)
C
C=============== ITERATION LOOP ===========================
C             
      IPASSME=0
  333 CONTINUE 
      ITER=0
      IF(INDMIG.EQ.1) THEN
C        ONE GROUP CAN MIGRATE FOR NOW --------------
         JEDN=JEDNMIG
         IPASSME=0
         GO TO 172
      ENDIF
      IF(MULTIMOL.EQ.1) THEN
         IF(ISMEARED.NE.1) THEN  
            IPASSME=IPASSME+1
            IF(ICONV.EQ.0.AND.INDIFFUS.EQ.1) IPASSME=2
            IF(ISMEARED.EQ.1)IPASSME=2
            IF(IPASSME.EQ.1) THEN
               JEDN=JEDNPRES
            ELSE
               JEDN=JEDNCONC   
            ENDIF
         ENDIF
      ELSE
         IF(ICONV.EQ.1.AND.ISMEARED.GT.1.AND.MM.EQ.1) THEN
            IPASSME=IPASSME+1
            IF(IPASSME.GT.2)IPASSME=2
         ENDIF
           
         IF(ICONV.EQ.0.OR.ISMEARED.EQ.1)IPASSME=2
         IF(IPASSME.EQ.1) THEN
            JEDN=JEDNPV(MM)
         ELSE
            JEDN=JEDNCV(MM)   
         ENDIF 
      ENDIF     
C
  172 INDSK=1
      KONVP=1
      KONVD=1                                     
      KONVL=1
      IF(ITER.GT.0.AND.INTEB.EQ.1.AND.NJRAP.EQ.1) INDSK = 0
      INDF = 1
CE   NONLINEAR PROBLEM
  200 IF(INDSK.EQ.0) GO TO 216
      
      IF(IMUMPS.EQ.0) THEN
        IF(IDARCY.EQ.0.AND.MULTIMODEL.EQ.1.AND.MULTITIS.EQ.0) THEN
          J = LF - 1
          DO 210 I = LSK,J
  210     A(I) = 0.
        ELSE
          CALL CLEAR(A(LALEVO),2*NWK)
          CALL CLEAR(A(LF),JEDN)
          GO TO 270
        ENDIF
      ELSE
        CALL CLEAR(A(LF),JEDN)
        CALL sparseassembler_init(0,INFF)
        CALL sparseassembler_zero()
        GO TO 270
	ENDIF        
      IF(ISMEARED.NE.1) GO TO 270      
  216 IF(KOR.GT.1.OR.ITER.GT.0) GO TO 215
      J = LMAXM - 1
      GO TO 220
  215 J = LFC - 1
  220 DO 225 I = LF,J
  225 A(I) = 0.
  250 IF(INDSK.EQ.1.OR.INDF.EQ.1) GO TO 270
      LF1 = LF - 1
      LFC1 = LFC - 1
      DO 251 I = 1,JEDN
  251 A(LF1+I) = A(LFC1+I)
CE MULTIPLICATION  OF TEMPERATURE VECTOR TT1(JEDN) AT THE MOMENT T
  270 CONTINUE
C  
CE    LOOP OVER GROUP OF ELEMENTS FOR INTEGRATION
C      
      INDFLUX   = 0
      INDFLUXKC = 0
C
      DO 280 NGE = 1,NGET
      ngele  = NGE
      NETIP  = NELEDAT(NGE,1)
      NET    = NELEDAT(NGE,2)
      INDAX  = NELEDAT(NGE,3)
      IZIP   = NELEDAT(NGE,4)
      IDIFUSE= NELEDAT(NGE,13)
      GO TO (278,274,272,278),NETIP
  272 NE3D = NET
      GO TO 276
  274 NE2D = NET
      GO TO 276
  278 NE1D = NET
  276 CALL ELEMT(NETIP,2)
  280 CONTINUE
C  
C     FICTITIOUS ELEMENTS AT EACH NODE FOR SMEARED MODEL (ISMEARED.EQ.1)     
C   
      IF(ISMEARED.EQ.1.AND.INDMIG.EQ.0) THEN
C       PRESCRIBED CONCENTRATION WITHI CAPILLARIES WHEN ISMEARED.EQ.1
C       LYMPHATIC SYSTEM IS INCLUDED IF INDLYMPH.EQ.1 THROUGH VOLUMETRIC FRACTION ONLY
C       HERE, CONVECTION IS EXCLUDED IN THIS VERSION - CAN BE UPGRADED
        IF(MULTITIS.EQ.0.AND.MULTIMOL.EQ.1) THEN
           DO NC=1,NPT
             CALL CAP1DFICTSME(A(LIDT),A(LF),A(LTT1),A(LTT0),
     1        A(LVOLFRACTV),A(LDIAMSMEV),A(LTHICKSMEV),A(LDWALLSMEV),
     2        A(LPWALLSMEV),A(LVOLSMEV),A(LIDLYMPHH),A(LIDLYMPHC),
     3        A(LRVLYMPH),A(LHCOEFLYNODW),A(LCCOEFLYNODW),
     4        A(LDCOEFLYNOD),CONCSYS,CONCSYS0,IPARTSME,KOR,ITER,JEDN,DT,
     5        NPT,NC,INDFLUX,NDIMIDT,MULTIMOL,IPASSME)
           ENDDO
C
C       COMPOSITE TISSUE EXTRACELL SPACE
           DO NC=1,NPT
             CALL CAP1DFICTSMEMULT(A(LIDT),A(LIDTV),A(LF),A(LTT1),
     1       A(LTT0),A(LTT1CM),A(LTT01CM),A(LVOLFRACTV),A(LVFMULTIT),
     2       A(LDIAMSMEV),A(LTHICKSMEV),A(LDWALLSMEV),A(LIPARTNODEV),
     3       A(LPARTNODEV),A(LVOLSMEV),IWALLCAPC(MM),WALLCAPC(MM),
     3       IPARTC(2,MM),PARTC(2,MM),A(LIDLYMPHH),A(LIDLYMPHC),
     3        A(LRVLYMPH),A(LHCOEFLYNODW),A(LCCOEFLYNODW),
     4        A(LDCOEFLYNOD),IACTIVECELL,NDIMCELL,NDIMWCAPMAX,
     4       CONCSYS,CONCSYS0,NDIMPMAX,KOR,ITER,JEDN,DT,NPT,NC,INDFLUX,
     5       NDIMIDG,MULTITIS,MULTIMOL,MM)
             
             CALL CELL1DFICTSMEMULT(A(LIDT),A(LIDTV),A(LIDTVCELL),
     1        A(LIPIPENODV),A(LF),A(LTT1P),A(LTT10P),A(LTT1C),
     2        A(LTT10C),A(LTT1PM),A(LTT01PM),A(LTT1CM),A(LTT01CM),
     3        A(LVOLFRACTV),A(LVFMULTIT),A(LDIAMSMEV),A(LTHICKSMEV),
     4        A(LDWALLSMEV),A(LDWALLCELLV),A(LVOLSMEV),A(LDIAMCELLV),
     5        A(LWALLAREAV),A(LHYDRCOEFCV),A(LIPARTNODEV),
     6        A(LPARTNODEV),A(LIACTIVENODEV),A(LACTIVENODEV),
     8        A(LIADHESINODEV),A(LADHESINODEV),A(LADHICONCV),
     9        A(LNZADJ),A(LZADATA1),A(LZADATA0),A(LNZADNODF),
     1        A(LZADATM1),A(LZADATM0),IACTIVE,ICMTABLE(5),HYDROCOEFC,
     2        KOR,ITER,JEDNPRES,JEDNCONC,JEDN,DT,NPT,NC,INDFLUX,
     3        ICONV,INDIFFUS,NZADP,NDIMIDT,NDIMCELL,NDIMPMAX,
     4        NDIMWCAPMAX,IWALLCAPC(MM),WALLCAPC(MM),NDIMWCELLMAX,
     5        NDIMAMAX,NDIMADHMAX,IADHIMAX,NZADPMAX,IDD1,IDD2,
     6        IPASSME,MULTITIS,MULTIMOL,MM)
           ENDDO
        ENDIF
      ELSEIF (ISMEARED.GE.4.AND.INDMIG.EQ.0) THEN
C
C       TRANSPORT BETWEEN CAPILLARY AND TISSUE DOMAIN, CONVECTIVE AND DIFFUSIVE
        IDD1=1
        IDD2=2
        IF(IPASSME.EQ.2) THEN
          IDD1=3
          IDD2=4
        ENDIF
        IF(MULTITIS.EQ.0.AND.MULTIMOL.EQ.1) THEN
           DO NC=1,NPT
              CALL CAP1DFICTSME2(A(LIDT),A(LF),A(LTT1P),A(LTT10P),
     1        A(LTT1C),A(LTT10C),A(LVOLFRACTV),A(LDIAMSMEV),
     2        A(LTHICKSMEV),A(LDWALLSMEV),A(LPWALLSMEV),A(LVOLSMEV),
     3        A(LWALLAREAV),A(LHYDRCOEFV),A(LIPIPENODV),A(LNZADJ),
     4        A(LZADATA1),A(LZADATA0),A(LIDLYMPHH),A(LIDLYMPHC),
     3        A(LRVLYMPH),A(LHCOEFLYNODW),A(LCCOEFLYNODW),
     4        A(LDCOEFLYNOD),IACTIVE,KOR,ITER,JEDNPRES,JEDNCONC,JEDN,
     5        DT,NPT,NC,INDFLUX,ICONV,INDIFFUS,NZADP,NDIMIDT,IDD1,IDD2,
     6        IPASSME,MULTIMOL)
           ENDDO
        ELSE
C
C          WITH CELLS OR MULTIMODEL
C
           NZADPP=NZADP
           IF(MULTIMOL.GT.1)NZADPP=NZADPV(MM) 
           DO NC=1,NPT
              CALL CELL1DFICTSME(A(LIDT),A(LIDTV),A(LIDTVCELL),
     1        A(LIPIPENODV),A(LF),A(LTT1P),A(LTT10P),A(LTT1C),
     2        A(LTT10C),A(LTT1PM),A(LTT01PM),A(LTT1CM),A(LTT01CM),
     3        A(LVOLFRACTV),A(LVFMULTIT),A(LDIAMSMEV),A(LTHICKSMEV),
     4        A(LDWALLSMEV),A(LDWALLCELLV),A(LVOLSMEV),A(LDIAMCELLV),
     5        A(LWALLAREAV),A(LHYDRCOEFCV),A(LIPARTNODEV),
     6        A(LPARTNODEV),A(LIACTIVENODEV),A(LACTIVENODEV),
     8        A(LIADHESINODEV),A(LADHESINODEV),A(LADHICONCV),
     9        A(LNZADJ),A(LZADATA1),A(LZADATA0),A(LNZADNODF),
     1        A(LZADATM1),A(LZADATM0),IACTIVE,ICMTABLE(5),A(LIDVS),
     2        A(LNZADNODVS),A(LZADATAVS0),A(LZADATAVS),A(LIDLYMPHH),
     3        A(LIDLYMPHC),A(LRVLYMPH),A(LHCOEFLYNODW),A(LCCOEFLYNODW),
     4        A(LDCOEFLYNOD),A(LINPUTLY),A(LZADALYMH1),A(LZADALYMH0),
     5        NZADPLYV(MM),HYDROCOEFC,KOR,ITER,JEDNPRES,JEDNCONC,JEDN,
     5        DT,NPT,NC,INDFLUX,ICONV,INDIFFUS,NZADPP,NDIMIDT,NDIMCELL,
     6        NDIMPMAX,NDIMWCAPMAX,IWALLCAPC(MM),WALLCAPC(MM),
     7        NDIMWCELLMAX,NDIMAMAX,NDIMADHMAX,IADHIMAX,NZADPMAX,IDD1,
     8        IDD2,IPASSME,MULTITIS,MULTIMOL,MM)
           ENDDO                          
        ENDIF              
      ENDIF
C
      IF (INDFLUX.EQ.1.OR.INDFLUXE.EQ.1) GO TO 320
      GO TO 301                                    ! SET TO GO TO 301   
      IF (INDVEL.EQ.1 .AND. ISRPS.EQ.0)STOP ' *** IZRACUNATE BRZINE ***'
      IF (INDVEL.EQ.1.AND.ISRPS.EQ.1)STOP ' ** CALCULATED VELOCITIES **'
      IF(ISMEARED.NE.1) GO TO 301
      IF(NMCON.EQ.0) GO TO 285
      J = LCONM - 1
      K = LSK - 1
      DO 282 I = 1,NWK
  282 A(J+I) = A(K+I)
  285 IF(NFCON.EQ.0) GO TO 301
      J = LFC - 1
      K = LF - 1
      DO 287 I = 1,JEDN
  287 A(J+I) = A(K+I)
CE FACTORIZATION OF SYSTEM MATRIX 
  301 CONTINUE
C
      KONVLF=1
C
      IF(IMUMPS.EQ.0) THEN
        IF(IDARCY.EQ.0) THEN
          IF(INDSK.NE.0) CALL RESEN(A(LSK),A(LF),A(LMAXA),JEDN,NWK,1)
CE        BACK SUBSTITUTION
          CALL RESEN(A(LSK),A(LF),A(LMAXA),JEDN,NWK,2)
        ELSE
          IF(INDSK.NE.0)CALL UACTCF(A(LALEVO),A(LDESNO),A(LF),
     1                    A(LMAXA),JEDN,1)
          CALL UACTCF(A(LALEVO),A(LDESNO),A(LF),A(LMAXA),JEDN,2) 
        ENDIF
      ELSE
C
C     Poziv MUMPS paralelnog solvera sa silama i brojem jednacina
#ifdef MUMPS_EXTERNAL
	  CALL sparseassembler_savesparsefile(JEDN)
	
C Citanje params.txt, $JOBID treci broj
	  NFILE=61
	  OPEN (NFILE, FILE='params.txt')
	  READ(NFILE,*) JOBID
	  READ(NFILE,*) JOBID
	  READ(NFILE,*) JOBID
	  CLOSE (NFILE)
C Kraj $JOBID
	  OPEN (NFILE, FILE='/tmp/PAKF_MUMPS_'//JOBID//'.OUT',FORM='BINARY',
     &    ACCESS='APPEND',STATUS='OLD')	
	  do I=1, JEDN
	    write(NFILE) A(LF+I-1)
	  enddo
	  CLOSE(NFILE)
        CALL SOLVER_EXTERNAL(A(LF), JEDN)
#else
        CALL SOLVER_INTERNAL(A(LF), JEDN, 0,IIZLAZ,INFF)
#endif  
      ENDIF
CE
CE CHECK CONVERGENCE (GOES BELOW ALWAYS TO 344)
CE 
      IF(ISMEARED.NE.-5.AND.INDMIG.EQ.0) THEN 
         IF(IPASSME.EQ.1) THEN
            IF(MULTIMOL.EQ.1) THEN               !ONE MOLECULE
               DO I=1,JEDN
                  II=I-1
                  IF(ITER.EQ.0.AND.KOR.EQ.1) THEN
                     A(LTT1P+II)=A(LF+II)
                  ELSE
                     A(LTT1P+II)=A(LTT1P+II)+A(LF+II)
                  ENDIF
               ENDDO  
           ELSE
             CALL SETT1PCMULT(A(LTT1PM),A(LF),KOR,ITER,JEDN,MULTIMOL,MM)!MULTIMOLECULAR
           ENDIF
         ELSE
            IF(MULTIMOL.EQ.1) THEN
               DO I=1,JEDN
                  II=I-1
                  IF(ITER.EQ.0.AND.KOR.EQ.1) THEN
                     A(LTT1C+II)=A(LF+II)
                  ELSE
                     A(LTT1C+II)=A(LTT1C+II)+A(LF+II)
                  ENDIF
              ENDDO 
           ELSE
             CALL SETT1PCMULT(A(LTT1CM),A(LF),KOR,ITER,JEDN,MULTIMOL,MM)!MULTIMOLECULAR       
           ENDIF     
         ENDIF
         GO TO 344
      ENDIF
      IF(INDMIG.EQ.1) THEN          ! CELL MIGRATION
         DO I=1,JEDN
            II=I-1
            A(LVFTT+II)=A(LVFTT+II)+A(LF + II)    
         ENDDO
         CALL KONVTEMIG(A(LF),A(LVFTT),JEDN,ITER,TREF,DTMOD,EPSTA,EPSTR,
     1   KONV,IPRINT,NPRINT,KOR,NDT,VREME)
         IF(ITER.EQ.0) THEN
            ITER=1
            GO TO 172
         ELSE
           IF(KONV.EQ.1) GO TO 320
           ITER=ITER+1
           GO TO 172
         ENDIF
      ENDIF
C      IF(LINTE.EQ.0) GO TO 320
C      IF(INTEB.EQ.1) GO TO 342
      DO 340 I = 1,JEDN
      II = I - 1
      IF(ITER.EQ.0) A(LTT1 + II) = A(LF + II)
      IF(ITER.GT.0) A(LTT1 + II) = A(LTT1 + II) + A(LF + II)
  340 CONTINUE
  344 CONTINUE

      IF(ITER.GT.0) GO TO 310 
C     INITIAL ITERATION
      KONVP=1
      KONVD=1
      
      IF(ISMEARED.NE.1) GO TO 345
C
      IF(MULTIMOL.EQ.1) THEN
C        ISMEARED = 0 ili 1, KORISTI SLEDECE RUTINE ZA PROVERU KONVERGENCIJE:  
         IF(ICONV.EQ.1)CALL KONVTE(A(LF),A(LTT8),A(LTT1),A(LIDT),
     1   A(LIDT),JEDN,ITER,TREF,DTMOD,EPSTA,EPSTR,KONVP,IPRINT,NPRINT,
     2   KOR,NDT,VREME,NPT,ILAMDA,2,NDIMIDT)
	   IF(IDIFFHEAT.EQ.1)
     1   CALL KONVTE(A(LF),A(LTT8),A(LTT1),A(LIDT),A(LIDT),JEDN,ITER,
     2    TREF,DTMOD,EPSTA,EPSTR,KONVD,IPRINT,NPRINT,KOR,NDT,VREME,NPT,
     3    ILAMDA,4,NDIMIDT)
      ELSE 
         CALL KONVTEMULT(A(LF),A(LTT1CM),JEDN,ITER,TREF,DTMOD,EPSTA,
     1        EPSTR,KONVD,IPRINT,NPRINT,KOR,NDT,VREME,NPT,4,MULTIMOL,MM)
      ENDIF
      ITER=1
      GO TO 172  
C  
  345 CONTINUE
      IF(IPASSME.EQ.1) THEN
         IF(MULTIMOL.EQ.1) THEN
            CALL KONVTEPD2(A(LF),A(LTT8),A(LTT1P),A(LIDT),A(LIDT),
     1      IACTIVE,JEDN,ITER,TREFP,DTMODP,EPSTA,EPSTR,KONVP,
     2      IPRINT,NPRINT,KOR,NDT,VREME,NPT,NDIMIDT,IPASSME,ICONV)
         ELSE
            CALL KONVTEPD2M(A(LF),A(LTT8),A(LTT1PM),A(LIDT),A(LIDT),
     1      IACTIVE,JEDN,ITER,TREFP,DTMODP,EPSTA,EPSTR,KONVP,
     2      IPRINT,NPRINT,KOR,NDT,VREME,NPT,NDIMIDT,IPASSME,ICONV,
     3      MULTIMOL,MM)        
         ENDIF
         IF(KONVP.EQ.1) GO TO 320
      ELSE
         IF(MULTIMOL.EQ.1) THEN
            CALL KONVTEPD2(A(LF),A(LTT8),A(LTT1C),A(LIDT),A(LIDT),
     3      IACTIVE,JEDN,ITER,TREFD,DTMODD,EPSTA,EPSTR,KONVD,
     2      IPRINT,NPRINT,KOR,NDT,VREME,NPT,NDIMIDT,IPASSME,ICONV)
         ELSE
            CALL KONVTEPD2M(A(LF),A(LTT8),A(LTT1CM),A(LIDT),A(LIDT),
     3      IACTIVE,JEDN,ITER,TREFD,DTMODD,EPSTA,EPSTR,KONVD,
     2      IPRINT,NPRINT,KOR,NDT,VREME,NPT,NDIMIDT,IPASSME,ICONV,
     3      MULTIMOL,MM)     
         ENDIF
         IF(KONVD.EQ.1) GO TO 320
      ENDIF  
      ITER=1
      GO TO 172       
      
  310 KONV = 0
C     SUSEQUENT ITERATIONS
      KONVD = 1
      KONVP=1
      KONVL=1
      KONVLF=1
      
      IF(ISMEARED.NE.1) GO TO 311
C
C     ISMEARED = 0 ili 1, KORISTI SLEDECE RUTINE ZA PROVERU KONVERGENCIJE:  
      IF(MULTIMOL.EQ.1) THEN
         IF(ICONV.EQ.1)CALL KONVTE(A(LF),A(LTT8),A(LTT1),A(LIDT),
     1   A(LIDT),JEDN,ITER,TREF,DTMOD,EPSTA,EPSTR,KONVP,IPRINT,NPRINT,
     2   KOR,NDT,VREME,NPT,ILAMDA,2,NDIMIDT)
	   IF(IDIFFHEAT.EQ.1)
     1   CALL KONVTE(A(LF),A(LTT8),A(LTT1),A(LIDT),A(LIDT),JEDN,ITER,
     2    TREF,DTMOD,EPSTA,EPSTR,KONVD,IPRINT,NPRINT,KOR,NDT,VREME,NPT,
     3    ILAMDA,4,NDIMIDT)
      ELSE 
         IF(ICONV.EQ.1)
     1     CALL KONVTEMULT(A(LF),A(LTT1PM),JEDN,ITER,TREF,DTMOD,EPSTA,
     2        EPSTR,KONVP,IPRINT,NPRINT,KOR,NDT,VREME,NPT,2,MULTIMOL,MM)
         IF(IDIFFHEAT.EQ.1)
     1     CALL KONVTEMULT(A(LF),A(LTT1CM),JEDN,ITER,TREF,DTMOD,EPSTA,
     2        EPSTR,KONVD,IPRINT,NPRINT,KOR,NDT,VREME,NPT,4,MULTIMOL,MM)
      ENDIF
      GOTO 312

  311 CONTINUE
      IF(IPASSME.EQ.1) THEN
         IF(MULTIMOL.EQ.1) THEN
            CALL KONVTEPD2(A(LF),A(LTT8),A(LTT1P),A(LIDT),A(LIDT),
     1      IACTIVE,JEDN,ITER,TREFP,DTMODP,EPSTA,EPSTR,KONVP,
     2      IPRINT,NPRINT,KOR,NDT,VREME,NPT,NDIMIDT,IPASSME,ICONV)
         ELSE
            CALL KONVTEPD2M(A(LF),A(LTT8),A(LTT1PM),A(LIDT),A(LIDT),
     3      IACTIVE,JEDN,ITER,TREFD,DTMODD,EPSTA,EPSTR,KONVP,
     2      IPRINT,NPRINT,KOR,NDT,VREME,NPT,NDIMIDT,IPASSME,ICONV,
     3      MULTIMOL,MM)
         ENDIF
      ELSE
         IF(MULTIMOL.EQ.1) THEN
            CALL KONVTEPD2(A(LF),A(LTT8),A(LTT1C),A(LIDT),A(LIDT),
     3      IACTIVE,JEDN,ITER,TREFD,DTMODD,EPSTA,EPSTR,KONVD,
     2      IPRINT,NPRINT,KOR,NDT,VREME,NPT,NDIMIDT,IPASSME,ICONV)
         ELSE
            CALL KONVTEPD2M(A(LF),A(LTT8),A(LTT1CM),A(LIDT),A(LIDT),
     3      IACTIVE,JEDN,ITER,TREFD,DTMODD,EPSTA,EPSTR,KONVC,
     2      IPRINT,NPRINT,KOR,NDT,VREME,NPT,NDIMIDT,IPASSME,ICONV,
     3      MULTIMOL,MM)          
         ENDIF
      ENDIF
C
  312 CONTINUE
	KONV=KONVP*KONVD*KONVL*KONVLF
      IF(KONV.EQ.1) THEN
        IF(IDEFORMG.EQ.1.AND.INDFLUXE.EQ.0) THEN    
           INDFLUXE=1
           CINN0=CINN
           GO TO 270
        ENDIF
        GO TO 320  
      ENDIF
      IF(ITER.EQ.MAXIT) GO TO 315
      ITER = ITER + 1
      GO TO 172
  315 EPST = 100.*EPSTR
      IF(ISRPS.EQ.0)
     *WRITE(3,2040) KOR,ITER,EPST,TREF,DTMOD
      IF(ISRPS.EQ.1)
     *WRITE(3,6040) KOR,ITER,EPST,TREF,DTMOD
 2040 FORMAT(/' DOSTIGNUT MAKSIMALAN BROJ ITERACIJA'/1X,'KORAK BROJ =',
     1 I5/1X,'BROJ ITERACIJA, ITER =',I3/1X,'DOZV. GRESKA U ODNOSU NA '
     2,'POCETNI PRIRASTAJ TEMP. U KORAKU (%), EPST =',D12.5/1X,
     3 'REFERENTNA VREDNOST, TREF =',D12.5/1X,'DOSTIGNUTA VREDNOST ',
     4 'MODULA PRIRASTAJA TEMP., DTMOD =',D12.5)
 6040 FORMAT(////
     1' MAXIMUM NUMBER OF ITERATION ACHIEVED'/' STEP NO. =',I5/
     1' NUMBER OF ITERATION, ITER =',I5/' ALLOWED ERROR IN REGARD TO',
     2' INITIAL INCREASE OF TEMPERATURE WITHIN STEP,'/' (%) EPST =',
     3  1PD12.5/' REF. VALUE, TREF =',1PD12.5/' ACHIEVED VELUE OF ',
     4 'TEMPERATURE INCREASE MODULE, DTMOD =',1PD12.5///)
      IF(NCZZ.GT.0)THEN
        IF(ISRPS.EQ.0)
     *  WRITE(3,2041) NCZZ
        IF(ISRPS.EQ.1)
     *  WRITE(3,6041) NCZZ
      ENDIF
 6041 FORMAT(' THERE ARE LAST NCZZ=',I5,'STEPS WRITTEN '/
     1' POSIBLE RESTART')
 2041 FORMAT(' POSTOJI ZAPISANO ZADNJIH NCZZ=',I5,' KORAKA'/
     1' MOGUCE JE RESTARTOVANJE PROGRAMA')
      STOP
CE   CONVERGENCE REACHED
  320 CONTINUE
C
      IPRINT = IPRINT + 1
C
C     UPDATE NODAL FLUXES

      IF(IREPEATDC.EQ.1) GO TO 700
c      ITER=0
      IF(LINTE.EQ.1.OR.MULTIMOL.GT.1) GO TO 330
      DO 331 I=1,JEDN
      II = I - 1
  331 A(LTT1+II) = A(LF+II)
  330 CONTINUE
C
C     PRINTOUT TO LST FILE
C
      IF (NPRINT.LT.0) GO TO 332
      IF(KOR.GT.1.AND.KOR.LT.NDTT) THEN
	   IF(IPRINT.LT.NPRINT) GO TO 332
	   IPRINT = 0
	ENDIF
C
      IF(ISMEARED.EQ.1) THEN
         IF(IDARCY.EQ.0) THEN
           CALL PRINTE(A(LIDT),A(LISKC),A(LTCONS),A(LTT1),A(LFLUXDXU),
	1       A(LFLUXDYU),NPT,VREME,KOR,ITER,
     2       LINTE,INDSC,IFORM,NTCONS)
         ELSE  
           IF(MULTIMOL.EQ.1) THEN
              CALL PRINTEDARCY(A(LIDT),A(LIDARCYMA),A(LTT1),A(LNZADJ),
     1        A(LZADFM),A(LCORD),A(LVELOC),NZADP,indiffus,IHEAT)
           ELSE
              CONTINUE                            ! TO ADD THIS PART
           ENDIF
         ENDIF 
      ELSE 
C
C       TEMPORARY PRINTOUT
C
        LMAXSAVE=LMAX
        IF(ILARGEVES.EQ.1.AND.MULTIMOL.EQ.1.AND.INDMIG.EQ.0) THEN       ! FOR ONE MOLECULE ONLY
            LIZADLOCALDI=LMAX
            IF(NZADP.GT.0) THEN
               LMAX=LIZADLOCALDI+NPT
            ENDIF   
            IF(IPASSME.EQ.1) THEN     
               CALL PRINTPLARGEVS(A(LIDT),A(LTT1P),A(LNZADJ),
     2         A(LZADATA1),A(LIZADLOCALDI),A(LIPIPENODV),IACTIVE,NPT,
     3         NZADP,KOR,ITER,VREME,NDIMIDT,JEDN,ICONV,INDIFFUS,IPASSME)
           ELSE
              CALL PRINTPLARGEVS(A(LIDT),A(LTT1C),A(LNZADJ),
     2        A(LZADATA1),A(LIZADLOCALDI),A(LIPIPENODV),IACTIVE,NPT,
     3        NZADP,KOR,ITER,VREME,NDIMIDT,JEDN,ICONV,INDIFFUS,IPASSME) 
           ENDIF
        ENDIF
C
C       PRINTOUT TO LST
C
C       IF(MULTIMOL.GT.1.OR.INDMIG.EQ.1) GO TO 332      ! BELOW FOR ONE MOLECULE ONLY
        LMAX=LMAXSAVE
        KID=1
        IF(IPASSME.EQ.2) KID=3
        LIZADLOCALDI=LMAX
        NZADPP=NZADP
        IF(MULTIMOL.GT.1)NZADPP=NZADPV(MM) 
        NDIMTOTAL=0
        IF(NZADPP.GT.0) THEN
          NDIMTOTAL=4+NDIMCELL
          LMAX=LIZADLOCALDI+NDIMTOTAL*NPT
        ENDIF
C
        CALL PRINTSMEAREDPD23(A(LIDT),A(LIDTV),A(LIDTVCELL),A(LTT1P),
     1    A(LTT1C),A(LTT1PM),A(LTT1CM), A(LNZADNODF),A(LZADATM1),
     2    A(LNZADJ),A(LZADATA1),A(LIZADLOCALDI),A(LIPIPENODV),IACTIVE,
     3    A(LIDVS),A(LNZADNODVS),A(LZADATAVS),A(LIDLYMPHH),A(LIDLYMPHC),
     4    A(LINPUTLY),A(LZADALYMH1),NZADPLYV(MM),NZADLYMPHMX,NPT,NZADPP,
     5    KOR,ITER,VREME,NDIMIDG,ILARGEVES,JEDNPRES,JEDNCONC,JEDNPMAX,
     6    JEDNCMAX,IPASSME,ISMEARED,NDIMTOTAL,NZADPMAX,NDIMCELL,
     7    MULTIMOL,MM,INDLYMPH,INDLYMPHH,INDLYMPHC) 
C
        IF(NDIMADHMAX.GT.0) THEN
C          PRINTOUT ADHEARED CONCENTRATION AND MASS
          KK=1
          IF(NDIMCELL.GT.0) KK=NDIMCELL
          call MEMORYT(LAMASADHV,LMAX,2*KK*NPT,NTOTA,IIZLAZ)  
          CALL PRINTADHESED(A(LIPIPENODV),A(LVFMULTIT),A(LVOLSMEV),
     1         A(LDIAMCELLV),A(LWALLAREAV),A(LIADHESINODEV),
     2         A(LADHESINODEV),A(LADHICONCV),A(LAMASADHV),KOR,NPT,
     3         NDIMCELL,NDIMADHMAX,IADHIMAX,MULTIMOL,KK,MM)            
        ENDIF
        LMAX=LMAXSAVE
      ENDIF
  332 CONTINUE
C
      IF(ISMEARED.NE.1.AND.MULTIMOL.EQ.1) THEN
        LMAXSAVE=LMAX 
        IF(IPASSME.EQ.1.AND.IPRINTVEL.EQ.1) THEN 
           DO NGE = 1,NGET
              NETIP=NELEDAT(NGE,1)
              IF(NETIP.EQ.2)CALL PRINTSMEARED2(LVELOC)
              IF(NETIP.EQ.3)CALL PRINTSMEAREDV3(LVELOC)
           ENDDO
           LMAX=LMAXSAVE
        ENDIF
      ENDIF
C
      IF(ISMEARED.NE.1.AND.MULTIMOL.EQ.1) THEN 
         IF(IPASSME.EQ.1.AND.INDIFFUS.EQ.1) GO TO 333
      ENDIF
C
      IF(MULTIMOL.GT.1.AND.INDMIG.EQ.0) THEN
         IF(MM.LT.MULTIMOL) THEN
            MM=MM+1
            GO TO 860
         ELSEIF(IPASSME.EQ.1.AND.INDIFFUS.EQ.1) THEN
            MM = 1
            GO TO 333
         ENDIF
      ENDIF
      IF(IMIGTOT.GT.0) THEN
         IF(INDMIG.EQ.0) THEN
            INDMIG=1           
C
C           STORE CONCENTRATIONS IN CASE OF CHEMOTAXIS
            IF(INDCHTAX.GT.0) THEN
                CALL CHEMOTAXCONC(A(LIDT),A(LIDTV),A(LTT1C),A(LTT1CM),
     1          A(LNZADJ),A(LZADATA1),A(LNZADNODF),A(LZADATM1),
     2          A(LCHTAXV),NZADPV(MM),NZADPMAX,MULTITIS,MULTIMOL,NPT,
     3          NZADP,NDIMIDT,JEDNCONC,JEDNCMAX,NDIMCELL)  
            ENDIF     
                                  
            GO TO 333
         ENDIF
         IF(INDMIG.EQ.1) THEN
C           UPDATE CELL VOLUMETRIC FRACTIONS IN CASE OF CELL MIGRATION 
C           AND PRINTOUT CELL VOLUMETRIC FRACTIONS
            LMAXSAVE=LMAX
            CALL MEMORYT(LDELTAV,LMAX,NPT,NTOTA,IIZLAZ)
            CALL MEMORYT(LVFDTV,LMAX,NPT,NTOTA,IIZLAZ)    
            CALL UPDATECELLMIG(A(LVFTT),A(LVFMULTIT),A(LDELTAV),
     1           A(LVFDTV),NDIMCELL,NPT)
            LMAX=LMAXSAVE
         ENDIF
      ENDIF     
C
C     PRINTOUT TO UNV FILE
C
      IGRKOR = IGRKOR + 1
      IF(IDARCY.NE.0.AND.IGRAFF.GT.0.AND.
     1   (IGRKOR.EQ.IGRAFF.OR.KOR.EQ.NDT) ) THEN
        KORGR  = KORGR + 1
C
        LINODE = LMAX  
        LMAX   = LMAX + NPT
C
        IF(INFF.EQ.1.AND.ISMEARED.EQ.1) THEN
          IF(MULTIMOL.EQ.1) THEN
             CALL DARCYVELOC(A(LIDT),A(LIDARCYMA),A(LTT1),A(LNZADJ),
     1          A(LZADFM),A(LCORD),A(LVELOC),A(LINODE),NZADP,indiffus,
     2          IHEAT,NDIMIDT)
          ELSE
             CONTINUE              !ADD FOR MULTIMOLAR
          ENDIF
C          
            IF(MULTITIS.EQ.0) THEN                ! COUPLED CALCULATION
               CALL TKFORMDARCY(A(LTT1),A(LTT1TOT),A(LIDT),A(LIDARCYMA),
     1         A(LNZADJ),A(LZADFM),NZADP,indiffus,IHEAT,ICONV,NDIMIDT)
               CALL TGRAFRDARCY(A(LTT1TOT),A(LIDT),A(LVELOC),NPT,18,
     1          NASLOV,KOR,VREME,ICONV,JEDN,NGET,NTOTA,IIZLAZ,NDIMIDT)
            ELSE
               allocate(TT1TOTP(MULTIMOL*2*NPT))
               allocate(TT1TOTC(MULTIMOL*7*NPT))
               CALL clear(TT1TOTP,MULTIMOL*2*NPT)
               CALL clear(TT1TOTC,MULTIMOL*7*NPT)
                
               LMAXSAVE=LMAX
               LIZADLOCALDI=LMAX
               NZADPP=NZADP
                
               DO MM = 1,MULTIMOL
                
               IF(MULTIMOL.GT.1)NZADPP=NZADPV(MM) 
               NDIMTOTAL=0
               IF(NZADPP.GT.0) THEN
                  NDIMTOTAL=4+NDIMCELL
                  LMAX=LIZADLOCALDI+NDIMTOTAL*NPT
               ENDIF
             
               CALL TKFORMMULTIMOL(A(LIDT),A(LIDTV),A(LTT1TOT),TT1TOTP,
     1       TT1TOTC,A(LIDTVCELL),A(LTT1P),A(LTT1C),A(LTT1PM),
     2       A(LTT1CM),A(LNZADNODF),A(LZADATM1),A(LNZADJ),A(LZADATA1),
     3       A(LIZADLOCALDI),A(LIPIPENODV),A(LIDLYMPHH),A(LIDLYMPHC),
     4       A(LINPUTLY),A(LZADALYMH1),NZADPLYV(MM),NZADLYMPHMX, 
     4       IACTIVE,NPT,NZADPP,KOR,ITER,
     4       VREME,NDIMIDG,ILARGEVES,JEDNPRES,JEDNCONC,JEDNPMAX,
     5       JEDNCMAX,ISMEARED,NDIMTOTAL,NZADPMAX,NDIMCELL,MULTIMOL,MM,
     6       INDLYMPH,INDLYMPHH,INDLYMPHC)
         
                LMAX=LMAXSAVE
                ENDDO
         
                CALL TGRAFRMULTIMOL(TT1TOTP,TT1TOTC,A(LTT1C),A(LTT1CM),
     1        A(LIDT),A(LIDVS),A(LNZADNODVS),A(LZADATAVS),A(LVELOC),
     2        A(LIPIPENODV),NPT,18,NASLOV,KOR,VREME,ICONV,JEDN,NGET,
     3        NTOTA,IIZLAZ,IPRINTVEL,ISMEAREDG,NDIMCELL,MULTIMOL,
     4        JEDNCONC,JEDNCMAX,INDLYMPHC)

                deallocate(TT1TOTP)
                deallocate(TT1TOTC)
            ENDIF
C
          IF(nConcDiags.eq.1) THEN
            DO NGE = 1,NGET
              NETIP = NELEDAT(NGE,1)  
              NET   = NELEDAT(NGE,2)
              LNEL  = NELEDAT(NGE,7)
              
              IF(NETIP.EQ.2) THEN
C                CALL MASS2D(A(LNEL),A(LCORD),A(LIDT),A(LTT1TOT),NETIP,
C     1            NET,NPT,NGE,VREME)
              ELSE IF (NETIP.EQ.3) THEN
                CALL MASS3D(A(LNEL),A(LCORD),A(LIDT),A(LTT1TOT),NETIP,
     1            NET,NPT,NGE,VREME,160,NDIMIDT)
              ENDIF
            ENDDO
          ENDIF
        ENDIF
        LMAX = LINODE
C
C       SMEARED MODEL: ISMEARED > 1 OR = 0
C       
        IF(INFF.EQ.1.AND.ISMEARED.NE.1) THEN
          IF(MULTITIS.EQ.0) THEN
            CALL TKFORMSMEAR(A(LTT1P),A(LTT1C),A(LTT1TOT),A(LIDT),
     1      A(LIDARCYMA),A(LNZADJ),A(LZADFM),NZADP,indiffus,IHEAT,ICONV)
            CALL TGRAFRSMEAR(A(LTT1TOT),A(LIDT),A(LVELOC),A(LIPIPENODV),
     1        NPT,18,NASLOV,KOR,VREME,ICONV,JEDN,NGET,NTOTA,IIZLAZ,
     2        IPRINTVEL,ISMEAREDG)
          ELSE
            allocate(TT1TOTP(MULTIMOL*2*NPT))
            allocate(TT1TOTC(MULTIMOL*7*NPT))
            CALL clear(TT1TOTP,MULTIMOL*2*NPT)
            CALL clear(TT1TOTC,MULTIMOL*7*NPT)
            
            LMAXSAVE=LMAX
            LIZADLOCALDI=LMAX
            NZADPP=NZADP
            
            DO MM = 1,MULTIMOL
            
            IF(MULTIMOL.GT.1)NZADPP=NZADPV(MM) 
            NDIMTOTAL=0
            IF(NZADPP.GT.0) THEN
              NDIMTOTAL=4+NDIMCELL
              LMAX=LIZADLOCALDI+NDIMTOTAL*NPT
            ENDIF
         
            CALL TKFORMMULTIMOL(A(LIDT),A(LIDTV),A(LTT1TOT),TT1TOTP,
     1        TT1TOTC,A(LIDTVCELL),A(LTT1P),A(LTT1C),A(LTT1PM)
     2        ,A(LTT1CM),A(LNZADNODF),A(LZADATM1),A(LNZADJ),A(LZADATA1),
     3        A(LIZADLOCALDI),A(LIPIPENODV),A(LIDLYMPHH),A(LIDLYMPHC),
     4        A(LINPUTLY),A(LZADALYMH1),NZADPLYV(MM),NZADLYMPHMX,
     4        IACTIVE,NPT,NZADPP,KOR,ITER,
     4        VREME,NDIMIDG,ILARGEVES,JEDNPRES,JEDNCONC,JEDNPMAX,
     5        JEDNCMAX,ISMEARED,NDIMTOTAL,NZADPMAX,NDIMCELL,MULTIMOL,MM,
     6        INDLYMPH,INDLYMPHH,INDLYMPHC)
     
            LMAX=LMAXSAVE
            ENDDO
     
            CALL TGRAFRMULTIMOL(TT1TOTP,TT1TOTC,A(LTT1C),A(LTT1CM),
     1        A(LIDT),A(LIDVS),A(LNZADNODVS),A(LZADATAVS),A(LVELOC),
     2        A(LIPIPENODV),NPT,18,NASLOV,KOR,VREME,ICONV,JEDN,NGET,
     3        NTOTA,IIZLAZ,IPRINTVEL,ISMEAREDG,NDIMCELL,MULTIMOL,
     4        JEDNCONC,JEDNCMAX,INDLYMPHC)

            deallocate(TT1TOTP)
            deallocate(TT1TOTC)
          ENDIF
        ENDIF
C
        IGRKOR = 0   
      ENDIF
  566 continue
  
      IF(IDARCY.GE.0.OR.IPASS.NE.2) THEN
        IF(ISRPS.EQ.0)
     *    WRITE(*,2876) KOR,NDTT
        IF(ISRPS.EQ.1)
     *    WRITE(*,6876) KOR,NDTT
 2876   FORMAT(' *** KRAJ VREMENSKOG KORAKA BROJ',I5,' /',I4,' ***')
 6876   FORMAT(' *** END OF TIME STEP NUMBER',I5,' /',I7,' ***')
      ENDIF    
C
C     CONCENTRATIONS FOR END OF TIME STEP
C
  500 CONTINUE
C
C     END OF TIME STEPS LOOP
C
      IF(IDARCY.GE.0.OR.INFF.EQ.1) THEN
        CALL VREM(3)
      ENDIF
C     
  700 CONTINUE
C
CE    READ NEXT DATA CASE OR PROGRAM STOP
C
      CALL ISPITA(ACOZ)
      READ(ACOZ,2999) KRAJ
 2999 FORMAT(20A4)
      IF(KRAJ.NE.'STOP')  GO TO 9999
CE CLOSE FILES
      CALL ZATVOR

      IF(nConcDiags.eq.1) CALL CLOSECONCMASSFILES

      STOP
      END
C=======================================================================
c     auxiliary subroutine for printings
C=======================================================================
      SUBROUTINE ZATVOR
CE CLOSE FILES
      COMMON /PRIMER/ IPRBR,INDIZL,INDGRA
      CLOSE (1,STATUS='KEEP')
      IF(INDIZL.EQ.1) CLOSE (3,STATUS='KEEP')
      IF(INDGRA.EQ.1) THEN
        CLOSE (18,STATUS='KEEP')
      ENDIF
      RETURN
      END
C=======================================================================
c
C=======================================================================
      SUBROUTINE OTVORI(IPASS)
CE OPEN FILES
      CHARACTER*20 IME
      COMMON /IME/ IME
      COMMON /SRPSKI/ ISRPS
CE INPUT FILE
      IF(ISRPS.EQ.0)
     1WRITE(6,*) '   IME ULAZNE DATOTEKE   <pakt.dat>'
      IF(ISRPS.EQ.1) THEN
         IF(IPASS.EQ.1) THEN 
             WRITE(6,*) '   INPUT FILE NAME   <pakt.dat>'
         ELSE
            WRITE(6,*) '   INPUT FILE NAME   <pakt2.dat>'
         ENDIF
      ENDIF
      READ(5,1000) IME
 1000 FORMAT (A20)
      IF(IPASS.EQ.1) THEN
         IF(IME.EQ.'                    ') IME = 'pakt.dat'
      ELSE
         IF(IME.EQ.'                    ') IME = 'pakt2.dat'
      ENDIF
      CALL IMENA(IME)
      IULAZ=1
      IF(IPASS.EQ.2) RETURN
      IF(IPASS.EQ.2)IULAZ=79 
      IF(IPASS.EQ.1.OR.IPASS.EQ.2) THEN
          OPEN (IULAZ,FILE=IME,STATUS='OLD',FORM='FORMATTED',
     1     ACCESS='SEQUENTIAL')
CE  SCRATCH FILES
         OPEN (15,STATUS='SCRATCH',FORM='UNFORMATTED',
     1    ACCESS='SEQUENTIAL')
         OPEN (19,FILE='ZITEMP',STATUS='UNKNOWN',FORM='UNFORMATTED',
     1    ACCESS='SEQUENTIAL')
         OPEN (20,STATUS='SCRATCH',FORM='UNFORMATTED',
     1    ACCESS='SEQUENTIAL')
      ENDIF
      RETURN
      END
C=======================================================================
c
C======================================================================
      SUBROUTINE OTVIZL
CE OPEN OUTPUT FILE
      LOGICAL OLDNEW
      CHARACTER*24 PAKLST,PAKUNV
      CHARACTER*3  STAT
      CHARACTER*20 IME
      COMMON /IME/ IME
      COMMON /IMEULZ/ PAKLST,PAKUNV
      COMMON /IMEDUZ/ IDUZIN
      COMMON /SRPSKI/ ISRPS
CE OUTPUT FILE
    5 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(6,*) '   IME IZLAZNE DATOTEKE   <',
     1               PAKLST(1:IDUZIN),'>'
      IF(ISRPS.EQ.1)
     1WRITE(6,*) '   OUTPUT FILE NAME   <',
     1               PAKLST(1:IDUZIN),'>'
      READ(5,1000) IME
 1000 FORMAT (A20)
      IF(IME.EQ.'                    ') IME = PAKLST(1:20)
   10 STAT='NEW'
      INQUIRE(FILE=IME,EXIST=OLDNEW)
      IF(OLDNEW) STAT='OLD'
      IF(STAT.EQ.'NEW') THEN
      OPEN (3,FILE=IME,STATUS='NEW',FORM='FORMATTED',
     1 ACCESS='SEQUENTIAL')
                        ELSE
      OPEN (3,FILE=IME,STATUS='OLD',FORM='FORMATTED',
     1 ACCESS='SEQUENTIAL')
                        ENDIF
      IND=0
      IF(STAT.EQ.'OLD') CALL BRIS (IME,3,IND)
      IF(IND.EQ.1)GO TO 10
      IF(IND.EQ.2)GO TO 5
      RETURN
      END
C=======================================================================
c
C======================================================================
      SUBROUTINE OTVGRA
CE OPEN FILE FOR GRAPHIC
      LOGICAL OLDNEW
      CHARACTER*24 PAKLST,PAKUNV
      CHARACTER*3  STAT
      CHARACTER*20 IME
      COMMON /IME/ IME
      COMMON /IMEULZ/ PAKLST,PAKUNV
      COMMON /IMEDUZ/ IDUZIN
      COMMON /SRPSKI/ ISRPS
CE OUTPUT FOR GRAPHIC
   15 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(6,*) '   IME GRAFICKE DATOTEKE   <',
     1               PAKUNV(1:IDUZIN),'>'
      IF(ISRPS.EQ.1)
     1WRITE(6,*) '   OUTPUT GRAPHICS FILE NAME   <',
     1               PAKUNV(1:IDUZIN),'>'
      READ(5,1000) IME
 1000 FORMAT (A20)
      IF(IME.EQ.'                    ') IME = PAKUNV(1:20)
   20 STAT='NEW'
      INQUIRE(FILE=IME,EXIST=OLDNEW)
      IF(OLDNEW) STAT='OLD'
      IF(STAT.EQ.'NEW') THEN
      OPEN (18,FILE=IME,STATUS='NEW',FORM='FORMATTED',
     1 ACCESS='SEQUENTIAL')
                        ELSE
      OPEN (18,FILE=IME,STATUS='OLD',FORM='FORMATTED',
     1 ACCESS='SEQUENTIAL')
                        ENDIF
      IND=0
      IF(STAT.EQ.'OLD') CALL BRIS (IME,18,IND)
      IF(IND.EQ.1)GO TO 20
      IF(IND.EQ.2)GO TO 15
      RETURN
      END
C=======================================================================
c
C=======================================================================
      SUBROUTINE BRIS (IME,IUN,IND)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
CE.   P R O G R A M
CE.      TO ERASE FILE
      CHARACTER*1     CH
      CHARACTER*20    IME
      COMMON /SRPSKI/ ISRPS
      IND=2
      IF(ISRPS.EQ.0)
     1WRITE(6,2000) IME
      IF(ISRPS.EQ.1)
     1WRITE(6,6000) IME
      READ(5,1000) CH
      IF(CH.EQ.' ') CH = 'D'
      IF(CH.EQ.'D'.OR.CH.EQ.'d') THEN
                    CLOSE (IUN,STATUS='DELETE')
                    IND=1
                        ELSE
                        CLOSE (IUN,STATUS='KEEP')
                    ENDIF
      RETURN
 1000 FORMAT(A20)
 2000 FORMAT ('   DATOTEKA    ',A20,' VEC POSTOJI'//
     1'  DA LI JE PREBRISATI  ( D / N ) "D" ? ')
 6000 FORMAT ('   FILE    ',A20,' ALREADY EXISTS'//
     1'                 PRESS "ENTER" TO DELETE OR'/
     1'                 KEY   "N"     TO BYPASS')
      END
C======================================================================
c
C======================================================================
      SUBROUTINE VREM(KV)
CE TIME OF PROGRAM EXECUTION - VERSION FOR PC
      COMMON /VREMEN/ IVREM(4,4)
      COMMON /SRPSKI/ ISRPS
      IF(KV.LT.3) RETURN
      IF(ISRPS.EQ.0)
     1WRITE(3,2000) ((IVREM(I,K),I=1,4),K=1,KV)
      IF(ISRPS.EQ.1)
     1WRITE(3,6000) ((IVREM(I,K),I=1,4),K=1,KV)
      RETURN
 2000 FORMAT(///'1'///6X,'I Z V E S T A J    O    V R E M E N U    I Z V
     1 R S A V A N J A'/6X,62('-')///11X,
     2'POCETAK UCITAVANJA ULAZNIH PODATAKA ............ ',
     2 I2,':',I2,':',I2,'.',I2,//11X,
     4'POCETAK IZVRSAVANJA PO PERIODIMA ............... ',
     3 I2,':',I2,':',I2,'.',I2,//11X,
     5'ZAVRSETAK PRORACUNA ............................ ',
     5 I2,':',I2,':',I2,'.',I2///)
 6000 FORMAT(///'1'///6X,'E X E C U T I O N    T I M I N G    I N F O R
     1M A T I O N'/6X,57('-')///11X,
     2'TIME AT THE START OF READ OF INPUT DATA ........ ',
     2 I2,':',I2,':',I2,'.',I2,//11X,
     3'TIME AT THE START OF FORM OF MATRICES .......... ',
     3 I2,':',I2,':',I2,'.',I2,//11X,
     5'END OF JOB  .................................... ',
     5 I2,':',I2,':',I2,'.',I2///)
      END
C======================================================================
      SUBROUTINE ZAGLAV
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
CE.    P R O G R A M
CE.        TO PRINT HEADER - PAKNEL
      COMMON /SRPSKI/ ISRPS
      IF(ISRPS.EQ.0)
     *WRITE(3,2040)
      IF(ISRPS.EQ.1)
     *WRITE(3,6040)
      IF(ISRPS.EQ.0)
     *WRITE(3,2100)
      IF(ISRPS.EQ.1)
     *WRITE(3,6100)
      IF(ISRPS.EQ.0)
     *WRITE(3,2103)
      IF(ISRPS.EQ.1)
     *WRITE(3,6103)
c    IF(ISRPS.EQ.0)
c     *WRITE(3,2115)
c      IF(ISRPS.EQ.1)
c     *WRITE(3,6115)
      RETURN
 2040 FORMAT('1'/////////33X,'P R O G R A M'/
     1 10X,'ZA NESTACIONARNU I NELINEARNU ANALIZU PROVODJENJA TOPLOTE'/
     1 26X,'METODOM KONACNIH ELEMENATA')
 2100 FORMAT(/////////////
     1 11X,' PPPPPPPPP         AAAA        KK      KK     TTTTTTTTTT'/
     2 11X,' PPPPPPPPPP       AAAAAA       KK     KK      TTTTTTTTTT'/
     3 11X,' PP      PP      AA    AA      KK    KK           TT'/
     4 11X,' PP      PP     AA      AA     KK   KK            TT'/
     5 11X,' PPPPPPPPPP     AA      AA     KK  KK             TT'/
     6 11X,' PPPPPPPPP      AA      AA     KKKKK              TT'/
     7 11X,' PP             AAAAAAAAAA     KKKKKKK            TT'/
     8 11X,' PP             AAAAAAAAAA     KK    KK           TT'/
     1 11X,' PP             AA      AA     KK     KK          TT'/
     2 11X,' PP             AA      AA     KK      KK         TT')
 2103 FORMAT(//////5X,'---------------------------  VERZIJA  1.00  ',
     1                '---------------------------')
 2115 FORMAT(//////////
     1 20X,'UNIVERSITET "SVETOZAR MARKOVIC"'/
     1 20X,'MASINSKI FAKULTET'/
     1 20X,'LABORATORIJA ZA INZINJERSKI SOFTVER'/
     1 20X,'34000 KRAGUJEVAC'/
     1 20X,'JUGOSLAVIJA'//////)
 6040 FORMAT('1'/////////28X,'FINITE ELEMENT PROGRAM'/
     1 19X,'FOR LINEAR AND NONLINEAR ANALYSIS OF FIELD',
     2     ' PROBLEMS')
 6100 FORMAT(/////////////
     1 11X,' PPPPPPPPP         AAAA        KK      KK     TTTTTTTTTT'/
     2 11X,' PPPPPPPPPP       AAAAAA       KK     KK      TTTTTTTTTT'/
     3 11X,' PP      PP      AA    AA      KK    KK           TT'/
     4 11X,' PP      PP     AA      AA     KK   KK            TT'/
     5 11X,' PPPPPPPPPP     AA      AA     KK  KK             TT'/
     6 11X,' PPPPPPPPP      AA      AA     KKKKK              TT'/
     7 11X,' PP             AAAAAAAAAA     KKKKKKK            TT'/
     8 11X,' PP             AAAAAAAAAA     KK    KK           TT'/
     1 11X,' PP             AA      AA     KK     KK          TT'/
     2 11X,' PP             AA      AA     KK      KK         TT')
 6103 FORMAT(//////5X,'---------------------------  VERSION  1.00  ',
     1                '---------------------------')
 6115 FORMAT(//////////
     1 20X,'RESEARCH AND DEVELOPMENT CENTER FOR BIOENGINEERING',
     2     ' (B I O I R C)'/
     1 20X,'UNIV KRAGUJEVAC - FACULTY OF TECHNICAL SCIENCES',
     1 ' (ENG SOFTWARE LABORATORY)'/
     1 20X,'34000 KRAGUJEVAC'/
     1 20X,'SERBIA'///////)
      END
C=======================================================================
C
C=======================================================================
       SUBROUTINE IMENA(IME)
      COMMON /IMEULZ/ PAKLST,PAKUNV
      COMMON /IMEDUZ/ IDUZIN
       CHARACTER *20 IME
       CHARACTER *3 VLST,MLST
       CHARACTER *3 VUNV,MUNV
       CHARACTER *3 LST,UNV
       CHARACTER *24 PAKLST,PAKUNV
       VLST='LST'
       VUNV='UNV'
       MLST='lst'
       MUNV='unv'
       IF (IME(1:1).GE.'A' .AND. IME(1:1).LE.'Z') THEN
        UNV=VUNV
        LST=VLST
       ELSE
        UNV=MUNV
        LST=MLST
       ENDIF
        IB=INDEX(IME,'.')
        DO 20 I=1,20
       IF (IME(I:I).EQ.' ') GOTO 30
        IA=I
  20    CONTINUE
  30     IF (IB.EQ.0) THEN
          PAKLST=IME(1:IA)//'.'//LST
          PAKUNV=IME(1:IA)//'.'//UNV
        IDUZIN=IA+4
        ELSE
          PAKLST=IME(1:IB-1)//'.'//LST
          PAKUNV=IME(1:IB-1)//'.'//UNV
        IDUZIN=IB+3
        ENDIF
        END
c=========================================================================
C
c=========================================================================
      SUBROUTINE MEMORYT(LSTART,LMAX,NBYTE,MAXVEC,IIZLAZ)
C
CE Subroutine MEMORYT is used for reservation of memory 
C
C     HERE ARRAY A IS IN DOUBLE PRECISION     
      !IF (MOD(LMAX,2).EQ.0) LMAX=LMAX+1
      !LSTART=LMAX
      !LMAX=LSTART+NBYTE*ITWO
      
      LSTART=LMAX
      LMAX=LSTART+NBYTE
C      IF (MOD(LMAX,2).EQ.0) LMAX=LMAX+1

      CALL PROMEM(LMAX,MAXVEC,IIZLAZ)

      END
C==========================================================================
C
C==========================================================================
       SUBROUTINE PROMEM(MEMNEW,MAXVEC,IIZLAZ)
C      COMMON /RADNIV/ MAXVEC,LMAX
C      COMMON /ULAZNI/ IULAZ,IIZLAZ
C
CE Subroutine PROMEM is used for checking memory space
C

       IF (MEMNEW.GT.MAXVEC) THEN
CS       WRITE(*,*) 'NEMA DOVOLJNO MEMORIJE ZA RESAVANJE PROBLEMA!!!'
CS       WRITE(IIZLAZ,*)'NIJE DOVOLJNO ZA RADNI VEKTOR ',MAXVEC,' MEMORIJE'
CS       WRITE(IIZLAZ,*) 'POTREBNO JE MEMORIJE VISE OD: ',MEMNEW
         WRITE(*,*) 'NOT ENOUGH MEMORY FOR THE PROBLEM!!!'
         WRITE(IIZLAZ,*)'NOT ENOUGH FOR WORKING VECTOR',MAXVEC,'MEMORY'
         WRITE(IIZLAZ,*) 'NEEDED MEMORY IS MORE THAN: ',MEMNEW
       STOP
       ENDIF

       END
C==========================================================================

C==========================================================================
      SUBROUTINE ADDSTF(A,B,C,S,P,JDIAG,LD,NEL,INDSK)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CE Subroutine ADDSTF is used for assemble global arrays
C
C
C.... ASSEMBLE GLOBAL ARRAYS
C
      DIMENSION A(*),B(*),JDIAG(*),P(*),S(NEL,*),LD(*),C(*)
      COMMON /CDEBUG/ IDEBUG
      IF(IDEBUG.GT.0) PRINT *, ' ADDSTF'
      DO 200 J = 1,NEL
		K = LD(J)
		IF(K.EQ.0) GO TO 200
		B(K) = B(K) + P(J)
		IF(INDSK.EQ.0) GO TO 200
		L = JDIAG(K) - K
		DO 100 I = 1,NEL
			M = LD(I)
			IF(M.GT.K.OR.M.EQ.0) GO TO 100
			M = L + M
			A(M) = A(M) + S(I,J)
			C(M) = C(M) + S(J,I)
  100		CONTINUE
  200 CONTINUE
      RETURN
      END    
C==========================================================================
C
C==========================================================================
      SUBROUTINE UACTCF(A,C,B,JDIAG,NEQ,KKK)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)

C
CE Subroutine UACTCF is used for equation solver
CE It is unsymmetric, active column equation solver 
C
      DIMENSION A(*),B(*),JDIAG(NEQ),C(*)
      COMMON /CDEBUG/ IDEBUG
      IF(IDEBUG.GT.0) PRINT *, ' UACTCL'
C
C.... UNSYMMETRIC,ACTIVE COLUMN PROFILE EQUATION SOLVER
C
      IF(KKK.EQ.1)THEN
        DO 800 J = 1,NEQ
        JD = JDIAG(J)
  800   C(JD)=1.D0
      ENDIF
C
C.... FACTOR A TO UT*D*U REDUCE B TO Y
C
      JR = 0
      DO 300 J = 1,NEQ
      JD = JDIAG(J)
      JH = JD - JR
      IF(JH.LE.1) GO TO 300
      IS = J + 1 - JH
      IE = J - 1
      IF(KKK.EQ.2) GO TO 250
      K = JR + 1
      ID = 0
C
C.... REDUCE ALL EQUATIONS EXCEPT DIAGONAL
C
      DO 200 I = IS,IE
      IR = ID
      ID = JDIAG(I)
      IH = MIN0(ID - IR - 1,I - IS)
      IF(IH.EQ.0) GO TO 150
      A(K) = A(K) - DOT(A(K - IH),C(ID - IH),IH)
      C(K) = C(K) - DOT(C(K - IH),A(ID - IH),IH)
  150 IF(DABS(A(ID)).GT.1.D-20) C(K) = C(K)/A(ID)
C 150 IF(DABS(A(ID)).GT.1.D-40) C(K) = C(K)/A(ID)
  200 K = K + 1
C
C.... REDUCE DIAGONAL TERM
C
      A(JD) = A(JD) - DOT(A(JR + 1),C(JR + 1),JH - 1)
C
C.... FORWARD REDUCE THE R.H.S.
C
  250 IF(KKK.EQ.2) B(J) = B(J) - DOT(C(JR + 1),B(IS),JH - 1)
  300 JR = JD
      IF(KKK.EQ.1) RETURN
C
C.... BACKSUBSTITUTION
C
      J = NEQ
      JD = JDIAG(J)
  500 IF(DABS(A(JD)).GT.1.D-20) B(J) = B(J)/A(JD)
C 500 IF(DABS(A(JD)).GT.1.D-40) B(J) = B(J)/A(JD)
      D = B(J)
      J = J - 1
      IF(J.LE.0) RETURN
      JR = JDIAG(J)
      IF(JD - JR.LE.1) GO TO 700
      IS = J - JD + JR + 2
      K = JR - IS + 1
      DO 600 I = IS,J
      B(I) = B(I) - A(I + K)*D
  600 CONTINUE
  700 JD = JR
      GO TO 500
      END                 
C==========================================================================
C
C==========================================================================
      DOUBLE PRECISION FUNCTION DOT(A,B,N)
C....  SKALARNI PROIZVOD VEKTORA
      DOUBLE PRECISION A,B
      DIMENSION A(*),B(*)
      DOT=0.D0
      DO 10 I=1,N
   10 DOT=DOT+A(I)*B(I)
      RETURN
      END
C=======================================================================
C
C=======================================================================
	SUBROUTINE ULMATERT(MATERP,AMATF,NUMMAT,maxPmat,IND)
C      READING MATERIAL DATA FOR DARCY COEFFICIENT OR DIFFUSION
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
c

      CHARACTER*130 ACOZ
      DIMENSION MATERP(NUMMAT),AMATF(NUMMAT,2,*)
      DO I=1,NUMMAT
	  DO J=1,maxPmat
        AMATF(I,1,J)=0.D0
        AMATF(I,2,J)=0.D0
	  ENDDO
	ENDDO
C
      IF(IND.EQ.1) THEN
        WRITE(3,6001)
      ELSE
        WRITE(3,6002)
      ENDIF
 6001 FORMAT(/' TABLE FOR DARCY COEFFICIENTS')
 6002 FORMAT(/' TABLE FOR DIFFUSION COEFFICIENTS')
C     
      DO 100 MAT=1,NUMMAT
      CALL ISPITA(ACOZ)
      READ(ACOZ,1007)MATNUMB,MATPT
	IF(MATPT.EQ.0) MATPT=1
	IF (MATNUMB.EQ.0)MATNUMB=1
	MATERP(MATNUMB)=MATPT
	IF(IND.EQ.1) THEN
        WRITE(3,6010)MATNUMB,MATPT
      ELSE
       WRITE(3,6014)MATNUMB,MATPT
      ENDIF
c	NUMPAIR(MATNUMB) = MATPT

	DO I=1,MATPT
        CALL ISPITA(ACOZ)
        READ(ACOZ,1008) AMATF(MATNUMB,1,I),AMATF(MATNUMB,2,I)
        WRITE(3,6015)AMATF(MATNUMB,1,I),AMATF(MATNUMB,2,I)
	ENDDO
C
  100 CONTINUE
c 
C 1007 FORMAT(9I8)
 1007 FORMAT(2I5)
 1008 FORMAT(2E20.6)
 6010 FORMAT(/
     *' MATERIAL NUMBER',19X,I5 /
	2' NUMBER OF POINTS',18X,I5/
	35X,'EQ.1 - CONSTANT DARCY COEFFICIENT'//
	4' PRESSURE            DARCY COEFFICIENT')
 6014 FORMAT(/
     *' MATERIAL NUMBER',19X,I5 /
	2' NUMBER OF POINTS',18X,I5/
	35X,'EQ.1 - CONSTANT DIFFUSION COEFFICIENT'//
	4' CONCENTRATION       DIFFUSION COEFFICIENT')
 6015 FORMAT(E14.5,11X,E14.5) 
C
      END
C===========================================================================
C
C=======================================================================
	SUBROUTINE ULMATERTH(MATERP,AMATFRO,AMATFSH,AMATFK,NUMMAT,maxPmat)
C      READING MATERIAL DATA FOR DARCY COEFFICIENT OR DIFFUSION
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
c

      CHARACTER*130 ACOZ
      DIMENSION MATERP(NUMMAT),AMATFRO(NUMMAT,2,*),AMATFSH(NUMMAT,2,*),
     1          AMATFK(NUMMAT,2,*)
      DO I=1,NUMMAT
	  DO J=1,maxPmat
	     DO K=1,2
             AMATFRO(I,K,J)=0.D0
             AMATFSH(I,K,J)=0.D0
             AMATFK(I,K,J)=0.D0
           ENDDO
	  ENDDO
	ENDDO
C
        WRITE(3,6001)
 6001 FORMAT(/' TABLE FOR THERMAL COEFFICIENTS')
C     
      DO 100 MAT=1,NUMMAT
      CALL ISPITA(ACOZ)
      READ(ACOZ,1007)MATNUMB,MATPT
	IF(MATPT.EQ.0) MATPT=1
	IF (MATNUMB.EQ.0)MATNUMB=1
	MATERP(MATNUMB)=MATPT
      WRITE(3,6010)MATNUMB,MATPT
c	NUMPAIR(MATNUMB) = MATPT

	DO I=1,MATPT
        CALL ISPITA(ACOZ)
        READ(ACOZ,1008)TEMP,RO,CC,AK
        AMATFRO(MATNUMB,1,I) = TEMP
        AMATFSH(MATNUMB,1,I) = TEMP
        AMATFK(MATNUMB,1,I)  = TEMP
        AMATFRO(MATNUMB,2,I) = RO
        AMATFSH(MATNUMB,2,I) = CC
        AMATFK(MATNUMB,2,I)  = AK
        WRITE(3,6015)TEMP,RO,CC,AK
	ENDDO
C
  100 CONTINUE
c 
C 1007 FORMAT(9I8)
 1007 FORMAT(2I5)
 1008 FORMAT(4F10.2)
 6010 FORMAT(/
     *' MATERIAL NUMBER',19X,I5 /
	2' NUMBER OF POINTS',18X,I5/
	35X,'EQ.1 - MATERIAL PARAMETERS ARE CONSTANT'//
	4' TEMPERATURE DENSITY SPECIFIC HEAT  H. CONDUCT COEFF')
 6015 FORMAT(4F10.2) 
C
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE VOLUME2D(NEL,CORD,VOL2D3D,THI2D,NETIP,NET,NPT,NGELE,
     1  VOL,IND)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     CALCULATE VOLUME OF 2D ELEMENT GROUP
C   
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON/REAL2D/ CK2(9,3),P2(2,9),PJ2(2,9),XJ2(2,2),H2(9),
     1AK2,CC2,HH2,QQ2,HHP2,DET2,DET21,F9(9),TT21(9),TT212(9),TT210(9) 
C
      DIMENSION NEL(NET,4),CORD(NPT,3),VOL2D3D(2,NET),THI2D(NET)
      DIMENSION XG(15),WGT(15),NREF(6),TBK(2),VPOT(9)
C
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
C
      IELX2 = 4
      THICK = 1.D0
      NE2D  = NET
      NCV2  = 4
C
      DO 200 NLM2= 1,NET     
CE      NODE COORDINATES OF ELEMENTS MATRIX
        DO I=1,4
          KK=NEL(NLM2,I)
          DO J=1,2
            CK2(I,J)=CORD(KK,J)
          ENDDO
        ENDDO
        THICK = THI2D(NLM2)
C
C       GAUSS INTEGRATION
        DO 100 NGX=1,NGAU2X 
        JR=NREF(NGAU2X) + NGX
        R = XG(JR)
        DO 100 NGY=1,NGAU2Y
        JS=NREF(NGAU2Y) + NGY
        S = XG(JS)
        WT=WGT(JR)*WGT(JS)
        CALL JACT2(R,S,NEL,0)
        WDT=WT*DET21*THICK

        IF(IND.EQ.1) THEN
          VOL2D3D(2,NGELE)=VOL2D3D(2,NGELE)+WDT
        ELSE
          VOL=VOL+WDT
        ENDIF

  100   CONTINUE
  200 CONTINUE   
C
      RETURN
      END
C====================================================================
C
C====================================================================
      SUBROUTINE OPENCONCMASSFILES
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     OPEN LST FILES FOR MEANCONCENTRATION AND MASS VS TIME DIAGRAMS
C
      IFILE=160
      OPEN (IFILE,FILE='CONCVSTIME.LST',STATUS='UNKNOWN',
     1      FORM='FORMATTED', ACCESS='SEQUENTIAL')
  
      WRITE(IFILE,1000)
 1000 FORMAT(7X,'TIME',7X,'CONC',7X,'MASS')
        
      RETURN
      END
C====================================================================
C
C====================================================================
      SUBROUTINE CLOSECONCMASSFILES
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     OPEN LST FILES FOR MEANCONCENTRATION AND MASS VS TIME DIAGRAMS
C
      IFILE=160
      CLOSE (IFILE,STATUS='KEEP')
     
      RETURN
      END
C=======================================================================
C
C======================================================================= 
      SUBROUTINE SPAKDE(F,FE,LM,NDES,JEDN)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CE Subroutine SPAKDE is used for inserting right-hand side vectors per element
CE into global right-hand side vector
C


CS  PAKOVANJE MATRICA I VEKTORA ELEMENATA U MATRICE I VEKTORE SISTEMA
CE  INSERTING ELEMENT MATRIXES AND VECTORS
CE  INTO SYSTEM MATRIXS AND VECTORS
      DIMENSION F(JEDN),FE(NDES),LM(NDES)
C
      DO 200 I=1,NDES
       IVR=LM(I)
       IF(IVR.LE.0) GO TO 200
       F(IVR)=F(IVR)+FE(I)
  200 CONTINUE
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE IDCONNESME(NEL,IND2,NE1D,NPT,KK)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     IDENTIFICATION OF NODES OF FICTITIOUS ELEMENTS
C
      DIMENSION NEL(NE1D,2),IND2(NPT)
C
      IF(KK.EQ.1) THEN
        CALL ICLEAR(IND2,NPT)
      ENDIF
      DO 10 NODE=1,NPT
         DO NLM=1,NE1D
           IF(NODE.EQ.NEL(NLM,1)) THEN
             IND2(NODE)=NEL(NLM,2)
           ENDIF
         ENDDO
   10 CONTINUE
C
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE CORRECTIDTSME(IDT,IDTA,IND2,INDNODEU,IPIPENODV,IACTIVE,
     1           NPT,ISMEARED,NDIMIDT,ICONV,INDIFFUS) 
C     CORRECTION OF MATRIX IDT DUE TO FICTITTIOOUS ELEMENTS FOR ISMEARED.GE.2
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      DIMENSION IDT(NDIMIDT,NPT),IDTA(NDIMIDT,NPT),IND2(NPT),
     1          INDNODEU(NPT),IPIPENODV(NPT),IACTIVE(4),IDTLOC(4)
C
      CALL ICLEAR(INDNODEU,NPT)
      DO I=1,NPT
        DO J=1,NDIMIDT
          IDTA(J,I)=IDT(J,I)
        ENDDO
      ENDDO
      CALL ICLEAR(IDT,NPT*NDIMIDT)
      IPRET=3
      IF(INDIFFUS.EQ.0.AND.IACTIVE(4).EQ.0) IPRET=2 
      IF(ICONV.EQ.0)IPRET=0
      IDIFT=4 
      IF(ICONV.EQ.0.AND.IACTIVE(3).EQ.0) IDIFT=2
      IF(INDIFFUS.EQ.0)IDIFT=0
      JEDN=0 
      DO 20 NODE=1,NPT
         IF(IPIPENODV(NODE).EQ.0) GO TO 20 
            INDNODEU(NODE)=1
            DO I=1,NDIMIDT
               IF(IDTA(I,NODE).GT.0) THEN
                  JEDN=JEDN+1
                  IDT(I,NODE)=JEDN
               ENDIF
            ENDDO
            NODE2=IND2(NODE)
            IF(NODE2.EQ.0) GO TO 20
            INDNODEU(NODE2)=1
            DO 10 I=1,4
               IF(IACTIVE(I).EQ.0) GO TO 10
               IF(I.EQ.IPRET) THEN
                 IDT(I,NODE2)=IDT(1,NODE)
                 GO TO 10
               ELSE IF(I.EQ.IDIFT) THEN
                 IDT(I,NODE2)=IDT(2,NODE)
                 GO TO 10
               ENDIF
               IF(IDTA(I,NODE2).GT.0) THEN
                  JEDN=JEDN+1
                  IDT(I,NODE2)=JEDN
               ENDIF
   10      CONTINUE
   20 CONTINUE
      DO 40 NODE=1,NPT
         IF(INDNODEU(NODE).EQ.1) GO TO 40
         DO I=1,NDIMIDT
             IF(IDTA(I,NODE).GT.0) THEN
                  JEDN=JEDN+1
                  IDT(I,NODE)=JEDN
             ENDIF
         ENDDO 
   40 CONTINUE
C
      WRITE(3,2000)
 2000 FORMAT(6X,'C O R R E C T E D  EQUATION NUMBERS FOR ISMEARED.GE.2'/
     16X,39('-')/
     116X,' NODE',29X,'EQUATION NUMBERS')      
      DO 80 I=1,NPT
          DO J=1,4
             IDTLOC(J)=0
          ENDDO
          KK=0
          DO J=1,4
             IF(IACTIVE(J).EQ.1) THEN
                KK=KK+1 
                IDTLOC(J)=IDT(KK,I)
             ENDIF
          ENDDO
          WRITE(3,5020) I,(IDTLOC(J),J=1,4)
   80 CONTINUE
 5020 FORMAT(11X,I10,12X,4I10)
      RETURN
      END
C=====================================================================
C
C=====================================================================
      SUBROUTINE ALAMDAEQ(IDT,IBRANCH,NEL,IDARCYMA,LAMDAV,NET,NPT,JEDN,
     1          KK,IND,NDIMIDT) 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     SET EQUATION NUMBERS FOR LAMDA WITH MIXED FORMULATION 
C
      DIMENSION IDT(NDIMIDT,NPT),IBRANCH(NPT),NEL(NET,2),IDARCYMA(NPT),
     1          LAMDAV(NPT)
C
      IF(IND.EQ.1) GO TO 100
      
C     NUMBER OF ELEMENT PER NODE
      IF(KK.EQ.1) CALL ICLEAR(IBRANCH,NPT)
      
      DO NLM=1,NET
         DO I=1,2
            NODE=NEL(NLM,I)
            IBRANCH(NODE)=IBRANCH(NODE)+1
         ENDDO
      ENDDO
      RETURN
C
C     SET EQUATION NUMBERS
  100 CONTINUE
      DO NODE=1,NPT
         LAMDAV(NODE)=0
         IF(IBRANCH(NODE).GE.2) THEN
            IF(IDT(1,NODE).GT.0.AND.IDARCYMA(NODE).NE.-1) THEN
               JEDN=JEDN+1
               LAMDAV(NODE)=JEDN
            ENDIF 
        ENDIF            
      ENDDO
C      
      WRITE(3,6027)
      DO 70 I=1,NPT
         WRITE(3,5020) I,IDT(1,I),IDT(2,I),LAMDAV(I)
   70 CONTINUE
C
 6027 FORMAT(//6X,'G E N E R A T E D   N O D A L   E Q U A T I O N S'
     1 ' INCLUDING L A M D A'/
     16X,39('-')/
     117X,' NODE',5X,'EQUATION NO: IDT(1,NODE),IDT(2,NODE),',
     2   'LAMDAV(NODE)')
 5020 FORMAT(11X,I10,12X,3I10)   
  
      RETURN
      END
C===================================================================================
C
C===================================================================================
      SUBROUTINE SETLAMDA(LAMDAV,TT1,NPT,ALAMDA0,JEDN)
C
C     SET LAMDA FOR START OF TIME STEP
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      DIMENSION LAMDAV(NPT),TT1(JEDN)
C
      DO NODE=1,NPT
         NN=LAMDAV(NODE)
         IF(NN.GT.0)TT1(NN)=ALAMDA0
      ENDDO
      RETURN
      END
C ============================================================================
C
C=============================================================================
      SUBROUTINE CHECKFLUX(NEL,ELFLUX,FLUX,LAMDAV,IDT,TT1,NET,NPT,
     1           ALAMDA0,KOR,ITER,JEDN,ILAMDA,KK,IND)
C
C     CHECK TOTAL FLUX AT NODES
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      DIMENSION NEL(NET,2),ELFLUX(2,NET),FLUX(NPT),LAMDAV(NPT),
     1          IDT(2,NPT),TT1(JEDN)

      IF(IND.EQ.1) GO TO 100
      IF(KK.EQ.1) CALL CLEAR(FLUX,NPT)
      
      DO 10 NLM=1,NET
      NODE1=NEL(NLM,1)
      NODE2=NEL(NLM,2)
      I1=IDT(1,NODE1)
      I2=IDT(1,NODE2)
      
      P1=0.D0
      P2=0.D0
      IF(I1.GT.0) THEN
          P1=TT1(I1)
      ELSE
          P1=1.E5
      ENDIF
      IF(I2.GT.0) THEN
         P2=TT1(I2)
      ELSE
         P2=1.E5 
      ENDIF
      
      DO I=1,2
          NODE=NEL(NLM,I)
          ICHECK=1
          IF(ILAMDA.EQ.1) THEN
             ICHECK=0
             IF (LAMDAV(NODE).GT.0) ICHECK=1
          ENDIF
          IF(ICHECK.EQ.1) THEN
             FLUXE=DABS(ELFLUX(I,NLM))
             IF(I.EQ.1) THEN
                IF(P1.GE.P2) THEN
                   FLUX(NODE)=FLUX(NODE)-FLUXE
                ELSE
                   FLUX(NODE)=FLUX(NODE)+FLUXE
                ENDIF
             ELSE
                IF(P1.GE.P2) THEN
                   FLUX(NODE)=FLUX(NODE)+FLUXE
                ELSE
                   FLUX(NODE)=FLUX(NODE)-FLUXE
                ENDIF            
             ENDIF
          ENDIF
      ENDDO    
   10 CONTINUE
      RETURN
C      
  100 CONTINUE 
      WRITE(3,2000)KOR,ITER,ILAMDA,ALAMDA0
 2000 FORMAT(/' CHECK NODAL FLUXES, KOR,ITER,ILAMDA=',3I5,5X,'ALAMDA0=',
     1        D13.5/' NODE   LAMDAV(NODE)    FLUX(NODE)')
      DO NODE=1,NPT
         IF(ILAMDA.EQ.0) THEN
              WRITE(3,2010)NODE,ILAMDA,FLUX(NODE)
         ELSE
            WRITE(3,2010)NODE,LAMDAV(NODE),FLUX(NODE)
         ENDIF
 2010    FORMAT(2I7,5X,D13.5)
      ENDDO
      
      RETURN
      END
C==================================================================================
C
C==================================================================================
      SUBROUTINE FUNCT2(AA,NTMX,XX,YY,IND) 
C
C     VALUE YY OF MULTILIEAR FUNCTION FUNCTION AA(2,NP) FOR ARGUMENT XX  
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      DIMENSION AA(2,NTMX)
C
      IND=0
      IF(NTMX.EQ.0) RETURN
C     FUNCTION CONSTANT 
      IF(NTMX.LE.1) THEN
         YY=AA(2,1)
         RETURN
      ENDIF     
CE    MULTILINEAR CURVE
      DO 50 i=2,NTMX
         i1=i-1
         IF(XX.GE.AA(1,i1).AND.XX.LT.AA(1,i)) GO TO 20
         GO TO 50
   20    YY=AA(2,i1)+(AA(2,i)-AA(2,i1))/(AA(1,i)-AA(1,i1))*(XX-AA(1,i1))
         GO TO 100
   50 CONTINUE 
      IND=1
C   
  100 CONTINUE 
C
      RETURN
      END 
C ===========================================================================
C
C ===========================================================================
      SUBROUTINE FUNCT2M(MM,AA,NTMX,XX,YY,MULTIMOL,IND) 
C
C     VALUE YY OF MULTILIEAR FUNCTION FUNCTION AA(2,NP) FOR ARGUMENT XX  
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      DIMENSION AA(MULTIMOL,2,NTMX)
C
      IND=0
      IF(NTMX.EQ.0) RETURN
C     FUNCTION CONSTANT 
      IF(NTMX.LE.1) THEN
         YY=AA(MM,2,1)
         RETURN
      ENDIF     
CE    MULTILINEAR CURVE
      DO 50 i=2,NTMX
         i1=i-1
         IF(XX.GE.AA(MM,1,i1).AND.XX.LT.AA(MM,1,i)) GO TO 20
         GO TO 50
   20    YY=AA(MM,2,i1)+(AA(MM,2,i)-AA(MM,2,i1))/
     1   (AA(MM,1,i)-AA(MM,1,i1))*(XX-AA(MM,1,i1))
         GO TO 100
   50 CONTINUE 
      IND=1
C   
  100 CONTINUE 
C
      RETURN
      END 
C ===========================================================================
C
C ===========================================================================
      SUBROUTINE MASS3D(NEL,CORD,IDT,TT1TOT,NETIP,NET,NPT,NGELE,TIME,
     1  IFILE,NDIMIDT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
C
C     MASS AND MEAN CONCENTRATION OF 3D ELEMENT GROUP
C
      COMMON A(17000)
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON/REAL3D/ CK(21,3),P(3,21),PJ(3,21),XJ(3,3),H(21),T21(21),
     1AK,CC,HH,QQ,DET,DET1,F21(21),T212(21),T210(21),HHP  
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10)
      
      DIMENSION XG(15),WGT(15),NREF(6),IG3D8(8)
      DIMENSION NEL(NET,8),CORD(NPT,3),TT1TOT(NDIMIDT,NPT)
      
      DATA IG3D8/7,3,6,2,8,4,5,1/
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/  
C           
      NE3D = NET
      IELX = 8
      NCV  = 8
      NBRE = 8
C
      DMASS = 0.0
      DVOL  = 0.0
C
      DO 200 NLM = 1,NE3D    
CE      NODE COORDINATES OF ELEMENTS MATRIX
        DO I=1,NBRE
          KK=NEL(NLM,I)
          DO J=1,3
            CK(I,J)=CORD(KK,J)
          ENDDO
          
          T21(I) = TT1TOT(2,KK)
        ENDDO 
C
C       GAUSS INTEGRATION
C
        NGAUSS = 0
        DO 100 NGX=1,NGAUSX
          JR=NREF(NGAUSX) + NGX
          R = XG(JR)
          DO 100 NGY=1,NGAUSY
          JS=NREF(NGAUSY) + NGY
          S = XG(JS)
          DO 100 NGZ=1,NGAUSZ
          JT=NREF(NGAUSZ) + NGZ
          T = XG(JT)
          WT=WGT(JR)*WGT(JS)*WGT(JT)
          CALL JACT(R,S,T,NEL,0)     
          WDT=WT*DET1
        
          CC = 0.0
          DO I = 1,NBRE
            CC = CC + H(I) * T21(I)
          ENDDO
          
          DVOL  = DVOL  + WDT
          DMASS = DMASS + WDT * CC
          
  100   CONTINUE 
  200 CONTINUE
C
      DCONC = DMASS / DVOL
C
      WRITE(IFILE,1000) TIME, DCONC, DMASS
 1000 FORMAT(3E13.5)
C
      RETURN
      END
c ===========================================================
c
c =========================================================== 
      SUBROUTINE ZADATAF(NZADJ,ZADFM,ZADATA1,VREME,NZADP,NTABFT,
     1        MAXTFT,LNTFT,LTABFT)
C     CALCULATE VALUES AT TIME=VREME
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON A(1)
      DIMENSION NZADJ(3,NZADP),ZADFM(NZADP),ZADATA1(NZADP)
C
	DO KK=1,NZADP
	   IDOF=NZADJ(2,KK)
	   IDOFA=IABS(IDOF)	      
         NF=NZADJ(3,KK)
         FAK = ZADFM(KK)
         CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,MAXTFT,IND)
         IF(IND.NE.0) THEN    
              WRITE(3,6015) NF,VREME
              STOP
         ENDIF
         ZADATA1(KK)= FT*FAK
	ENDDO
 6015 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  VREME =',1PD12.4)  
      RETURN
      END
C========================================================================== 
C
C========================================================================
      SUBROUTINE ZADATAFM(NZADNODF,ZADVALUE,ZADATM1,VREME,
     1      NZADPMAX,NZADP,NTABFT,MAXTFT,LNTFT,LTABFT,MULTIMOL,MM) 
C     CALCULATE VALUES AT TIME=VREME FOR MULTIMOLAR CASE
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON A(1)
      DIMENSION NZADNODF(MULTIMOL,3,NZADPMAX),
     1          ZADVALUE(MULTIMOL,NZADPMAX),ZADATM1(MULTIMOL,NZADPMAX) 
C
	DO KK=1,NZADP
         IDOF=NZADNODF(MM,2,KK)
         IDOFA=IABS(IDOF)
         NF=NZADNODF(MM,3,KK)   
         FAK=ZADVALUE(MM,KK)
         CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,MAXTFT,IND)
         IF(IND.NE.0) THEN    
              WRITE(3,6015) NF,VREME
              STOP
         ENDIF
         ZADATM1(MM,KK)= FT*FAK
	ENDDO
 6015 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  VREME =',1PD12.4)  
      RETURN
      END      
C==================================================================
C
C==================================================================
      SUBROUTINE ZADATAVS(NZADFVS,ZADVALUEVS,ZADATAVSV,VREME,MULTIMOL,
     1   NDIMCELL,NDIMVS,NVSMAX,NPT,NTABFT,MAXTFT,LNTFT,LTABFT,NZADVS)
C     CALCULATE VALUES AT TIME=VREME FOR VESICLES WITHIN CELLS
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON A(1)
      DIMENSION NZADFVS(NZADVS),ZADVALUEVS(NZADVS),ZADATAVSV(NZADVS)   
C
	DO KK=1,NZADVS
         NF=NZADFVS(KK)   
         FAK=ZADVALUEVS(KK)
         CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,MAXTFT,IND)
         IF(IND.NE.0) THEN    
              WRITE(3,6015) NF,VREME
              STOP
         ENDIF
         ZADATAVSV(KK)= FT*FAK
	ENDDO
 6015 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  VREME =',1PD12.4)  
      RETURN
      END
C========================================================================== 
C
C========================================================================
      SUBROUTINE ZADATALY(INPUTLY,ZADVALUELY,ZADALYMH1,VREME,
     1      NZADPMAX,NZADLYMPH,NTABFT,MAXTFT,LNTFT,LTABFT,MULTIMOL,MM)  
C     
C     CALCULATE VALUES AT TIME=VREME FOR MULTIMOLAR CASE
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON A(1)
      DIMENSION INPUTLY(MULTIMOL,3,NZADPMAX),
     1          ZADVALUELY(MULTIMOL,NZADPMAX),
     2          ZADALYMH1(MULTIMOL,NZADPMAX) 
C
	DO KK=1,NZADLYMPH
         IDOF=INPUTLY(MM,2,KK)
         NF=INPUTLY(MM,3,KK)   
         FAK=ZADVALUELY(MM,KK)
         CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,MAXTFT,IND)
         IF(IND.NE.0) THEN    
              WRITE(3,6015) NF,VREME
              STOP
         ENDIF
         ZADALYMH1(MM,KK)= FT*FAK
	ENDDO
 6015 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  VREME =',1PD12.4)  
      RETURN
      END     
C ==================================================================
C
C=====================================================================
      SUBROUTINE UZADATAMULT(NZADNODF,ZADVALUE,NZADPMAX,NZADP,MULTIMOL,
     1    MM)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
C     PRESCRIBED VALUES AT NODES
      CHARACTER*130 ACOZ
C
      DIMENSION NZADNODF(MULTIMOL,3,NZADPMAX),
     1          ZADVALUE(MULTIMOL,NZADPMAX)

      CALL ISPITA(ACOZ)
      READ(ACOZ,1000) MMI
 1000 FORMAT(I5)
      IF(MMI.EQ.1) THEN
         WRITE(3,2000)
 2000    FORMAT(/6X,'PESCRIBED NODAL VALUES'/
     1    6X,'MOLECULE NO  NUMB OF PRESCRIBED VALUES'/
     2    6X,'NODE',5X,'DOF  FUNCTION',5X,'VALUE'/
     3    10X,'1,2-PRESS; 3,4-CONCNTR PIPE/CAP/EX CELL SPACE;',
     4    '5-(4+NDIMCELL) CELL DIFF; MINUS-VELOCITY')
      ENDIF 
      IF(MMI.NE.MM) THEN
        WRITE(3,2020) MM,MMI
 2020   FORMAT(/' ERROR: DATA MUST BE IN ORDER OF MOLECULES'/
     1          '        MOLECULE ORDER,    MM =',I5/
     2          '                 INPUT    MMI =',I5/
     3  ' STOP')
        STOP              
      ENDIF
      WRITE(3,2001)MMI,NZADP
 2001 FORMAT(10X,I2,5X,I5)
      DO NN=1,NZADP
          CALL ISPITA(ACOZ)
          READ(ACOZ,1005) NODE,IDOF,IFUN,COEFF
 1005     FORMAT(I10,2I5,F10.2)
          WRITE(3,2010)NODE,IDOF,IFUN,COEFF
 2010     FORMAT(I10,2I5,F10.2)
          NZADNODF(MM,1,NN)=NODE
          NZADNODF(MM,2,NN)=IDOF
          NZADNODF(MM,3,NN)=IFUN
          ZADVALUE(MM,NN)=COEFF  
      ENDDO
      RETURN
      END   
C========================================================================
C
C========================================================================
       SUBROUTINE SETINITMULTI(TT1PM,TT01PM,TT1CM,TT01CM,
     1  NZADNODF,ZADVALUE,ZADATM01,ZADATM1,ZADSYSV,NZADP,NPTIMESYS,
     2  LINPUTLY,LZADVALUELY,ZADALYMH1,ZADALYMH0,NZADLYMPH,NZADLYMPHMX,
     3  NPTSYSMAX,KOR,VREME,NTABFT,MAXTFT,LNTFT,LTABFT,CONCSYS0,CONCSYS,
     3  NZADPMAX,ISMEARED,ICONV,INDIFFUS,JEDNP,JEDNC,JEDNPMAX,JEDNCMAX,
     4  MULTITIS,MULTIMOL,MM) 
     
C       SET VALUES AT START OF ITERATIONS
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON A(1)
      DIMENSION TT1PM(MULTIMOL,JEDNPMAX),TT01PM(MULTIMOL,JEDNPMAX),
     1 TT1CM(MULTIMOL,JEDNCMAX),TT01CM(MULTIMOL,JEDNCMAX),
     2 NZADNODF(MULTIMOL,3,NZADPMAX),ZADVALUE(MULTIMOL,NZADPMAX),
     3 ZADATM01(MULTIMOL,NZADPMAX),ZADATM1(MULTIMOL,NZADPMAX),
     4 ZADSYSV(MULTIMOL,2,NPTSYSMAX)
      DIMENSION  ZADALYMH1(MULTIMOL,NZADLYMPHMX),
     2 ZADALYMH0(MULTIMOL,NZADLYMPHMX)
C
      IF(ICONV.EQ.1.AND.MM.EQ.1) THEN
         DO I=1,JEDNP
            TT01PM(MM,I)=TT1PM(MM,I)
         ENDDO
      ENDIF
      
      IF(INDIFFUS.EQ.1) THEN
         DO I=1,JEDNC
            TT01CM(MM,I)=TT1CM(MM,I)
         ENDDO
      ENDIF
      
      IF(NZADP.GT.0) THEN
         DO KK=1,NZADP
            ZADATM01(MM,KK)=ZADATM1(MM,KK)
         ENDDO
	   DO KK=1,NZADP
	      IDOF=NZADNODF(MM,2,KK)
	      IDOFA=IABS(IDOF)	      
	      NF=NZADNODF(MM,3,KK)
            FAK = ZADVALUE(MM,KK)
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,MAXTFT,IND)
            IF(IND.NE.0) THEN    
               WRITE(3,6015) NF,VREME
               STOP
            ENDIF
            ZADATM1(MM,KK)=FT*FAK
	   ENDDO
	
 6015    FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1     1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1     1X,'ARGUMENT TIME,  VREME =',1PD12.4)
     
      ENDIF 
C 
      IF(NZADLYMPHMX.GT.0) THEN
         DO I=1,NZADLYMPH
             ZADALYMH0(MM,I)=ZADALYMH1(MM,I)
         ENDDO          
         CALL ZADATALY(A(LINPUTLY),A(LZADVALUELY),A(LZADALYMH1),
     1           VREME,NZADLYMPHMX,NZADLYMPH,NTABFT,MAXTFT,LNTFT,LTABFT,
     2           MULTIMOL,MM)           
      ENDIF
     
      IF(ISMEARED.NE.1.OR.NPTIMESYS.EQ.0) RETURN
C
      CALL FUNCT2M(MM,ZADSYSV,NPTIMESYS,VREME,CONCSYS,MULTIMOL,IND)
C
      IF(KOR.EQ.1)CONCSYS0=CONCSYS
      IF(IND.EQ.1) THEN
          WRITE(3, 6016)VREME
 6016     FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1    1X,'CURVE TIME-SYSTEMIC CONCENTRATION'/
     1    1X,'ARGUMENT TIME,  VREME =',1PD12.4)         
          STOP
      ENDIF
       
      RETURN
      END
C ====================================================================
C
C=======================================================================
      SUBROUTINE SETT1PCMULT(TT1,F,KOR,ITER,JEDN,MULTIMOL,MM)
C
C     SET TT1P OR TT1C FOR MULTIMODEL  
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)    
C
      DIMENSION TT1(MULTIMOL,JEDN),F(JEDN) 
           
      DO I=1,JEDN
         IF(ITER.EQ.0.AND.KOR.EQ.1) THEN
            TT1(MM,I)=F(I)
         ELSE
            TT1(MM,I)=TT1(MM,I)+F(I)
         ENDIF
      ENDDO
      RETURN
      END        
C=======================================================================
C
C=======================================================================
      SUBROUTINE PRINTPLARGEVS(IDT,TT1,NZADJ,ZADATA1,IZADLOCALDI,
     1    IPIPENODV,IACTIVE,NPT,NZADP,KOR,ITER,VREME,NDIMID,JEDN,ICONV,
     2    INDIFFUS,IPASSME)  
C
C     PRINT NODAL PRESSURES AND CONCENTRATIONS FOR LARGE VESSELS (1D PIPE ELEMENTS) 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      DIMENSION IDT(NDIMID,NPT),TT1(JEDN),NZADJ(3,NZADP),ZADATA1(NZADP),
     1          IZADLOCALDI(NPT),IPIPENODV(NPT),IACTIVE(4)   
      DIMENSION N4(4),T4(4)
C
C      CALL ICLEAR(IZADLOCAL,NPT)
      KID=1
      IF(IPASSME.EQ.2)KID=3
      CALL ICLEAR(IZADLOCALDI,NPT)
      IF(NZADP.GT.0) THEN
         DO 300 KK=1,NZADP
            NODE=NZADJ(1,KK)
            IF(IPIPENODV(NODE).EQ.1) THEN
	         IDIR=NZADJ(2,KK)
	         IF(IPASSME.EQ.1) THEN
	            IF(IDIR.EQ.1) THEN
	               NJ=NZADJ(1,KK)
	               IZADLOCALDI(NJ)=KK
	            ENDIF        
	         ELSE
	         	  IF(IDIR.EQ.3) THEN
	               NJ=NZADJ(1,KK)
	               IZADLOCALDI(NJ)=KK  
	            ENDIF 
	         ENDIF
	      ENDIF
  300	   CONTINUE
	ENDIF
	IF(IPASSME.EQ.1.OR.(IPASSME.EQ.2.AND.ICONV.EQ.0)) THEN
         WRITE(3,6000) KOR,VREME
         WRITE(3,6003) ITER
      ENDIF
      IF(IPASSME.EQ.1) WRITE(3,6011)     
      IF(IPASSME.EQ.2)WRITE(3,6012)
C     
C     SET TO ZERO SMALL VALUES
      DO I=1,NPT
         IF(IPIPENODV(I).EQ.1) THEN
            II=IDT(KID,I)
            IF(II.GT.0) THEN
              IF(DABS(TT1(II)).LT.1.D-15) TT1(II)=0.D0
            ENDIF
         ENDIF
      ENDDO   
      KG=0
   20 DO 50 I = 1,4
   55 KG = KG +1
      IF(KG.LE.NPT.AND.IPIPENODV(KG).EQ.0) THEN
        IF(KG.EQ.NPT) GO TO 100
        GO TO 55
      ENDIF
      IF(KG.GT.NPT) GO TO 100     
      N4(I) = KG
      IF(IDT(KID,KG).EQ.0)THEN
         GO TO 30
      ENDIF
      JJ=IDT(KID,KG)
      T4(I) = TT1(JJ)
      GO TO 50
   30 CONTINUE
      IZA=IZADLOCALDI(KG)
      T4(I) = ZADATA1(IZA)
   50 CONTINUE
  100 I = I - 1
      IF(I.NE.0) THEN
         WRITE(3,2002) (N4(J),T4(J),J=1,I)
      ENDIF
 2002 FORMAT(4(I8,4X,1P1D13.5))
   77 IF(KG.LT.NPT) GO TO 20
  400 CONTINUE
C
 6000 FORMAT(///'1'/' S T E P  NUMBER =',I6,25X,'  T I M E =',1PD12.5
     1)
 6003 FORMAT(' NUMBER OF ITERATIONS ....................... ITER =',I5)
 6011 FORMAT(/' LARGE VESSELS  N O D A L   P R E S S U R E S'/ 
     1'    NODE      PRESSURE',9X,'NODE    PRESSURE',9X,'NODE',
     2'    PRESSURE',9X,'NODE    PRESSURE')
 6012 FORMAT(/' LARGE VESSELS    N O D A L   C O N C E N T R A T I O N S
     1'/
     1'      NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT',3X,
     2 '    NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT')
     
      RETURN
      END
C=========================================================================
C
C=========================================================================
      SUBROUTINE MATERIALDATA(MULTITIS,MULTIMOL,ICONVG,
     1           INDIFFUS,NDIMTENSOR,NDIMCELL,LMAX,I2D3D)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
C
C     GENERAL DATA ABOUT MATERIAL PARAMETERS 
C  
      CHARACTER*130 ACOZ
      COMMON/CMATDATA/NDIMPIPEMAX,NDIMCAPMAX,NDIMCELLMAX,NDIMPMAX,
     4 NDIMAMAX,NDIMSMAX,NDIMADHMAX,NDIMWPIPEMAX,NDIMWCAPMAX,
     5 NDIMWCELLMAX,DARCYCOEF,AMICOEFP,AMICOEFC,HYDROCOEFP,HYDROCOEFC,
     6 DARCYTENSOR(6),DPIPE,DTISSUE,DIFFTENSOR(6),PARTPIPE1,PARTPIPE2,
     7 PARTCELL(2,4),ACTIVECOEF(2,4),SOURCECOEFF(4),ADHCOEFF(2,4),
     8 DWALLPIPE,DWALLCAP,DWALLCELL(4),INODEDTOT,INODEWTOT,LDPIPEEXA,
     9 LDPIPECAPA,LCELLA,LPARTA,LACTIVEA,LSOURCEA,LADHISEA,LWALLPIPEA,
     1 LWALLCAPA,LWALLCELLA,IREADDIFNODE
      COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
      COMMON/CAPDIAMETERS/DIACAPX,DIACAPY,DIACAPZ
      COMMON/CMIGRATION/IMIGTABLE(10),JEDNMIGV(10),VMIGC(10),
     1 INDCHTAXV(10),INDCHTAX,IMIGTOT,IMIGNODE,LIVMIGV,LVMIGV,LIDTMIG,
     2 INDMIG,LVFTT,JEDNMIG,INDCHTAXTOT,LCHTAXV
      COMMON/CCELLIN/INDCELLIN,INDCELLINV(10),VFVS(10,5),DIAMVS(10,5),
     1 RAVVS(10,5),DDIFFICY(10,10),DDIFFIVS(10,10,5),DDIFFICM(10,10,5)
     2 ,IPARTIVS(10,10,5),PARTIVS(10,10,5),NDIMVS,NVSMAX,LIDVS,NZADVS,
     3 LNZADNODVS,LNZADNFVS,LNZADFVS,LZADVALUEVS,LZADATAVS0,LZADATAVS
      COMMON/CLYMPH/INDLYMPH,INDLYMPHH,INDLYMPHC,LRVLYMPH,LPLYMHV,
     1 LCLYMHV,TABLYHW(10),TABLYCW(10,10),TABLYD(10),TENSORLYP(10,6),
     2 TENSORLYC(10,10,6),ITABLYP,ITABLYC,ITABLYD,LHCOEFLYNOD,
     3 LHCOEFLYNODW,LCCOEFLYNOD,LCCOEFLYNODW,LDCOEFLYNOD,LIDLYMPHH,
     4 LIDLYMPHC
      COMMON A(1)                
C
      DIMENSION NMAXE(7),NMAXEW(6),IDIMLOCAL(10),CLOCAL(10),RAVLOCAL(5)
C
      IF(MM.EQ.1)IDMTABLETOT=0  
      DO I=1,6
         ICMTABLE(I)=0
         IMIGTABLE(I)=0
      ENDDO  
      DO MM=1,MULTIMOL
         DO I=1,6
            IDMTABLE(MM,I)=0
            IWMTABLE(MM,I)=0
         ENDDO
      ENDDO
      WRITE(3,2000)
 2000 FORMAT(/' BASIC D A T A  M A T R I C E S FOR MATERIAL PARAMETERS'/
     1 ' IND = 0   MATERIAL PARAMETER NOT USED'/
     1 ' IND = 1   MATERIAL PARAMETER IS INDEPENDENT OF NODES',
     2             ' AND IS CONSTANT'/
     1 '     = 2                         INDEPENDENT OF NODES',
     2             'AND DEPENDENT ON CONCENTRATION (FUNCTIONMAT)'/ 
     3 '     = 3                         GIVEN FOR EACH NODE,',
     4                                  ' READ HERE BUT NOT USED'/
     4 '       CONVECTION DATA - NOW ONE MODEL ONLY MM=1:'/
     4 '       ICMTABLE(1)   - DARCY COEFF FOR TISSUE'/ 
     5 '               (2)     VISCOSITY COEF FOR PIPE'/
     6 '               (3)     VISCOSITY COEF FOR CAPILL'/     
     6 '               (4)     HYDRAULIC COEF FOR PIPE'/       
     7 '               (5)     HYDRAULIC COEF FOR CAPILL'/ 
     7 '               (6)     DARCY TENSOR'/
     7 '---------------  THESE TABLES ARE SKIPPED --------------- '/   
     4 '       DIFFUSION DATA:'/  
     4 '       IDMTABLE(MM,1)- DIFF COEFF WITHIN PIPE AND EXTRAC SPACE'/
     4 '               (MM,2)- DIFF COEFF WITHIN CAPILLARIES'/
     4 '               (MM,3)- DIFF COEFF WITHIN CELLS'/    
     4 '               (MM,4)- PARTITIONING'/ 
     4 '               (MM,5)- ACTIVE TRANSPORT'/ 
     4 '               (MM,6)- SOURCE TERMS'/
     4 '               (MM,7)- ADHESION'/
     4 '       IWMTABLE(MM,1)- WALL DIFF COEFICIENT FOR PIPE'/
     4 '               (MM,2)-                          CAPILLARY'/
     4 '               (MM,3)-                          CELLS 1'/ 
     4 '               (MM,4)-                          CELLS 2'/ 
     5 '                ---------------------------------------'/
     6 '                ---------------------------------------'/
     4 '               (MM,12)-                         CELLS 10'/
     5 ' ------------------------------------------------------------') 
C
C--------------- FIRST READ CAPILLARY DIAMETERS ---------- JAN 3,2018
      CALL ISPITA(ACOZ)
      READ(ACOZ,1010)DIACAPX,DIACAPY,DIACAPZ
      WRITE(3,2013)DIACAPX,DIACAPY,DIACAPZ
 2013    FORMAT(3X,' CAPILLARY DIAMETERS DIACAPX,DIACAPY,DIACAPZ',
     1    ' - NOT USED IF ICMTABLE(6).EQ.3'/6D12.3)
      IF(I2D3D.EQ.2) DIACAPZ=0.D0     
      IF(ICONVG.EQ.1) THEN
         DO MM=1,1
            CALL ISPITA(ACOZ)
            READ(ACOZ,1000)(ICMTABLE(I),I=1,6)
         ENDDO
         ICMTABLETOT=0
         DO I=1,6
            IF(ICMTABLE(I).NE.3)ICMTABLETOT=ICMTABLETOT+1
         ENDDO
 1000    FORMAT(10I5)
         WRITE(3,2010)
 2010    FORMAT(/' MOLECULE MM=1  TABLE FOR C O N V E C T I O N'/
     1    '    ORDER: DARCYCOEF - AMICOEF FOR PIPE -',
     2    ' AMICOEF FOR CAPILL - HYDROCOEF FOR PIPE - HYDROCOEFC FOR',
     2    ' CAPILL -  DIAMETERS, DIFF COEFFICIENTS') 
         DO MM=1,1
            WRITE(3,2011)MM,(ICMTABLE(I),I=1,6)
         ENDDO 
 2011    FORMAT(I5,5X,10I5)
 
C        READ MATERIAL PARAMETERS WHICH ARE NODE INDEPENDENT
         CALL ISPITA(ACOZ)
         READ (ACOZ,1010) DARCYCOEF,AMICOEFP,AMICOEFC,HYDROCOEFP,
     1                    HYDROCOEFC,(VMIGC(I),I=1,4)
C         CALL ISPITA(ACOZ)
C         READ (ACOZ,1010)(DARCYTENSOR(I),I=1,6)
C        DIAMETERS IN X-Y-Z DIRECTIONS ARE READ ABOVE AND DARCY TENSOR-DIAGONAL IS CALCULATED
 1010    FORMAT(10F10.2)
         WRITE(3,2012)DARCYCOEF,AMICOEFP,AMICOEFC,HYDROCOEFP,
     1                    HYDROCOEFC
 2012    FORMAT(
     1   3X,'DARCYCOEF',3X,'AMICOEFP',2X,'AMICOEFC',2X,'HYDROCOEFP',
     2   2X,'HYDROCOEFC'/5D12.3)                            
         DIAMX2=DIACAPX*DIACAPX
         DIAMY2=DIACAPY*DIACAPY
         DIAMZ2=DIACAPZ*DIACAPZ
         DIAMXYZ=DIAMX2+DIAMY2+DIAMZ2
         DENOM=32.*AMICOEFC*DIAMXYZ
         DARCYTENSOR(1)=DIAMX2*DIAMX2/DENOM
         DARCYTENSOR(2)=DIAMY2*DIAMY2/DENOM
         DARCYTENSOR(3)=DIAMZ2*DIAMZ2/DENOM                          
      ENDIF
C
C     READ DATA FOR CELL MIGRATION
C
      CALL ISPITA(ACOZ)
      READ(ACOZ,1011)(IDIMLOCAL(I),I=1,10),(CLOCAL(I),I=1,10)
      CALL ISPITA(ACOZ)
      READ(ACOZ,1009)INDCHTAX,(INDCHTAXV(I),I=1,10)
 1009 FORMAT(11I3)
 1011 FORMAT(10I3,10F10.2)
      DO I=1,NDIMCELL
         IMIGTABLE(I)=IDIMLOCAL(I)
         VMIGC(I)=CLOCAL(I)
      ENDDO
      WRITE(3,2014)(IDIMLOCAL(I),I=1,10),(CLOCAL(I),I=1,10)
 2014 FORMAT(/' DATA ABOUT CELL M I G R A T I O N'/
     1  11X,   ' IMIGTABLE(I)',27X,'VELOCITIES'/
     2     3X,' 0-N0, 1-CONSTANT FOR NODES, 2-TIME FUNCTION',
     3     ' 3-NODAL VALUE',2X,'LT.0-MOLECULE GRADIENT DRIVEN'/ 
     3     5X,10I3,10X,10F10.2)     
      WRITE(3,2009)INDCHTAX,(INDCHTAXV(I),I=1,NDIMCELL)
2009  FORMAT(' FLAGS FOR CHEMOTAXIS (0-NO)'/
     1 ' FLAG  MOLEC FOR CELL 1   MOLEC FOR CELL 2 ...'/
     2I5,10I12)
      IMIGTOT=0
      IMIGNODE=0
      DO I=1,NDIMCELL
         IF(IMIGTABLE(I).NE.0)IMIGTOT=IMIGTOT+1
         IF(IMIGTABLE(I).EQ.3)IMIGNODE=IMIGNODE+1
      ENDDO
      INDCHTAXTOT=0
      IF(INDCHTAX.GT.0) THEN
        DO I=1,NDIMCELL
           IF(INDCHTAXV(I).GT.0)INDCHTAXTOT=INDCHTAXTOT+1 
        ENDDO
      ENDIF
      INODEDTOT=0
      IF(INDIFFUS.EQ.0) GOTO 200
      ISKIPTABLES=1
C
  100 CONTINUE
C
C     GENERAL DATA FOR MODELS OF INTERIOR OF CELLS 
C
      IF(INDCELLIN.EQ.1) THEN 
C      
         WRITE(3,6070)
 6070   FORMAT(/' GENERAL DATA FOR  C E L L  I N T E R N A L  TRASPORT'/
     1    ' CELL TYPE NO  NO OF VESICLES',21X,'VESICLE VOL FRACTION',
     2   30X,'VESCLE DIAMETERS'/47X,'VESICLE AREA COEFFICIENTS')
         DO NC=1,NDIMCELL
           CALL ISPITA(ACOZ)
           READ(ACOZ,6071)INDCELLINV(NC),(VFVS(NC,I),I=1,5),
     1                   (DIAMVS(NC,I),I=1,5)
 6071      FORMAT(I5,5F10.2,5X,5F10.2)
           CALL ISPITA(ACOZ) 
           READ(ACOZ,6072)(RAVVS(NC,I),I=1,5)  
 6072      FORMAT(10F10.2) 
           NN=INDCELLINV(NC)
           IF(NN.GT.0) THEN 
               DO I=1,NN 
                  AA=RAVVS(NC,I)
                  IF(DABS(AA).LT.1E-10) THEN
                     RAVVS(NC,I)=6./DIAMVS(NC,I)
                  ENDIF
                ENDDO 
           ENDIF
           WRITE(3,6073)NC,NN,(VFVS(NC,I),I=1,5),
     1                   (DIAMVS(NC,I),I=1,5),(RAVVS(NC,I),I=1,5)
 6073      FORMAT(I5,10X,I5,10X,5F10.2,5X,5F10.2/30X,5F10.2)
         ENDDO
      ENDIF
C
C     DIFFUSION DATA FOR EACH MOLECULE
      DO MMI=1,MULTIMOL
         CALL ISPITA(ACOZ)
         READ(ACOZ,6061)MM
 6061    FORMAT(I5)
         CALL MATEDIFCONST(NMAXE,NMAXEW,MULTIMOL,NDIMTENSOR,NDIMCELL,MM)
      ENDDO
C
C     SET DIMENSION FOR MATRICES
C
      CALL ICLEAR(NDIMPIPE,MULTIMOL)
      CALL ICLEAR(NDIMCAP,MULTIMOL)
      CALL ICLEAR(NDIMCELLV,MULTIMOL)
      CALL ICLEAR(NDIMPART,MULTIMOL)
      CALL ICLEAR(NDIMACT,MULTIMOL)
      CALL ICLEAR(NDIMSOURCE,MULTIMOL)
      CALL ICLEAR(NDIMADH,MULTIMOL)
      CALL ICLEAR(NDIMWPIPE,MULTIMOL)   
      CALL ICLEAR(NDIMWCAP,MULTIMOL)
      CALL ICLEAR(NDIMWCELL,MULTIMOL)
C 
      DO MM=1,MULTIMOL
          IF(IDPIPEEXC(1,MM).EQ.3.OR.IDPIPEEXC(2,MM).EQ.3)
     1    NDIMPIPE(MM)=NDIMPIPE(MM)+1
          IF(IDPIPECAPC(MM).EQ.3)NDIMCAP(MM)=NDIMCAP(MM)+1
          NNPA=0
          DO I=1,NDIMCELL
             IF(ICELLC(I,MM).EQ.3)NNPA=NNPA+1
          ENDDO
          NDIMCELLV(MM)=NNPA
          NNPA=0
          DO I=1,2+NDIMCELL
             IF(IPARTC(I,MM).EQ.3)NNPA=NNPA+1
          ENDDO
          NDIMPART(MM)=NNPA   
          NNPA=0
          DO I=1,NDIMCELL
             IF(IACTIVEC(I,MM).EQ.3)NNPA=NNPA+1
          ENDDO
          NDIMACT(MM)=NNPA               
          NNPA=0
          DO I=1,NDIMCELL
             IF(ISOURCEC(I,MM).EQ.3)NNPA=NNPA+1
          ENDDO
          NDIMSOURCE(MM)=NNPA             
          NNPA=0
          DO I=1,2+NDIMCELL
              IF(IADHISEC(I,MM).EQ.3)NNPA=NNPA+1
          ENDDO
          NDIMADH(MM)=NNPA   
          IF(IWALLPIPEC(MM).EQ.3)NDIMWPIPE(MM)=NDIMWPIPE(MM)+1
          IF(IWALLCAPC(MM).EQ.3)NDIMWCAP(MM)=NDIMWCAP(MM)+1   

          NNPA=0           
          DO I=1,NDIMCELL
             IF(IWALLCELLC(I,MM).EQ.3)NNPA=NNPA+1
          ENDDO
          NDIMWCELL(MM)=NNPA                   
      ENDDO
C      
      NDIMPIPEMAX=0
      NDIMCAPMAX=0
      NDIMCELLMAX=0
      NDIMPMAX=0    
      NDIMAMAX=0
      NDIMSMAX=0
      NDIMADHMAX=0
      NDIMWPIPEMAX=0  
      NDIMWCAPMAX=0
      NDIMWCELLMAX=0
      DO MM=1,MULTIMOL
         IF(NDIMPIPE(MM).GT.NDIMPIPEMAX)NDIMPIPEMAX=NDIMPIPE(MM)        
         IF(NDIMCAP(MM).GT.NDIMCAPMAX)NDIMCAPMAX=NDIMCAP(MM)
         IF(NDIMCELLV(MM).GT.NDIMCELLMAX)NDIMCELLMAX=NDIMCELLV(MM)      
         IF(NDIMPART(MM).GT.NDIMPMAX)NDIMPMAX=NDIMPART(MM)
         IF(NDIMACT(MM).GT.NDIMAMAX)NDIMAMAX=NDIMACT(MM)
         IF(NDIMSOURCE(MM).GT.NDIMSMAX)NDIMSMAX=NDIMSOURCE(MM)
         IF(NDIMADH(MM).GT.NDIMADHMAX)NDIMADHMAX=NDIMADH(MM)
         IF(NDIMWPIPE(MM).GT.NDIMWPIPEMAX)NDIMWPIPEMAX=NDIMWPIPE(MM)
         IF(NDIMWCAP(MM).GT.NDIMWCAPMAX)NDIMWCAPMAX=NDIMWCAP(MM)
         IF(NDIMWCELL(MM).GT.NDIMWCELLMAX)NDIMWCELLMAX=NDIMWCELL(MM)
      ENDDO                  
C                       
C     CRITICAL VALUES
C
      WRITE(3,6060)
 6060 FORMAT(/' CRITICAL VALUES FOR CELLS: HEALTHY,CANCER,NECROTIC,',
     1 'IMMUNE'/
     1 ' MOLECULE NUMBER',' FLAGS FOR CRITICAL VALUES',13X,
     2 'CRITICAL VALUES FOR CELLS')
      DO MMI=1,MULTIMOL
           CALL ISPITA(ACOZ)
           READ(ACOZ,6061)MM
           CALL ISPITA(ACOZ)
           READ(ACOZ,1011)(IDIMLOCAL(I),I=1,10),(CLOCAL(I),I=1,10)
           DO I=1,NDIMCELL
               ICRITICALV(MM,I)=IDIMLOCAL(I)
               CRITICALV(MM,I)=CLOCAL(I)
           ENDDO
           WRITE(3,6062)MM,(IDIMLOCAL(I),I=1,10),(CLOCAL(I),I=1,10)
6062       FORMAT(I5,5X,10I3,10F10.2)                
      ENDDO 
C
C     MOLECULAR WEIGHTS
C
      WRITE(3,6080)
 6080 FORMAT(/' MOLECULAR WEIGHTS'/
     1 ' MOLECULE NO  WEIGHT       MOLECULE NO  WEIGHT....') 
       CALL ISPITA(ACOZ)
       READ(ACOZ,1021)(IDIMLOCAL(I),CLOCAL(I),I=1,10)
 1021  FORMAT(10(I3,F10.2))
       DO I=1,MULTIMOL
          WEIGHTMOLV(I)=CLOCAL(I)
       ENDDO
          WRITE(3,6082)(I,WEIGHTMOLV(I),I=1,MULTIMOL)
6082      FORMAT(10(I5,5X,E13.3,5X))  
C

  200 IF(INDLYMPH.EQ.0) RETURN
C
C     DATA FOR LYMPHATIC TRANSPORT      
C   
      CALL ISPITA(ACOZ)
      READ(ACOZ,1040)ITABLYP,ITABLYC,ITABLYD
 1040 FORMAT(10I5)
      WRITE(3,6240)ITABLYP,ITABLYC,ITABLYD
 6240 FORMAT(/' MATERIAL DATA FOR L Y M P H'/
     1 ' NUMBER OF TABLES FOR CONVECTIVE TRANSPORT....ITABLYP=',I5/
     2 '                  0 - NODAL VALUES ARE INPUT'/ 
     2 '                  FOR DIFFUSIVE TRANSPORT ....ITABLYC=',I5/
     3 '                  FOR LYMPH VESSEL DIMETERS...ITABLYD=',I5)
      IF(ITABLYP.GT.0) THEN
        WRITE(3,6242)
 6242   FORMAT(' HIDR WALL COEFF  DARCY TENSOR COMPONENTS-',
     1           'VISCOSITY COEFFICIENTS' )
        DO I=1,ITABLYP
           CALL ISPITA(ACOZ)
           READ(ACOZ,1042)TABLYHW(I),(TENSORLYP(I,J),J=1,NDIMTENSOR)
 1042      FORMAT(10F10.2)
           WRITE(3,6243)TABLYHW(I),(TENSORLYP(I,J),J=1,NDIMTENSOR)
 6243      FORMAT(D12.4,5X,7D12.4)
        ENDDO
      ENDIF
      IF(ITABLYC.GT.0) THEN
        WRITE(3,6244)
 6244   FORMAT(' MOLEC NO'/' DIFF WALL COEFF  DIFF  TENSOR COMPONENTS',
     1    ' READ DIFFUSIVITIES AND CORRECTED IN PAK')
        COEFTENSOR=0.5
        IF(I2D3D.NE.2)COEFTENSOR=1./3.
        DO MMI=1,MULTIMOL
           CALL ISPITA(ACOZ)
           READ(ACOZ,1050)MMM
 1050      FORMAT(10I5)
           WRITE(3,6050)MMM
 6050      FORMAT(I5)
           DO I=1,ITABLYC
              CALL ISPITA(ACOZ)
              READ(ACOZ,1042)TABLYCW(MMM,I),(TENSORLYC(MMM,I,J),
     1        J=1,NDIMTENSOR)
              DO J=1,NDIMTENSOR
                  TENSORLYC(MMM,I,J)=COEFTENSOR*TENSORLYC(MMM,I,J)
              ENDDO
             WRITE(3,6053)TABLYCW(MMM,I),(TENSORLYC(MMM,I,J),
     2                    J=1,NDIMTENSOR)
 6053        FORMAT(D12.4,5X,6D12.4)
           ENDDO
        ENDDO
      ENDIF
      IF(ITABLYD.GT.0) THEN
        WRITE(3,6245)
 6245   FORMAT(' LYMPH VESSEL DIAMETERS')
        CALL ISPITA(ACOZ)
        READ(ACOZ,1042)(TABLYD(I),I=1,ITABLYD)
        WRITE(3,6246)(TABLYD(I),I=1,ITABLYD)
 6246   FORMAT(10D12.4)
      ENDIF
C     IN THIS VESRSION OF THE PROGRAM IT IS SET THAT TABLES ARE USED, WITH ALL
C     THREE PARAMETERS EQUAL TO 1
      ITABLYP=1
      ITABLYC=1
      ITABLYD=1
      WRITE(3,6250)
 6250 FORMAT(/' ***** NUMBER OF TABLES SET TO 1****'/
     1 ' ONLY FIRST ROWS IN TABLES ARE USED'/
     1 ' ITABLYP=1'/
     2 ' ITABLYC=1'/
     3 ' ITABLYD=1'/)                                    
C
      RETURN
      END
C ========================================================================
C
C ========================================================================
      SUBROUTINE MATEDIFCONST(NMAXE,NMAXEW,MULTIMOL,NDIMTENSOR,NDIMCELL,
     1           MM) 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
C
C     DIFFUSIN DATA WHEN INDEPENDENT ON NODES 
C
      CHARACTER*130 ACOZ
C
      DIMENSION NMAXE(7),NMAXEW(6)
      COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
     
      COMMON/CCELLIN/INDCELLIN,INDCELLINV(10),VFVS(10,5),DIAMVS(10,5),
     1 RAVVS(10,5),DDIFFICY(10,10),DDIFFIVS(10,10,5),DDIFFICM(10,10,5)
     2 ,IPARTIVS(10,10,5),PARTIVS(10,10,5),NDIMVS,NVSMAX,LIDVS,NZADVS,
     3 LNZADNODVS,LNZADNFVS,LNZADFVS,LZADVALUEVS,LZADATAVS0,LZADATAVS 
      COMMON/CAPDIAMETERS/DIACAPX,DIACAPY,DIACAPZ
        
      DIMENSION CAPILL(12),CAPILL2(12),KV(12)
      IF(MM.EQ.1) WRITE(3,2000)
 2000 FORMAT(' DIFFUSION CONSTANTS INDEPENDENT OF CONCENTRATIONS AND',
     1 ' NODES'/
     2 '   NOTE: ALL CONSTANTS ARE READ, BUT USED OLNY IF FLAG ',
     3 'IS NOT EQAUL TO 3 (ASSIGED TO NODES FOR FLAG EQUALS 3)')
      WRITE(3,2001)MM
 2001 FORMAT(' MOLECULE NUMBER',I5)
C
C     DIFFUSION COEFFICENTS: PIPE,CAPILL,CELLS
C
      CALL ISPITA(ACOZ)
      READ(ACOZ,1000) K1,K2,K3,DPIPE,DEXT,(CAPILL(I),I=1,6)
 1000 FORMAT(3I5,12F10.2)
      IDPIPEEXC(1,MM)=K1  ! INDPIPE
      IDPIPEEXC(2,MM)=K2
      DPIPEEXC(1,MM)=DPIPE
      DPIPEEXC(2,MM)=DEXT   
      IDPIPECAPC(MM)=K3
      WRITE(3,2010)K1,K2,DPIPE,DEXT,K3,(CAPILL(I),I=1,3)
 2010 FORMAT(3X,'PIPE AND EXTRAC SPACE(FLAGS AND VALUES)',2I3,  
     1 12X,2D12.3/3X,'DIFFUSION COEFFICIENTS IN CAPILLARIES X,Y,Z:',
     3   22X,I3,15X,6D12.3)     
C
C     CALCULATION OF DIAGONAL DIFFUSION TENSOR -----------
      ATOT=DIACAPX*DIACAPX+DIACAPY*DIACAPY+DIACAPZ*DIACAPZ      
      DPIPECAPC(1,MM)=CAPILL(1)*DIACAPX*DIACAPX/ATOT
      DPIPECAPC(2,MM)=CAPILL(2)*DIACAPY*DIACAPY/ATOT
      DPIPECAPC(3,MM)=CAPILL(3)*DIACAPZ*DIACAPZ/ATOT
C     END OF CALCULATION OF DIFFUSION TENSOR ----------     
      CALL ISPITA(ACOZ)
      READ(ACOZ,1010)(KV(I),I=1,10),(CAPILL(I),I=1,10)  
 1010 FORMAT(10I3,10F10.2)
      DO I=1,10
          ICELLC(I,MM)=KV(I)
          CELLC(I,MM)=CAPILL(I)
      ENDDO   
      WRITE(3,2011)(KV(I),I=1,10),(CELLC(I,MM),I=1,10)
 2011 FORMAT(3X,'CELLS: MAX 1-10',2X,10I3,6X,
     1   10F10.2)  
C
C     PARTITION COEFFICENTS: PIPE,CAPILL,CELLS
C
      CALL ISPITA(ACOZ)
      READ(ACOZ,1011)(KV(I),I=1,12)
 1011 FORMAT(12I3)
      CALL ISPITA(ACOZ)
      READ(ACOZ,1041)(CAPILL(I),I=1,12)
 1041 FORMAT(12F10.2)
      DO I=1,2+NDIMCELL
         IPARTC(I,MM)=KV(I)
         PARTC(I,MM)=CAPILL(I)
      ENDDO
      WRITE(3,2013)(KV(I),I=1,12),(CAPILL(I),I=1,12)
2013  FORMAT(' PARTIT COEFFICENT: PIPE,CAPILL,CELLS(1-10).. FALGS/',
     1              'VALUES'/12I5/26X,12F10.2)
C
C     ACTIVE TRANSPORT CELL COEFFICIENTS
C
      CALL ISPITA(ACOZ)
      READ(ACOZ,1012)(KV(I),I=1,10),(CAPILL(I),I=1,10)
1012  FORMAT(10I3,10F10.2)
      CALL ISPITA(ACOZ)
      READ(ACOZ,1041)(CAPILL2(I),I=1,10)
      DO I=1,NDIMCELL
         IACTIVEC(I,MM)=KV(I)
         ACTIVEC(1,I,MM)=CAPILL(I)  
         ACTIVEC(2,I,MM)=CAPILL2(I)
      ENDDO
      WRITE(3,2015)(KV(I),I=1,10),(CAPILL(I),I=1,10)
2015  FORMAT(' ACTIVE TRANSPORT CELL COEFFICIENTS -  IN:',10I3,4X,
     1           10F10.2)
      WRITE(3,2016)(CAPILL2(I),I=1,NDIMCELL)
2016  FORMAT('                                    - OUT:',14X,10F10.2)
C
C     SOURCE TERMS FOR CELLS
C
      CALL ISPITA(ACOZ)
      READ(ACOZ,1010)(KV(I),I=1,10),(CAPILL(I),I=1,10)
C      IF(NMAXE(6).EQ.0)WRITE(3,2017)
 2017 FORMAT(' SOURCE TERMS FOR CELLS READ BUT NOT USED - READ AT NODES'
     1    )
      DO I=1,NDIMCELL
         ISOURCEC(I,MM)=KV(I)
         SOURCEC(I,MM)=CAPILL(I)
      ENDDO
      WRITE(3,2018)(KV(I),I=1,10),(CAPILL(I),I=1,10)
2018  FORMAT(' SOURCE TERMS FOR CELLS: CELLS(1-NDIMCELL)',3X,10I3,
     1   1X,10F10.2)        
C
C     ADHESION, DE-ADHESION
C
      CALL ISPITA(ACOZ)
      READ(ACOZ,1011)(KV(I),I=1,12)
      CALL ISPITA(ACOZ)
      READ(ACOZ,1041)(CAPILL(I),I=1,12)
      CALL ISPITA(ACOZ)
      READ(ACOZ,1041)(CAPILL2(I),I=1,12)
      DO I=1,2+NDIMCELL
         IADHISEC(I,MM)=KV(I)  
         ADHISEC(1,I,MM)=CAPILL(I)  
         ADHISEC(2,I,MM)=CAPILL2(I)
      ENDDO
      WRITE(3,2020)(KV(I),I=1,12),(CAPILL(I),I=1,12)
2020  FORMAT(' ADHESION CEFFIC-PIPE,CAPILL, CELLS(1-10) :'/12I3,12F10.2)
      WRITE(3,2021)(CAPILL2(I),I=1,12)
2021  FORMAT(' DE-ADHISION ..  :',18X,12F10.2) 
C
C     WALL DIFFUSION COEFFICIENTS
C
      CALL ISPITA(ACOZ)
      READ(ACOZ,1011)(KV(I),I=1,12)
      CALL ISPITA(ACOZ)
      READ(ACOZ,1041)DWPIPE,DWCAP,(CAPILL(I),I=1,10)
      IWALLPIPEC(MM)=KV(1)
      WALLPIPEC(MM)=DWPIPE
      IWALLCAPC(MM)=KV(2)
      WALLCAPC(MM)=DWCAP
      DO I=1,NDIMCELL
          IWALLCELLC(I,MM)=KV(2+I)
          WALLCELLC(I,MM)=CAPILL(I)
      ENDDO
      WRITE(3,2030)(KV(I),I=1,12),DWPIPE,DWCAP,(CAPILL(I),I=1,10)
 2030 FORMAT(' WALL DIFF COEFF - PIPE,CAPILL,',
     1 'CELLS(1-10):'/12I3,12F10.2)
       IF(INDCELLIN.EQ.0) RETURN  
C        
C     DATA FOR DIFFUSION WITHIN CELLS 
C
      WRITE(3,2400)
2400  FORMAT(/' DATA FOR CELL INTERNAL DIFFUSION'/ 
     1  ' CELL NO NO OF VESIC  DDIFF CYTOSOL/ DDIFF VESICLE/',
     2  ' PARTITIONING: FLAGS AND VALUES/DDIF MEMBRANE') 
      DO NC=1,NDIMCELL         
         IF(INDCELLINV(NC).GT.0) THEN
            NN=INDCELLINV(NC)
            CALL ISPITA(ACOZ)
            READ(ACOZ,2047)DDIFFICY(NC,MM),(DDIFFIVS(NC,MM,I),I=1,5)
 2047       FORMAT(5X,F10.2,5X,5F10.2)
            CALL ISPITA(ACOZ)
            READ(ACOZ,2041)(IPARTIVS(NC,MM,I),I=1,5),
     1      (PARTIVS(NC,MM,I),I=1,5),(DDIFFICM(NC,MM,I),I=1,5)
 2041       FORMAT(5I5,5F10.2,5X,5F10.2)
            WRITE(3,2042)NC,NN,DDIFFICY(NC,MM)
 2042       FORMAT(I5,I10,10X,5F10.2) 
            WRITE(3,2043)(DDIFFIVS(NC,MM,I),I=1,5)
 2043       FORMAT(25X,5F10.2)
            WRITE(3,2044)(IPARTIVS(NC,MM,I),I=1,5),
     1      (PARTIVS(NC,MM,I),I=1,5)
 2044       FORMAT(5I5,5F10.2)
            WRITE(3,2043)(DDIFFICM(NC,MM,I),I=1,5)               
         ENDIF
      ENDDO
C
      RETURN
      END
C====================================================================
C
C====================================================================
      SUBROUTINE ULAZSYSMULT(ZADSYSV,NPTSYSMAX,NPTSYS,MULTIMOL,MM)  
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
C
C     PRESCRIBED VALUES FOR SYSTEMIC CONCENTRATION IN CASE OF ISMEARED.EQ.1
C
      CHARACTER*130 ACOZ      
      DIMENSION ZADSYSV(MULTIMOL,2,NPTSYSMAX)
      CALL ISPITA(ACOZ)
      READ(ACOZ,1000) MMI
 1000 FORMAT(I5)
      IF(MMI.EQ.1) THEN
         WRITE(3,2000)
 2000    FORMAT(/6X,'PESCRIBED VALUES OF SYSTEMIC CONCENTRATION FOR',
     1   ' ISMEARED.EQ.1'/
     2  6X,'MOLECULE NO  NUMB OF POINTS')
      ENDIF 
      IF(MMI.NE.MM) THEN
        WRITE(3,2020) MM,MMI
 2020   FORMAT(/' ERROR: DATA MUST BE IN ORDER OF MOLECULES'/
     1          '        MOLECULE ORDER,    MM =',I5/
     2          '                 INPUT    MMI =',I5/
     3  ' STOP')
        STOP              
      ENDIF
      WRITE(3,2001)MMI,NPTSYS    
 2001 FORMAT(10X,I2,5X,I5)
      DO NN=1,NPTSYS
          CALL ISPITA(ACOZ)
          READ(ACOZ,1005) ZADSYSV(MM,1,NN),ZADSYSV(MM,2,NN)
 1005     FORMAT(2F10.2)
          WRITE(3,6059)ZADSYSV(MM,1,NN),ZADSYSV(MM,2,NN)
 6059     FORMAT(5X,D10.3,5X,D10.3)   
      ENDDO    
C
      RETURN
      END                
C==========================================================================
C
C==========================================================================
      SUBROUTINE MEMORYTT(LSTART,LMAX,NBYTE,ITWO,NOTA,IIZLAZ)
C
CE Subroutine MEMORY is used for reservation of memory 
C
      
      !IF (MOD(LMAX,2).EQ.0) LMAX=LMAX+1
      !LSTART=LMAX
      !LMAX=LSTART+NBYTE*ITWO
      
      LSTART=LMAX
      LMAX=LSTART+NBYTE*ITWO
      IF (MOD(LMAX,2).EQ.0) LMAX=LMAX+1
      IF (LMAX.GT.NTOTA) THEN
CS       WRITE(*,*) 'NEMA DOVOLJNO MEMORIJE ZA RESAVANJE PROBLEMA!!!'
CS       WRITE(IIZLAZ,*)'NIJE DOVOLJNO ZA RADNI VEKTOR ',MAXVEC,' MEMORIJE'
CS       WRITE(IIZLAZ,*) 'POTREBNO JE MEMORIJE VISE OD: ',MEMNEW
         WRITE(*,*) 'NOT ENOUGH MEMORY FOR THE PROBLEM!!!'
         WRITE(IIZLAZ,*)'NOT ENOUGH FOR WORKING VECTOR',NTOTA,'MEMORY'
         WRITE(IIZLAZ,*) 'NEEDED MEMORY IS MORE THAN: ',NTOTA
         WRITE(IIZLAZ,2000)NTOTA
 2000    FORMAT('NOT ENOUGH FOR WORKING VECTOR','NTOTA','MEMORY'/
     1       'NEEDED MEMORY IS MORE THAN: ',I10)   
       STOP
       ENDIF
      
      RETURN
      END 
C================================================================
C
C================================================================
      SUBROUTINE UPDATECELLMIG(VFTT,VFMULTIT,DELTAV,VFDTV,NDIMCELL,NPT)
C
C     UPDATES AND PRINTOUT FOR CELL MIGRATION
      
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
      COMMON/CMIGRATION/IMIGTABLE(10),JEDNMIGV(10),VMIGC(10),
     1 INDCHTAXV(10),INDCHTAX,IMIGTOT,IMIGNODE,LIVMIGV,LVMIGV,LIDTMIG,
     2 INDMIG,LVFTT,JEDNMIG,INDCHTAXTOT,LCHTAXV
 
      DIMENSION VFTT(IMIGTOT,NPT),VFMULTIT(NDIMCELL,NPT),DELTAV(NPT),
     1          VFDTV(NPT)   
      CALL CLEAR(DELTAV,NPT)
      CALL CLEAR(VFDTV,NPT)
      DO N=1,NPT
         KID=0
         DO IC=1,NDIMCELL
            IF(IMIGTABLE(IC).GT.0) THEN
               KID=KID+1
               DELTAV(N)=DELTAV(N)+VFTT(KID,N)-VFMULTIT(IC,N)
            ELSE
               VFDTV(N)=VFDTV(N)+VFMULTIT(IC,N)   
            ENDIF
          ENDDO  
      ENDDO
      DO N=1,NPT
         KID=0
         DO IC=1,NDIMCELL
            IF(IMIGTABLE(IC).GT.0) THEN
               KID=KID+1
               VFMULTIT(IC,N)=VFTT(KID,N)
            ELSE
               IF(VFDTV(N).GT.1.D-10) THEN
                  VFMULTIT(IC,N)=VFMULTIT(IC,N)*(1.-
     1                           DELTAV(N)/VFDTV(N))
                  IF(VFMULTIT(IC,N).LT.0.D0)VFMULTIT(IC,N)=0.D0
               ENDIF
            ENDIF
          ENDDO  
      ENDDO
      WRITE(3,2000)
 2000 FORMAT(/' CELL VOLUMETRIC FRACTIONS'/
     1 '   NODE       ','CELL   1',4X,'CELL  2 .......')
      DO N=1,NPT
         WRITE(3,2001) N, (VFMULTIT(IC,N),IC=1,NDIMCELL)
      ENDDO    
 2001 FORMAT(I7,3X,10E12.4)        
      RETURN
      END      
C================================================================
C
C==================================================================== 
      SUBROUTINE CHEMOTAXCONC(IDT,IDTV,TT1C,TT1CM,NZADJ,ZADATA1,
     1   NZADNODF,ZADATM1,CHTAXV,NZADPV,NZADPMAX,MULTITIS,MULTIMOL,
     2   NPT,NZADP,NDIMID,JEDNCONC,JEDNCMAX,NDIMCELL)
C     SET VALUES FOR CONCENTRATIONS FOR CHEMOTAXIS MOLECULES   
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
      COMMON/CMIGRATION/IMIGTABLE(10),JEDNMIGV(10),VMIGC(10),
     1 INDCHTAXV(10),INDCHTAX,IMIGTOT,IMIGNODE,LIVMIGV,LVMIGV,LIDTMIG,
     2 INDMIG,LVFTT,JEDNMIG,INDCHTAXTOT,LCHTAXV
C
      DIMENSION IDT(NDIMID,NPT),IDTV(MULTIMOL,NDIMID,NPT),
     1   TT1C(JEDNCONC),TT1CM(MULTIMOL,JEDNCMAX),NZADJ(3,NZADP),  
     2   ZADATA1(NZADP),NZADNODF(MULTIMOL,3,NZADPMAX),
     3   ZADATM1(MULTIMOL,NZADPMAX),CHTAXV(INDCHTAXTOT,NPT),
     4   NZADPV(MULTIMOL)
C
      IF(MULTIMOL.GT.1) GO TO 200
C     ONE MOLECULE
      DO 10 N=1,NPT
         JJ=IDT(3,N)
         IF(JJ.GT.0) THEN
            CHTAXV(1,N)=TT1C(JJ)
         ELSE
            DO I=1,NZADP
               IF(NZADJ(1,I).EQ.N) THEN
                  CHTAXV(1,N)=ZADATA1(I)
                  GO TO 10
               ENDIF
            ENDDO
         ENDIF
   10 CONTINUE   
      RETURN  
C     MULTIMOLECULE
  200 CONTINUE
      KK=0  
      DO 310 IC=1,NDIMCELL 
         MM=INDCHTAXV(IC)
         IF(MM.EQ.0) GO TO 310
         KK=KK+1
         NZADPP=NZADPV(MM)
         DO 300 N=1,NPT 
            JJ=IDTV(MM,IC,NPT)
            CHTAXV(KK,N)=0.D0
            IF(JJ.GT.0) THEN
               CHTAXV(KK,N)=TT1CM(MM,JJ)
            ELSE
               DO I=1,NZADPP
                 IF(N.EQ.NZADNODF(MM,1,I)) THEN
                    CHTAXV(KK,N)=ZADATM1(MM,I)
                    GO TO 300
                 ENDIF
               ENDDO
            ENDIF 
  300    CONTINUE
  310 CONTINUE
      RETURN
      END            
C ===============================================================
C
C ====================================================================
      subroutine printcord(CORD,npt,ind) 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
c     auxilliary printing of nodal coordinated
c
      dimension CORD(NPT,3)
      write(3,2000)ind
      return
 2000 format(/' coordinates ind=',i5/
     1 ' node     coordinates x,y,z')
      do i=1,npt
         write(3,2001) i,CORD(i,1),CORD(i,2),CORD(i,3)
2001     format(i5,5x,3d13.5)
      enddo
      return
      end
c ===========================================================
c
c ===========================================================  
      subroutine printzadata1(zadata1,nzadp) 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
c     auxilliary printing of zadata1

      dimension zadata1(nzadp)
      
      write(3,2000)nzadp
      write(3,2001)(zadata1(i),i=1,nzadp)
 2000 format(/' nzadp=', i5)
 2001 format(4d13.5)
      return
      end
c ===========================================================
c
c ===========================================================  
      subroutine printrhs(TT1,f,kor,iter,jedn,ipassme,ind,ind2) 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
c     auxilliary printing of right hand side 
      dimension tt1(jedn),f(jedn)
      if(ind2.eq.1) then              
         write(3,2021)
 2021    format(' pressures')
      else
         write(3,2022)
 2022    format(' CONCENTRATIONS')
      endif
      if(ind.eq.0) then
        write(3,2000) kor,iter,jedn,ipassme
 2000   format(/'kor,iter,jedn,ipassme=',4i5)
        write(3,2001)
 2001   format(' tt1(i):')
        write(3,2002)(tt1(i),i=1,jedn)
 2002   format(8d13.5)
        write(3,2003)
 2003   format(' RHS - sile')
        write(3,2002)(f(i),i=1,jedn)
      else IF (IND.EQ.1) THEN
        write(3,2004)
 2004   format(' solution:')
        write(3,2002)(f(i),i=1,jedn)
      ELSE
        WRITE(3,2040)
 2040   FORMAT(' TT1:')
        write(3,2002)(tt1(i),i=1,jedn)
      endif 
      
      return
      end        
C=====================================================================
C
C=====================================================================    
      SUBROUTINE CAP1DFICTSME3MULT(IDT,F,TT1P,TT1C,TT10P,TT10C,
     1 TT1PM,TT01PM,TT1CM,TT01CM,IDTV,NODEPART,
     1 PARTV,THICKSMEV,DWALLSMEV,PWALLSMEV,WALLAREAV,HYDRCOEFV,NZADJ,
     2 ZADATA1,ZADATA0,ZADATM01,ZADATM1,NZADNODF,IACTIVE,NEL,KOR,ITER,
     2 JEDN,DT,NPT,NLM1,INDFLUX,
     3 NZADP,NE1D,ICONV,INDIFFUS,IPART,IPASSME,JEDNPRES,JEDNCONC,
     4 NDIMIDT)
      
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     FICTITIOUS 1D ELEMENTS CONNECTING LARGE VESSELS(PIPE) TO CAPILLARY SMEARED
C
      COMMON/CMATDATA/NDIMPIPEMAX,NDIMCAPMAX,NDIMCELLMAX,NDIMPMAX,
     4 NDIMAMAX,NDIMSMAX,NDIMADHMAX,NDIMWPIPEMAX,NDIMWCAPMAX,
     5 NDIMWCELLMAX,DARCYCOEF,AMICOEFP,AMICOEFC,HYDROCOEFP,HYDROCOEFC,
     6 DARCYTENSOR(6),DPIPE,DTISSUE,DIFFTENSOR(6),PARTPIPE1,PARTPIPE2,
     7 PARTCELL(2,4),ACTIVECOEF(2,4),SOURCECOEFF(4),ADHCOEFF(2,4),
     8 DWALLPIPE,DWALLCAP,DWALLCELL(4),INODEDTOT,INODEWTOT,LDPIPEEXA,
     9 LDPIPECAPA,LCELLA,LPARTA,LACTIVEA,LSOURCEA,LADHISEA,LWALLPIPEA,
     1 LWALLCAPA,LWALLCELLA,IREADDIFNODE
      COMMON/CSMEARED/ISMEARED,VOLFRACT,POROSSME,LVOLFRACTV,LDWALLSMEV,
     1 LPWALLSMEV,LDIAMSMEV,LTHICKSMEV,IPARTSME,LVOLSMEV,IRAVSME,DRAVSME
      COMMON/CMULTITIS/MULTITIS,MULTIMOL,IACTIVECELL(4),NDIMCELL,LIDTV,
     1      LIDTVCELL,JEDNPV(10),JEDNCV(10),JEDNPMAX,JEDNCMAX,MM
      COMMON/CZADATMULT/NZADPV(10),NZADPMAX,LZADATM0,LZADATM1,LNZADNODF,
     1      LZADVALUE,NPTIMESYSV(10),NPTSYSMAX,LZADSYSV
      COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
C
      DIMENSION IDT(NDIMIDT,NPT),F(JEDN),TT1P(JEDNPRES),TT1C(JEDNCONC),
     1          TT10P(JEDNPRES),TT10C(JEDNCONC),NODEPART(NPT),
     2          PARTV(NPT), THICKSMEV(NPT),DWALLSMEV(NPT),
     3          PWALLSMEV(NPT),WALLAREAV(NPT),HYDRCOEFV(NPT),
     4          NZADJ(3,NZADP),ZADATA1(NZADP),ZADATA0(NZADP),IACTIVE(4),
     5          NEL(NE1D,2)
      DIMENSION TT1PM(MULTIMOL,JEDNPMAX),  TT01PM(MULTIMOL,JEDNPMAX),
     1          TT1CM(MULTIMOL,JEDNCMAX),  TT01CM(MULTIMOL,JEDNCMAX),
     2          IDTV(MULTIMOL,NDIMIDT,NPT),ZADATM01(MULTIMOL,NZADPMAX),
     3          ZADATM1(MULTIMOL,NZADPMAX),NZADNODF(MULTIMOL,3,NZADPMAX)
      DIMENSION SKE(2,2),F3(2),T11(2),EM(2,2),T110(4),PV(2),
     1          LM(4)  
C
      NN1=2
C
      NODE1=NEL(NLM1,1)
      NODE2=NEL(NLM1,2)
      DMASS=0.D0
      DT3=3.*DT
      DT6=6.*DT
C
      IF(ISMEARED.EQ.0) THEN
         ID1=3
         ID2=4
         IP1=1
         IP2=2
      ELSE 
         ID1=3
         ID2=3
         IP1=1
         IP2=1
      ENDIF
      
      IF(MULTIMOL.EQ.1) THEN
        JJ1  = IDT(ID1,NODE1)
        JJ2  = IDT(ID2,NODE2) 
        JJP1 = IDT(IP1,NODE1)
        JJP2 = IDT(IP2,NODE2)
      ELSE
        JJ1  = IDTV(MM,ID1,NODE1)
        JJ2  = IDTV(MM,ID2,NODE2) 
        JJP1 = IDTV(MM,IP1,NODE1)
        JJP2 = IDTV(MM,IP2,NODE2)
      ENDIF
      
      IF(IPASSME.EQ.1) THEN
         LM(1)=JJP1
         LM(2)=JJP2
         IF(JJP1.EQ.0.AND.JJP2.EQ.0) GO TO 200
      ELSE
         LM(1)=JJ1
         LM(2)=JJ2
         IF(JJ1.EQ.0.AND.JJ2.EQ.0) GO TO 200
      ENDIF
C
      DO I = 1,2
         F3(I)=0.D0
         T11(I)=0.D0
         T110(I)=0.D0
      ENDDO
C      
      DO 23 I=1,2
         NC=NODE1
         JJP=JJP1
         IF(I.EQ.2) THEN
            NC=NODE2
            JJP=JJP2
         ENDIF
         
         IF(IPASSME.EQ.2.AND.ICONV.EQ.1) THEN
           IF(MULTIMOL.EQ.1) THEN
             IF(JJP.GT.0) PV(I)=TT1P(JJP)
           ELSE
             IF(JJP.GT.0) PV(I)=TT1PM(MM,JJP)
           ENDIF
         ENDIF
         
         IF(LM(I).GT.0) THEN
            IF(MULTIMOL.EQ.1) THEN
              IF(IPASSME.EQ.1) THEN
                 T11(I)=TT1P(LM(I))
                 T110(I)=TT10P(LM(I))
              ELSE
                 T11(I)=TT1C(LM(I))
                 T110(I)=TT10C(LM(I))
              ENDIF
            ELSE
              IF(IPASSME.EQ.1) THEN
                 T11(I)=TT1PM(MM,LM(I))
                 T110(I)=TT01PM(MM,LM(I))
              ELSE
                 T11(I)=TT1CM(MM,LM(I))
                 T110(I)=TT01CM(MM,LM(I))
              ENDIF
            ENDIF
         ELSEIF(LM(I).EQ.0) THEN
            IF(MULTIMOL.EQ.1) THEN 
              DO J=1,NZADP
                IF(NZADJ(1,J).EQ.NC) THEN
                  IF(IPASSME.EQ.1) THEN
                    IF(NZADJ(2,J).EQ.IP1.OR.NZADJ(2,J).EQ.IP2) THEN
                      T11(I)=ZADATA1(J)
                      T110(I)=ZADATA0(J)
                      GO TO 22
                    ENDIF
                  ELSE
                    IF(NZADJ(2,J).EQ.ID1.OR.NZADJ(2,J).EQ.ID2) THEN
                      T11(I)=ZADATA1(J)
                      T110(I)=ZADATA0(J)
                      GO TO 22
                    ENDIF
                  ENDIF
                ENDIF
              ENDDO
            ELSE
              NZADPM=NZADPV(MM)
              DO J=1,NZADPM
                NJ=NZADNODF(MM,1,J) 
                
                IF(NJ.EQ.NC) THEN
                  IDOF=NZADNODF(MM,2,J)                 
                  IF(IPASSME.EQ.1) THEN
                    IF(IDOF.EQ.IP1.OR.IDOF.EQ.IP2) THEN
                      T11(I)  = ZADATM1(MM,J)
                      T110(I) = ZADATM01(MM,J)
                      GO TO 22
                    ENDIF
                  ELSE
                    IF(IDOF.EQ.ID1.OR.IDOF.EQ.ID2) THEN
                      T11(I)  = ZADATM1(MM,J)
                      T110(I) = ZADATM01(MM,J)
                      GO TO 22
                    ENDIF
                  ENDIF
                ENDIF
              ENDDO            
            ENDIF
            
            
         ENDIF
   22    CONTINUE 
         IF(IPASSME.EQ.1) GO TO 23
         IF(ICONV.EQ.0.OR.JJP.GT.0) GO TO 23
C
C        PRESCRIBED PRESSURES FOR CONVECTION IN DIFFUSION  
C
         IF(MULTIMOL.EQ.1) THEN 
           DO J=1,NZADP
             IF(NZADJ(1,J).EQ.NC) THEN
               IF(NZADJ(2,J).EQ.IP1) THEN
                 PV(1)=ZADATA1(J)
                 GO TO 23
               ELSE IF(NZADJ(2,J).EQ.IP2) THEN
                 PV(2)=ZADATA1(J)
                 GO TO 23
               ENDIF
             ENDIF    
           ENDDO
         ELSE
           NZADPM=NZADPV(MM)
           DO J=1,NZADPM
             NJ=NZADNODF(MM,1,J) 
             IF(NJ.EQ.NC) THEN
               IDOF=NZADNODF(MM,2,J) 
               IF(IDOF.EQ.IP1) THEN
                 PV(1)=ZADATM1(MM,J)
                 GO TO 23
               ELSE IF(IDOF.EQ.IP2) THEN
                 PV(2)=ZADATM1(MM,J)
                 GO TO 23
               ENDIF
             ENDIF    
           ENDDO 
         ENDIF
         
   23 CONTINUE
C
      NNPART=0
      IP1=0
      IP2=0
      PP1=0.D0
      PP2=0.D0
      IF(IPASSME.EQ.2) THEN
         IF(MULTIMOL.EQ.1.AND.IPART.EQ.1) THEN 
           NNPART=1
           IP1=NODEPART(NODE1)
           IF(IP1.EQ.1) THEN
               PP1=PARTV(NODE1)
               T11(1)=T11(1)*PP1
           ENDIF
           IP2=NODEPART(NODE2)
           IF(IP2.EQ.1) THEN
               PP2=PARTV(NODE2)
               T11(2)=T11(2)*PP2
           ENDIF
         ELSE IF(MULTIMOL.GT.1) THEN
           IF(IPARTC(1,MM).EQ.1) THEN
              NNPART=1
              IP1=1
              PP1=PARTC(1,MM)
              T11(1)=T11(1)*PP1
           ENDIF
         ENDIF
      ENDIF
C     
      IF(IPASSME.EQ.1) THEN
         AK=WALLAREAV(NODE1)*HYDROCOEFP
         AKV=0.D0
      ELSE
         AK=WALLAREAV(NODE1) * WALLPIPEC(MM)
         EMC=WALLAREAV(NODE1)* THICKSMEV(NODE1)
         EMC=0.D0
         EM(1,1)=EMC/DT3
         EM(1,2)=EMC/DT6
         EM(2,2)=EM(1,1)
         EM(2,1)=EM(1,2) 
         AKV=0.D0
         IF(ICONV.EQ.1) THEN
            AKV=WALLAREAV(NODE1)*HYDROCOEFP
            AKV=0.5*AKV*(PV(1)-PV(2))       
         ENDIF
      ENDIF       
      SKE(1,1)=AK-AKV
      SKE(2,2)=AK+AKV
      SKE(1,2)=-AK+AKV
      SKE(2,1)=-AK-AKV
      IF(IPASSME.EQ.1) THEN
         DO I=1,2
            DO J=1,2
               F3(I)=F3(I)-SKE(I,J)*T11(J)
            ENDDO
         ENDDO  
      ELSE
         DO 2 I=1,2
            DO 2 J=1,2  
              SKE(I,J)=SKE(I,J)+EM(I,J)
    2    CONTINUE
         DO 5 I=1,2
            DO 5 J=1,2
              F3(I)=F3(I)-SKE(I,J)*T11(J)+EM(I,J)*T110(J)
    5    CONTINUE
         IF(NNPART.EQ.1.AND.INDFLUX.EQ.0) THEN
             IF(IP1.EQ.1) THEN
                SKE(1,1)=SKE(1,1)*PP1
                SKE(2,1)=SKE(2,1)*PP1
             ENDIF
             IF(IP2.EQ.1) THEN
                SKE(1,2)=SKE(1,2)*PP2
                SKE(2,2)=SKE(2,2)*PP2
             ENDIF
          ENDIF
      ENDIF
C
      IF(INDFLUX.EQ.1.AND.IPASSME.EQ.2) THEN
         DMASS=DMASS+F3(2)
         GO TO 200
      ENDIF  
C
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
          CALL sparseassembler_addelemmatrix(NN1,LM,SKE)
#endif
          CALL SPAKDE(F,F3,LM,NN1,JEDN)
  200 CONTINUE
C
      IF(INDFLUX.EQ.1) THEN
         AMASSCAP=AMASSCAP+DMASS*DT
      ENDIF        
C
      RETURN
      END  
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTEB1DARCYSM(IDT,CORD,TCONS,NTAKV,NTACV,TT1P,TT1C,
     1 TT10P,TT10C,TT1PM,TT01PM,TT1CM,TT01CM,IDTV, 
     2 NEL,NQ,MATV,EL,HP,HK,SKE,IBFK,FAKP,HR,MATERP,
     2 AMATF,NZADJ,ZADFM,DARCYD,DARCYMI,DARCYDIFD,IDARCYMA,
     3 NODEIN,NODEOUT,FLUX,MATERH,AMATFRO,AMATFSH,AMATFK,
     4 DENSITY,EMODULUS,DELTAE,ZADATA1,ZADATA0,ZADATM01,
     1 ZADATM1,NZADNODF,NDES,NDIMIDT,IDARCY,
     5 IBOUND,NZADIN,NZADOUT,MAT1DD,INDFLUXE,IDEFORM,IDTCD,
     6 IACTIVE,IPASSME,JEDNPRES,JEDNCONC,ISMEARED,LFORCE)    
C
C     1D PIPE ELEMENTS COUPLED WITH SMEARED CONTINUUM        
C                  
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON A(1)
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA1/ LNEL1D,LMAT1D,LNQ1D,LITG1D,LIP1CV,LNG1D,LNELG1,
     1LEL1,LHP1,LHK1,LSKE1,LDEL1,LDEHP1,LDEHK1,LHR1
      COMMON /EL1K03/NMAT1D,MAT1D,NE1D,NGAU1X,NP1DMX,NND1,IELX1,NLM1,
     1IPR1DC,IPTG1,N1DGU,MEL1D,IQE1,NBR1,NCV1,LM1(3),IDEL1(1),NOD1(1)
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON/REAL1D/ CK1(3,3),P1(1,3),PJ1(1,3),XJ1(1,3),H1(3),
     1DET1,F3(6),TT3(6),TT32(6),TT30(6)  
      COMMON /SRPSKI/ ISRPS
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ          
	common/elemmodels/modelel(20),ngele                 
	COMMON/MESSAGES/MESSAGE
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON/UNSYMMETRIC/LALEVO,LDESNO,LSILE,ISYMM
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP, 
     3ITOR,INDVEL,INDFL
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10)
	COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
      COMMON/CMULTITIS/MULTITIS,MULTIMOL,IACTIVECELL(4),NDIMCELL,LIDTV,
     1      LIDTVCELL,JEDNPV(10),JEDNCV(10),JEDNPMAX,JEDNCMAX,MM
      COMMON/CZADATMULT/NZADPV(10),NZADPMAX,LZADATM0,LZADATM1,LNZADNODF,
     1      LZADVALUE,NPTIMESYSV(10),NPTSYSMAX,LZADSYSV
C
      DIMENSION IDT(NDIMIDT,NPT),CORD(NPT,3),TCONS(*),NTAKV(*),NTACV(*),
     1TT1P(JEDNPRES),TT1C(JEDNCONC),TT10P(JEDNPRES),TT10C(JEDNCONC),
     2 NEL(NE1D,2),MATV(*),EL(*),HP(*),HK(*),SKE(NDES,NDES),
     2NQ(*),IBFK(NMATT,*),FAKP(NMATT,*),TBK(1),HR(*)        
      DIMENSION XG(15),WGT(15),NREF(6)
      DIMENSION MATERP(NUMMAT),AMATF(NUMMAT,2,*),NZADJ(3,NZADP),
     1          ZADFM(NZADP),IDTCD(2,NPT),IACTIVE(4)
      DIMENSION DARCYD(2,NE1D),DARCYMI(NE1D),DARCYDIFD(NE1D),
     1          IDARCYMA(NPT),NODEIN(NZADIN),NODEOUT(NZADOUT),FLUX(NPT),
     2          DENSITY(NE1D),EMODULUS(NE1D),DELTAE(NE1D),
     3          ZADATA1(NZADP),ZADATA0(NZADP)
      DIMENSION MATERH(NMATTHEAT),AMATFRO(NMATTHEAT,2,*),
     2          AMATFSH(NMATTHEAT,2,*),AMATFK(NMATTHEAT,2,*)
      DIMENSION ZADLOCAL(6),ZADLOCAL0(6),ZADLOCAL32(6),LMZADA(6),LM1D(6)
     1          ,LMMINUS(6),VLOCAL(6),SKEM(2,2),SKEP(2,2),
     2          SKED(2,2),AMASSA(2,2),EM(2,2)
      DIMENSION TT1PM(MULTIMOL,JEDNPMAX),TT01PM(MULTIMOL,JEDNPMAX),
     1          TT1CM(MULTIMOL,JEDNCMAX),TT01CM(MULTIMOL,JEDNCMAX),
     2          IDTV(MULTIMOL,NDIMIDT,NPT)
      DIMENSION ZADATM01(MULTIMOL,NZADPMAX),ZADATM1(MULTIMOL,NZADPMAX),
     1          NZADNODF(MULTIMOL,3,NZADPMAX)
C
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
C
      IF(INDFLUXE.EQ.1) RETURN
C
      IF(IZIP.EQ.2) GO TO 15
      IF(NQE.NE.1) GO TO 15
      CALL TABF(A(LQEFN),A(LNTAQE),NQE,NQE,VREME,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 15
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) NQE,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) NQE,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPL. IZVOR-VREME,  BR.=',I3/
     11X,'ARGUMENT VREME= ',F10.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME = ',1PD12.4)
      STOP
   15 CONTINUE
C
      ICONVV = ICONV
      IDIFFHEAT = 0
      IF(IDIFUSE.NE.0.OR.IHEAT.NE.0) IDIFFHEAT = 1
C
      PI     = 4.*DATAN(1.D0)
      PI4    = PI/4.
      COEFF  = PI/128.
      DDARCY = 0.D0
      iizlaz = 3
      VBR    = 1.0D35
      CC1=1.D0
      AKTT = 1./DT
      ILAMDA=0
      IDPRESSE=1
      ICONECTIV=0
      IF(ICONV.EQ.0)IDPRESSE=0
      INDVEL=0
      IDCONCE=0    
      IF(INDIFFUS.EQ.1) THEN
        IDCONCE=2
        IF(ICONV.EQ.0)IDCONCE=1   
      ENDIF
C
C     LOOP OVER ELEMENTS
C
      DO 200 NLM1= 1,NE1D
      DO 20 I = 1,MEL1D
C      IF(INDSK.EQ.0) GO TO 21
      HP(I) = 0.
      HK(I) = 0.
      HR(I) = 0.
C   21 IF(NSTAC.EQ.0) GO TO 20
      EL(I) = 0.
   20 CONTINUE
      DO 17 I=1,6
      TT3(I) = 0.
      TT32(I) = 0.
      TT30(I) = 0.
      IF(I.LE.3)LM1(I)=0
   17 F3(I)=0.
      DO I=1,6
        ZADLOCAL(I)=0.D0
        ZADLOCAL0(I)=0.D0
        ZADLOCAL32(I)=0.D0
	  LMZADA(I)=0
	  LM1D(I)=0
	  LMMINUS(I)=0
      ENDDO
C     IF(NSTAC.EQ.0) GO TO 23
      CALL CLEAR(SKE,NDES*NDES)
      CALL CLEAR(SKEM,4)
      CALL CLEAR(SKEP,4)
      CALL CLEAR(SKED,4)
      CALL CLEAR(AMASSA,4)
C
   23 IF(NMAT1D.GT.1.OR.indiffus.EQ.1.OR.IHEAT.EQ.1) MAT1D=MATV(NLM1)
      IQE1=0
      IF(NQE.GT.0) IQE1=NQ(NLM1)
      ARG=0.
	IF(indiffus.EQ.1.OR.iDARCY.NE.0) THEN
	  CC1=1.D0
	  GO TO 30 
	ENDIF
      IF(NSTAC.EQ.0.OR.KONC.EQ.1) GO TO 25
      CALL TABF(A(LTABC),A(LNTACV),MAT1D,NMATT,ARG,CC1,NTA,IND)
   25 IF(IANIZ.EQ.0) GO TO 188
      FAX=FAKP(MAT1D,1)
  188 IBX=IBFK(MAT1D,1)
      IF(KONK.EQ.1) GO TO 30
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,ARG,AKX,NTA,IND)
      IF(IANIZ.EQ.0) GO TO 30
      AKX=AKX*FAX
   30 IF(IQE1.EQ.0.OR.NQE.EQ.1) GO TO 44
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,VREME,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 44
      WRITE(3,2000) IQE1,VREME
      STOP
   44 IF(IZIP.NE.2.OR.MAXTQE.GT.1) GO TO 40
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,ARG,QQ1,NTA,IND)
      
   40 NCV1   = 0
      NND1   = 0
	NELZAD = 0
	
      DIAM1  = DARCYD(1,NLM1)
      DIAM2  = DARCYD(2,NLM1)
      DIAM   = 0.5*(DIAM1+DIAM2)
      AREA   = PI4*DIAM*DIAM
      AMI    = DARCYMI(NLM1)
      DDIF   = DARCYDIFD(NLM1)
      EEE    = 0.D0
      DELTAE0= 0.D0
      IF(IDEFORM.EQ.1) THEN
         EEE = EMODULUS(NLM1)
         DELTAE0 = DELTAE(NLM1)
      ENDIF
C	
C     LOOP OVER NODES ---------------
C
      KKIN  = 0
      KKOUT = 0
      NBR1=2
      DO 50 I=1,NBR1
   41 J=NEL(NLM1,I)
      NODE1=NEL(NLM1,1)
      NODE2=NEL(NLM1,2)
   
        JJ1=0
        IF(IPASSME.EQ.1) THEN
           IF(MULTIMOL.EQ.1) THEN
             JJ1 = IDT(1,J)
           ELSE IF(MULTIMOL.GT.1) THEN
             JJ1 = IDTV(MM,1,J) 
           ENDIF
        ELSE
           IF(MULTIMOL.EQ.1) THEN
             JJ1 = IDT(3,J)
           ELSE IF(MULTIMOL.GT.1) THEN
             JJ1 = IDTV(MM,3,J) 
           ENDIF
        ENDIF
C
      NCV1=I
      VLOCAL(NCV1)=0.D0
      LMMINUS(NCV1)=IDARCYMA(J)
      NCV1DISP=2+NCV1  
C
C     PRESCRIBED VALUES
C    
      IF(MULTIMOL.GT.1) GO TO 79  
C
C     ONE MOLECULE CASE
      IF(NZADP.GT.0.AND.IBOUND.EQ.0) THEN
	  DO 76 KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
            IF(IDOF.EQ.1) THEN
               NELZAD=NELZAD+1
               IF(IPASSME.EQ.1) THEN
                   LMZADA(NCV1)=1
                   ZADLOCAL(NCV1)=ZADATA1(KK)
                   ZADLOCAL0(NCV1)=ZADATA0(KK)
               ELSE
                   IF(ICONV.EQ.1) THEN
                      LMZADA(NCV1DISP)=1
                      ZADLOCAL(NCV1DISP)=ZADATA1(KK)
                      ZADLOCAL0(NCV1DISP)=ZADATA0(KK)
                   ENDIF
               ENDIF
               GO TO 76
            ENDIF
            IF(IDOF.EQ.3.AND.IPASSME.EQ.2) THEN
               NELZAD=NELZAD+1
               LMZADA(NCV1)=1
               ZADLOCAL(NCV1)=ZADATA1(KK)
               ZADLOCAL0(NCV1)=ZADATA0(KK)
               GO TO 76
            ENDIF
            IF(ICONV.EQ.1.AND.IDOF.EQ.-1) THEN
               NELZAD=NELZAD+1
               LMZADA(NCV1)=-1
               LMMINUS(NCV1)=-1
               VLOCAL(NCV1)=ZADATA1(KK)
               GO TO 76
            ENDIF
	    ENDIF
   76    CONTINUE
	ENDIF
C
C     MULTI-MOLECULE CASE
   79	CONTINUE
      NZADPM=NZADPV(MM)
	IF(NZADPM.GT.0.AND.IBOUND.EQ.0) THEN
	
	  DO 78 KK=1,NZADPM
	    NJ=NZADNODF(MM,1,KK)

	    IF(NJ.EQ.J) THEN
	      IDOF=NZADNODF(MM,2,KK)
            IF(IDOF.EQ.1) THEN
               NELZAD=NELZAD+1
               IF(IPASSME.EQ.1) THEN
                   LMZADA(NCV1)=1
                   ZADLOCAL(NCV1)=ZADATM1(MM,KK)
                   ZADLOCAL0(NCV1)=ZADATM01(MM,KK)
               ELSE
                   IF(ICONV.EQ.1) THEN
                      LMZADA(NCV1DISP)=1
                      ZADLOCAL(NCV1DISP)=ZADATM1(MM,KK)
                      ZADLOCAL0(NCV1DISP)=ZADATM01(MM,KK)
                   ENDIF
               ENDIF
               GO TO 78
            ENDIF
            IF(IDOF.EQ.3.AND.IPASSME.EQ.2) THEN
               NELZAD=NELZAD+1
               LMZADA(NCV1)=1
               ZADLOCAL(NCV1)=ZADATM1(MM,KK)
               ZADLOCAL0(NCV1)=ZADATM01(MM,KK)
               GO TO 78
            ENDIF
            IF(ICONV.EQ.1.AND.IDOF.EQ.-1) THEN
               NELZAD=NELZAD+1
               LMZADA(NCV1)=-1
               LMMINUS(NCV1)=-1
               VLOCAL(NCV1)=ZADATM1(MM,KK)
               GO TO 78
            ENDIF
	    ENDIF
   78    CONTINUE
	ENDIF	
C
   37 CONTINUE
C
      LM1D(NCV1)=JJ1
      IF(NTCONS.GT.0) THEN
          IF(MULTIMOL.EQ.1) THEN
            LM1D(NCV1)     = IDT(1,J)
            LM1D(NCV1DISP) = IDT(2,J)
          ELSE IF(MULTIMOL.GT.1) THEN
            LM1D(NCV1)     = IDTV(MM,1,J)
            LM1D(NCV1DISP) = IDTV(MM,2,J)
          ENDIF
      ENDIF

   45 CONTINUE
C
C
      IF(MULTIMOL.GT.1) GO TO 179
C
C     ONE MOLECULE CASE      
      IF (NSTAC.GT.0.OR.LINTE.GT.0.OR.NELZAD.GT.0) THEN
        IF(IDARCY.GE.0) THEN
            IF(ICONV.EQ.1.AND.IPASSME.EQ.2) THEN
               JJCONV=IDT(1,J)
               IF(JJCONV.GT.0) THEN
                  TT3(NCV1DISP)=TT1P(JJCONV)
               ENDIF
            ENDIF
            IF(JJ1.GT.0) THEN
               IF(IPASSME.EQ.1) THEN                
                  TT3(I)  = TT1P(JJ1)
                  TT30(I) = TT10P(JJ1)
               ELSE                 
                  TT3(I)  = TT1C(JJ1)
                  TT30(I) = TT10C(JJ1)
               ENDIF
	      ELSE IF(LMZADA(I).EQ.1) THEN
              TT3(I)  = ZADLOCAL(I)
              TT30(I) = ZADLOCAL0(I)
            ENDIF
           IF(IPASSME.EQ.2.AND.ICONV.EQ.1.AND.LMZADA(NCV1DISP).EQ.1)THEN
               TT3(NCV1DISP) = ZADLOCAL(NCV1DISP)
               TT30(NCV1DISP) = ZADLOCAL0(NCV1DISP)
            ENDIF
        ENDIF                
	ENDIF
	GOTO 50
C
C     MULTI-MOLECULE CASE
  179 CONTINUE
      IF (NSTAC.GT.0.OR.LINTE.GT.0.OR.NELZAD.GT.0) THEN
        IF(IDARCY.GE.0) THEN
            IF(ICONV.EQ.1.AND.IPASSME.EQ.2) THEN
               JJCONV=IDTV(MM,1,J)
               IF(JJCONV.GT.0) THEN
                  TT3(NCV1DISP)=TT1PM(MM,JJCONV)
               ENDIF
            ENDIF
            IF(JJ1.GT.0) THEN
               IF(IPASSME.EQ.1) THEN                
                  TT3(I)  = TT1PM(MM,JJ1)
                  TT30(I) = TT01PM(MM,JJ1)
               ELSE                 
                  TT3(I)  = TT1CM(MM,JJ1)
                  TT30(I) = TT01CM(MM,JJ1)
               ENDIF
	      ELSE IF(LMZADA(I).EQ.1) THEN
              TT3(I)  = ZADLOCAL(I)
              TT30(I) = ZADLOCAL0(I)
            ENDIF
           IF(IPASSME.EQ.2.AND.ICONV.EQ.1.AND.LMZADA(NCV1DISP).EQ.1)THEN
               TT3(NCV1DISP) = ZADLOCAL(NCV1DISP)
               TT30(NCV1DISP) = ZADLOCAL0(NCV1DISP)
            ENDIF
        ENDIF                
	ENDIF
C
   50 CONTINUE
C     END OF LOOP OVER ELEMENT NODES
C
300   IELX1=NCV1
c
CE  NODE COORDINATES OF ELEMENTS MATRIX
c
      IF(IBOUND.EQ.1) THEN
        SKE(1,2)=-1.D0
        SKE(2,1)=-1.D0
        SKE(1,1)=1.D0
        SKE(2,2)=1.D0 
        GO TO 149
      ENDIF
      K=0
      DO 60 I=1,NBR1
      IF(NEL(NLM1,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM1,I)
      DO 55 J=1,3
   55 CK1(K,J)=CORD(KK,J)
   60 CONTINUE
C
      IF(ICONV.EQ.0) GO TO 66
C
C     ELEMENT MATRIX AND RIGHT-HAND SIDE OF THE CONVECTIVE PART OF THE ELEMENT MATRIX
C     NO INTEGRATION OVER GAUSS POINDS
c
      ELL=0.D0
      DO J=1,3
          DX=CK1(2,J)-CK1(1,J)
          ELL= ELL+DX*DX
      ENDDO
      VIN=0.D0
      ELL=DSQRT(ELL)
      IF(IDEFORM.EQ.1) THEN
           CALL PIPEDIAMETER(TT3(1),TT3(2),EEE,DELTAE0,DIAM1,DIAM2,DIAM,
     1                       ITER,KOR,NLM1)
      ENDIF  
      DIAM22 = DIAM*DIAM
      AREA   = PI4*DIAM*DIAM
      AK     = COEFF*DIAM22*DIAM22/AMI
C    
      IF(IPASSME.EQ.1) THEN  
         SKE(1,1)=AK/ELL
         SKE(1,2)=-SKE(1,1)
         SKE(2,1)=SKE(1,2)
         SKE(2,2)=SKE(1,1)
c
        DO 420 I=1,NCV1
          IF(LM1D(I).EQ.0) GO TO 420
          DO J=1,2
            F3(I)=F3(I)-SKE(I,J)*TT3(J)
          ENDDO
          IF (LMMINUS(I).EQ.-1) THEN
            F3(I)=F3(I)-VLOCAL(I)*PI4*DIAM*DIAM
          ELSEIF (LMMINUS(I).EQ.-2) THEN
            SKE(I,I)=1.D0
            IF(I.EQ.1) THEN
              SKE(1,2)=-1.D0
              SKE(2,1)=0.D0
              SKE(2,2)=0.D0
            ELSE
              SKE(2,1)=-1.D0
              SKE(1,1)=0.D0
              SKE(1,2)=0.D0
            ENDIF   
          ENDIF
  420   CONTINUE 
        GO TO 149
      ENDIF
       
   66 CONTINUE       
C
C      IF(IDIFUSE.EQ.0.AND.IHEAT.EQ.0) GO TO 149
      DCDX = 0.D0
      AKX  = DARCYDIFD(NLM1)
      AKP  = 0.D0
      VELL = 0.D0
      IF(ICONV.EQ.0) THEN
        AKP=0.D0
      ELSE
        VELL=AK*(TT3(3)-TT3(4))/(ELL*AREA)
      ENDIF          
C     
CE    GAUSS POINTS  LOOP
C
      DO 100 NGX=1,NGAU1X
      JR=NREF(NGAU1X) + NGX
      R = XG(JR)
      WT=WGT(JR)
      CALL JACT1(R,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
      RAD=1.
      IF(INDAX.EQ.0) GO TO 281
      RAD=0.
      DO 282 I=1,NCV1
  282 RAD=RAD+H1(I)*CK1(I,1)
CE    VELOCITIES CALCULATION
  281 IF (INDVEL .EQ. 1) THEN
      VX = 0.0
      DO 304 NV=1,NCV1
      KK=NEL(NLM1,NV)
      KK = LF +KK-1
      VX=VX-PJ1(1,NV)*A(KK)
  304 CONTINUE
      WRITE (3,9990) NGX, VX
 9990 FORMAT ('   NG(',I1,')     VX = ',F12.6)
      GO TO 100
      ENDIF
C
CE  TEMPERATURE AT GAUSS POINT
C
      TEMP=0. 
      if(IDARCY.EQ.0.OR.IHEAT.EQ.1) THEN
         DO 65 I=1,NCV1
   65    TEMP=TEMP+H1(I)*TT3(NCV1+I)
      ENDIF
C
      IF(IDARCY.NE.0.AND.IHEAT.EQ.0) GO TO 81
      IF(IPASSME.EQ.2) GO TO 81
C
      IF(NSTAC.EQ.0.OR.KONC.EQ.0) GO TO 70
      IF(NTACV(MAT1D).EQ.0) GO TO 67
      CALL TABF(A(LTABC),A(LNTACV),MAT1D,NMATT,TEMP,CC1,NTA,IND)
      IF(IND.EQ.0) GO TO 70
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) MAT1D,TEMP
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) MAT1D,TEMP
 2005 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA SPEC. TOPLOTA - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6005 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SPECIFIC HEAT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
   67 CALL ANALCF(MAT1D,TEMP,CC1,A(LGUSM))
   70 CONTINUE
      IF(IHEAT.EQ.1) THEN
         call tabdiff(MATERH,AMATFRO,MAT1D,TEMPa,RRO,IND1)
         call tabdiff(MATERH,AMATFSH,MAT1D,TEMPa,CC1,IND2)
         call tabdiff(MATERH,AMATFK,MAT1D,TEMPa,AKX,IND3)
         IF(IND1.GT.0.OR.IND2.GT.0.OR.IND3.GT.0) GO TO 182
         CC1=RRO*CC1
         go to 80
      ENDIF
      if(indiffus.EQ.1) then
	  tempa=dabs(temp)
        call tabdiff(MATERP,AMATF,MAT1D,TEMPa,ddifus,IND)
	  akx=ddifus
	  IF(IND.GT.0) GO TO 182
	  IF(IANIZ.NE.0) AKX=AKX*FAX      
	  go to 80
	endif
      IF(KONK.EQ.0) GO TO 80
      IF(IBX.EQ.0) GO TO 77
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,TEMP,AKX,NTA,IND)
      IF(IANIZ.EQ.0) GO TO 182
      AKX=AKX*FAX
  182 IF(IND.EQ.0) GO TO 80
      IF(ISRPS.EQ.0)
     *WRITE(3,2001)  MAT1D,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6001)  MAT1D,TEMP
 2001 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. PROVODJENJA - TOPL.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6001 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'DIFFUSION COEFICIENT - CONCENTRATION,  NO. =',I5/
     11X,'CONCENTRARION,  CONC =',1PD12.4/
     21X,'S T O P'//' CHECK: INPUT DATA FOR DIFFUSION COEFFICIENT'/
     38X,'AND BOUNDARY CONDITIONS FOR INLET AND OUTLET RESERVOIRS')
C
      STOP
   77 CALL ANALKF(MAT1D,TEMP,AKX,AKY,AKZ,A(LTOPM),A(LTMNM))
      IF(IANIZ.EQ.0) GO TO 80
      AKX=AKX*FAX
   80 CONTINUE
      IF(IZIP.NE.2.OR.MAXTQE.EQ.1) GO TO 81
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,TEMP,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 81
      IF(ISRPS.EQ.0)
     *WRITE(3,2011) IQE1,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6011) IQE1,TEMP
 2011 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPLOTNOG IZVORA (PONORA)   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6011 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
CE  ELEMENT MATRICES
   81 WDT=WT*DET1*RAD*AREA
      IF(IDARCY.NE.0.OR.IPASSME.EQ.2) GO TO 400
      K=0
      DO 85 I=1,NCV1
      DO 83 J=I,NCV1
      K=K+1
      IF(NSTAC.EQ.0) GO TO 87
      HH1= H1(I)*H1(J)*WDT
      EL(K)=EL(K)+CC1*HH1
   87 IF(INDSK.EQ.0) GO TO 83
      PJX=PJ1(1,I)*PJ1(1,J)
      HP(K) = HP(K) +(AKX*PJX)*WDT   
   83 CONTINUE
      IF(IQE1.EQ.0) GO TO 85
CE  CALCULATION OF RIGHT-SIDE VECTOR
      F3(I)=F3(I)+H1(I)*WDT*QQ1
   85 CONTINUE
c     IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
      IF(LINTE.EQ.0) GO TO 100
C     IF(LINTE.EQ.0) GO TO 100
      TBK(1)=0.
      itestdarcy=0
      if(itestdarcy.eq.0) then
         DO 151 I=1,NCV1
  151    TBK(1)=TBK(1)+PJ1(1,I)*TT3(I)
      else
         DO I=1,NCV1
           TBK(1)=TBK(1)+PJ1(1,I)*TT3(I+ncv1)
         enddo
      endif
      TBK(1)=TBK(1)*AKX
      DO 152 I=1,NCV1
  152 F3(I)=F3(I)-PJ1(1,I)*TBK(1)*WDT
      GO TO 100
C
C     DEO KOJI URADJEN ZA ELEMENT CEVI (IDARCY.NE.0)
C
  400 CONTINUE
      AKTW = CC1*AKTT*WDT
      AKDW = AKX*WDT
      AKVW = VELL*WDT
      DO 405 I=1,NCV1
      DO 405 J=1,NCV1
        SKEM(I,J) = SKEM(I,J)+H1(I)*H1(J)*AKTW
        SKED(I,J) = SKED(I,J)+(PJ1(1,I)*AKDW+H1(I)*AKVW)*PJ1(1,J)
  405 CONTINUE
 
  100 CONTINUE
C---- KRAJ PETLJE PO GAUSOVIM TACKAMA
C

C ----PAKOVANJE U SKE I DESNA STRANA ZA ELEMENT CEVI
C
      IF(IDARCY.EQ.0) GO TO 450 
C
      DO 430 I=1,2
      DO 430 J=1,2
         SKE(I,J)=SKE(I,J)+SKEM(I,J)+SKED(I,J)
C         SKE(II,J)=SKE(II,J)+SKEP(I,J)
         F3(I)=F3(I)-SKEM(I,J)*(TT3(J)-TT30(J))-SKED(I,J)*TT3(J)
c     1          -SKEP(I,J)*TT3(J)
  430 CONTINUE
      GO TO 149
C------------------   KRAJ ZA CEV  ------------------    
  450 CONTINUE
      IF (INDVEL .EQ. 1) GO TO 200
      IF(NSTAC.EQ.0) GO TO 253
      DO 105 I=1,MEL1D
  105 EL(I)=EL(I)/DT
  253 IF(INDSK.EQ.0) GO TO 140
      DO 115 I=1,MEL1D
  115 HP(I)=HP(I)+EL(I)
CE  CORECTION OF RIGHT-SIDE VECTOR AFTER FIRST PASS
  140 K=0
      DO 121 I=1,NCV1
      DO 121 J=I,NCV1
      K=K+1
      SKE(I,J)=EL(K)
  121 SKE(J,I)=SKE(I,J)
      IF(LINTE.EQ.0) GO TO 123
      DO 122 I=1,NCV1
      IF(LM1(I).EQ.0) GO TO 122
      DO 124 J=1,NCV1
      IF(LM1(J).EQ.0) GO TO 124
      F3(I)=F3(I)-SKE(I,J)*TT32(J)
  124 CONTINUE
  122 CONTINUE
  123 IF(LINTE.EQ.1) GO TO 141
      DO 132 I=1,NCV1
      IF(LM1(I).EQ.0) GO TO 132
      DO 134 J=1,NCV1
      IF(LM1(J).EQ.0) GO TO 134
      F3(I)=F3(I)+SKE(I,J)*TT30(J)
  134 CONTINUE
  132 CONTINUE
  141 CONTINUE

  149 CONTINUE
c
      IF(INDFLUX.EQ.1) GO TO 137
C
      IF(NHP.EQ.0.AND.NTOK.EQ.0.AND.NQP.EQ.0.AND.NHR.EQ.0) GO TO 135
CE    INTEGRALS OVER BORDER POINTS OF ELEMENT
      CALL INTAB1(A(LNG1D),A(LNELG1),A(LNEL1D),A(LNTAHP),A(LHP1),A(LHK1)
     1,A(LSKE1),A(LNTAHR),A(LHR1),A(LFOHR))
CE    INSERTING MATRIX HP AND VECTOR F3 INTO SYSTEM
  135 CONTINUE    
C
      NDIM=2
      IF(IMUMPS.EQ.0) THEN
        IF(ISYMM.EQ.1)THEN
           CALL MATSTE (A(LSK),A(LMAXA),A(LF),HP,F3,LM1,NDES,INDSK)
        ELSE
           CALL ADDSTF(A(LALEVO),A(LSILE),A(LDESNO),SKE,F3,A(LMAXA),
     1                   LM1D,NDES,1)
        ENDIF
      ELSE
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,LM1D,NDES)
#else
        CALL sparseassembler_addelemmatrix(NDES,LM1D,SKE)
#endif
        CALL SPAKDE (A(LFORCE),F3,LM1D,NDES,JEDN)  
      ENDIF    
C
  137 CONTINUE 
  200 CONTINUE
C     
      RETURN
      END
C=====================================================================
C
C===================================================================== 
      SUBROUTINE CAP1DFICTSMEMULT(IDT,IDTV,F,TT1,TT10,TT1CM,TT01CM,
     1           VOLFRACTV,VFMULTIT,DIAMSMEV,THICKSMEV,DWALLSMEV,
     2           IPARTNODEV,PARTNODEV,VOLSMEV,IWALLCAPCC,WALLCAPCC,
     3           IPARTCC,PARTCC,IDLYMPHH,IDLYMPHC,RVLYMPH,HCOEFLYNODW,
     4           CCOEFLYNODW,DCOEFLYNOD,IACTIVECELL,NDIMCELL,
     5           NDIMWCAPMAX,CONCSYS,CONCSYS0,NDIMPMAX,KOR,ITER,JEDN,DT,
     6           NPT,NC,INDFLUX,NDIMID,MULTITIS,MULTIMOL,MM)   
      
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     FICTITIOUS 1D ELEMENTS CONNECTING CAPILLARY AND TISSUE
C
      COMMON/CSMEARED/ISMEARED,VOLFRACT,POROSSME,LVOLFRACTV,LDWALLSMEV,
     1 LPWALLSMEV,LDIAMSMEV,LTHICKSMEV,IPARTSME,LVOLSMEV,IRAVSME,DRAVSME
      COMMON/CLYMPH/INDLYMPH,INDLYMPHH,INDLYMPHC,LRVLYMPH,LPLYMHV,
     1 LCLYMHV,TABLYHW(10),TABLYCW(10,10),TABLYD(10),TENSORLYP(10,6),
     2 TENSORLYC(10,10,6),ITABLYP,ITABLYC,ITABLYD,LHCOEFLYNOD,
     3 LHCOEFLYNODW,LCCOEFLYNOD,LCCOEFLYNODW,LDCOEFLYNOD,LIDLYMPHH,
     4 LIDLYMPHC 
C
      DIMENSION IDT(NDIMID,NPT),IDTV(MULTIMOL,NDIMID,NPT),F(JEDN),
     1          TT1(JEDN),TT10(JEDN),TT1CM(MULTIMOL,JEDN),
     2          TT01CM(MULTIMOL,JEDN),VOLFRACTV(NPT),
     3          VFMULTIT(NDIMCELL,NPT),DIAMSMEV(NPT),
     3          THICKSMEV(NPT),DWALLSMEV(MULTIMOL,NPT),
     4          IPARTNODEV(MULTIMOL,NDIMPMAX,NPT),
     5          PARTNODEV(MULTIMOL,NDIMPMAX,NPT),VOLSMEV(NPT),
     6          IACTIVECELL(4) 
      DIMENSION IDLYMPHH(NPT),IDLYMPHC(MULTIMOL,NPT),RVLYMPH(NPT),
     1          HCOEFLYNODW(NPT),CCOEFLYNODW(MULTIMOL,NPT),
     2          DCOEFLYNOD(NPT)
C     
      DIMENSION SKE(2,2),F3(2),T11(2),EM(2,2),T110(2),LM(2)
C
      NE1D=1
      NN1=4
      DMASS=0.D0
      DT3=3.*DT
      DT6=6.*DT
      IF(MULTIMOL.EQ.1) THEN
         II=IDT(2,NC)
         IF(IPASSME.EQ.2) II=IDT(4,NC)
      ELSE
         II=IDTV(MM,2,NC)
         IF(IPASSME.EQ.2)II=IDTV(MM,4,NC)
      ENDIF 
      IF(II.LE.0) THEN
        IF(INDLYMPH.EQ.0) THEN
           RETURN
        ELSE
           GO TO 300 
        ENDIF
      ENDIF             
C
      DMASS=0.D0
      DT3=3.*DT
      DT6=6.*DT
      DO 200 NLM1= 1,NE1D 
C
      DO I = 1,2
         LM(I)=0
         F3(I)=0.D0
         T11(I)=0.D0
         T110(I)=0.D0
      ENDDO
C
      T11(1) = CONCSYS
      T110(1) = CONCSYS0
C
      NODE2=NC
      LM(2)=II
      IF(MULTIMOL.EQ.1) THEN
         T11(2)=TT1(II)
         T110(2)=TT10(II)
      ELSE
         T11(2)=TT1CM(MM,II)
         T110(2)=TT01CM(MM,II)
      ENDIF
C
      NNPART=0
      IP1=0
      IP2=0
      PP1=0.D0
      PP2=0.D0
      IF(NDIMPMAX.EQ.0)THEN
          IF(IPARTCC.NE.0) THEN
            IP1=1
            PP1=PARTCC
          ENDIF
      ELSE
         KK=2
         IF(IPARTNODEV(MM,1,NC).EQ.0)KK=1
         IF(IPARTNODEV(MM,KK,NC).GT.0) THEN
             IP1=1
             PP1=PARTNODEV(MM,KK,NC)
         ENDIF     
      ENDIF
      IF(IP1.EQ.1) THEN
         NNPART=1
         T11(1)=T11(1)*PP1
      ENDIF
C
      IF(NDIMWCAPMAX.EQ.0.AND.IWALLCAPCC.NE.3) THEN
         DDIFUS=WALLCAPCC
      ELSE
         DDIFUS=DWALLSMEV(MM,NC)
      ENDIF
         
      VOLI   = VOLSMEV(NC)
      DIAM   = DIAMSMEV(NC)
      THICKA = THICKSMEV(NC)
      VOLCELL= 0.D0
      DO KK=1,NDIMCELL
         VOLCELL=VOLCELL+VFMULTIT(KK,NC)
      ENDDO
      VOLF = VOLFRACTV(NC)*(1.-VOLCELL)
C     
      IF(IRAVSME.EQ.1) THEN
        ACAPI = DRAVSME*VOLF*VOLI
      ELSE
        ACAPI=4.*VOLF*VOLI/DIAM
      ENDIF
C      
      AK=ACAPI*DDIFUS
      SKE(1,1)=AK
      SKE(2,2)=AK
      SKE(1,2)=-AK
      SKE(2,1)=-AK
      EMC=ACAPI*THICKA
      EMC=0.D0
      EM(1,1)=EMC/DT3
      EM(1,2)=EMC/DT6
      EM(2,2)=EM(1,1)
      EM(2,1)=EM(1,2)
      DO 2 I=1,2
         DO 2 J=1,2  
         SKE(I,J)=SKE(I,J)+EM(I,J)
    2 CONTINUE
      DO 5 I=1,2
         DO 5 J=1,2
         F3(I)=F3(I)-SKE(I,J)*T11(J)+EM(I,J)*T110(J)
    5 CONTINUE
      IF(NNPART.EQ.1.AND.INDFLUX.EQ.0) THEN
        IF(IP1.EQ.1) THEN
           SKE(1,1)=SKE(1,1)*PP1
           SKE(2,1)=SKE(2,1)*PP1
        ENDIF
        IF(IP2.EQ.1) THEN
           SKE(1,2)=SKE(1,2)*PP2
           SKE(2,2)=SKE(2,2)*PP2
        ENDIF
      ENDIF
C
      IF(INDFLUX.EQ.1) THEN
         DMASS=DMASS+F3(2)
         GO TO 200
      ENDIF
C
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
          CALL sparseassembler_addelemmatrix(NN1,LM,SKE)
#endif
          CALL SPAKDE(F,F3,LM,NN1,JEDN)
C     
  200 CONTINUE
C
      IF(INDFLUX.EQ.1) THEN
         AMASSCAP=AMASSCAP+DMASS*DT
      ENDIF        
C
      IF(INDLYMPH.EQ.0) RETURN
C           
  300 CONTINUE 
C     TRANSPORT THROUGH WALLS OF LYMPHATIC SYSTEM
      DMASS=0.D0
      DO 400 NLM1= 1,NE1D 
C
      DO 420 I = 1,2
         LM(I)=0
         F3(I)=0.D0
         T11(I)=0.D0
         T110(I)=0.D0
  420 CONTINUE
C
      I1=II
      LM(1)=I1
      IF(I1.GT.0)T11(I1)=TT1(I1)
      VOLI=VOLSMEV(NC)
      VOLF=RVLYMPH(NC)
      THICKA=0.D0
      IF(ITABLYD.EQ.1) THEN
         DIAM=TABLYD(NC)
      ELSE
         DIAM=DCOEFLYNOD(NC)
      ENDIF      
      IF(IPASSME.EQ.1) THEN
         I2=IDLYMPHH(NC)
         IF(I2.GT.0) THEN 
C             T11(2)=TT1P(I2)
C             T110(2)=TT10P(I2)
             CONTINUE
         ENDIF
         IF(ITABLYP.EQ.0) THEN
             DDIFUS=TABLYHW(1)
         ELSE
             DDIFUS=HCOEFLYNODW(NC)
         ENDIF             
      ELSE
         I2=IDLYMPHC(MM,NC)
         IF(I2.GT.0) THEN 
             T11(2)=TT1(I2)
             T110(2)=TT10(I2)
             CONTINUE
         ENDIF
         IF(ITABLYC.EQ.1) THEN
            DDIFUS=TABLYCW(1,1)
         ELSE
            DDIFUS=CCOEFLYNODW(MM,NC)
         ENDIF
      ENDIF  
      NODE2=NC
      LM(2)=I2
C
      NNPART=0
      IP1=0
      IP2=0
      PP1=0.D0
      PP2=0.D0
      IPART=0
C      IF(NDIMPMAX.EQ.0)THEN
C          IF(IPARTCC.NE.0) THEN
C            IP1=1
C            PP1=PARTCC
C          ENDIF
C      ELSE
C         KK=2
C         IF(IPARTNODEV(MM,1,NC).EQ.0)KK=1
C         IF(IPARTNODEV(MM,KK,NC).GT.0) THEN
C             IP1=1
C             PP1=PARTNODEV(MM,KK,NC)
C         ENDIF     
C      ENDIF
C     
      IF(IRAVSME.EQ.1) THEN
        ACAPI = DRAVSME*VOLF*VOLI
      ELSE
        ACAPI=4.*VOLF*VOLI/DIAM
      ENDIF
C        
      AK=ACAPI*DDIFUS
      SKE(1,1)=AK
      SKE(2,2)=AK
      SKE(1,2)=-AK
      SKE(2,1)=-AK
      EMC=ACAPI*THICKA
      EMC=0.D0
      EM(1,1)=EMC/DT3
      EM(1,2)=EMC/DT6
      EM(2,2)=EM(1,1)
      EM(2,1)=EM(1,2)
      DO 42 I=1,2
         DO 42 J=1,2  
         SKE(I,J)=SKE(I,J)+EM(I,J)
   42 CONTINUE
      DO 45 I=1,2
         DO 45 J=1,2
         F3(I)=F3(I)-SKE(I,J)*T11(J)+EM(I,J)*T110(J)
   45 CONTINUE
C     EXCLUDED PARTITIONING FOR LYMPHATIC WALLS
C      IF(NNPART.EQ.1.AND.INDFLUX.EQ.0) THEN
C        IF(IP1.EQ.1) THEN
C           SKE(1,1)=SKE(1,1)*PP1
C           SKE(1,2)=SKE(1,2)*PP1
C        ENDIF
C        IF(IP2.EQ.1) THEN
C           SKE(2,1)=SKE(2,1)*PP2
C           SKE(2,2)=SKE(2,2)*PP2
C        ENDIF
C      ENDIF
C
      IF(INDFLUX.EQ.1) THEN
         DMASS=DMASS+F3(2)
         GO TO 400
      ENDIF
C
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
          CALL sparseassembler_addelemmatrix(NN1,LM,SKE)
#endif
          CALL SPAKDE(F,F3,LM,NN1,JEDN)
C     
  400 CONTINUE
C      IF(INDFLUX.EQ.1) THEN
C         AMASSLY=AMASSLY+DMASS*DT
C      ENDIF 
      RETURN
      END
C=====================================================================
C           
C=====================================================================
      SUBROUTINE CELL1DFICTSMEMULT(IDT,IDTV,IDTVCELL,IPIPENODV,F,TT1P,
     1  TT10P,
     1  TT1C,TT10C,TT1PM,TT01PM,TT1CM,TT01CM,VOLFRACTV,VFMULTIT,
     2  DIAMSMEV,THICKSMEV,DWALLSMEV,DWALLCELLV,VOLSMEV,DIAMCELLV,
     3  WALLAREAV,HYDRCOEFV,IPARTNODEV,PARTNODEV,IACTIVENODEV,
     4  ACTIVENODEV,IADHESINODEV,ADHESINODEV,ADHICONCV,NZADJ,ZADATA1,
     5  ZADATA0,NZADNODF,ZADATM1,ZADATM0,IACTIVE,ICMTABLEC,HYDROCOEFC,
     6  KOR,ITER,JEDNPRES,JEDNCONC,JEDN,DT,NPT,NC,INDFLUX,ICONV,
     7  INDIFFUS,NZADP,NDIMIDT,NDIMCELL,NDIMPMAX,NDIMWCAPMAX,IWALLCAPCC,
     8  WALLCAPCC,NDIMWCELLMAX,NDIMAMAX,NDIMADHMAX,IADHIMAX,NZADPMAX,
     9  IDD1,IDD2,IPASSME,MULTITIS,MULTIMOL,MM)
                              
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)    
C
C     FICTITIOUS 1D ELEMENTS CONNECTING CAPILLARY AND TISSUE
C
      COMMON/CSMEARED/ISMEARED,VOLFRACT,POROSSME,LVOLFRACTV,LDWALLSMEV,
     1 LPWALLSMEV,LDIAMSMEV,LTHICKSMEV,IPARTSME,LVOLSMEV,IRAVSME,DRAVSME
     
      COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
C
      DIMENSION IDT(NDIMIDT,NPT),IDTV(MULTIMOL,NDIMIDT,NPT),
     1  IDTVCELL(MULTIMOL,NDIMCELL,NPT),IPIPENODV(NPT),F(JEDN),
     2  TT1P(JEDNPRES),TT10P(JEDNPRES),TT1C(JEDNCONC),TT10C(JEDNCONC),
     2  TT1PM(MULTIMOL,JEDNPRES),TT01PM(MULTIMOL,JEDNPRES),
     3  TT1CM(MULTIMOL,JEDNCONC),TT01CM(MULTIMOL,JEDNCONC),
     4  VOLFRACTV(NPT),VFMULTIT(NDIMCELL,NPT),DIAMSMEV(NPT),
     5  THICKSMEV(NPT),DWALLSMEV(MULTIMOL,NPT),
     6  DWALLCELLV(MULTIMOL,NDIMCELL,NPT),VOLSMEV(NPT),
     7  DIAMCELLV(NDIMCELL,NPT),WALLAREAV(NPT),HYDRCOEFV(NPT),
     7  IPARTNODEV(MULTIMOL,NDIMPMAX,NPT),
     8  PARTNODEV(MULTIMOL,NDIMPMAX,NPT),
     8  IACTIVENODEV(MULTIMOL,NDIMAMAX,NPT),
     9  ACTIVENODEV(MULTIMOL,NDIMAMAX,NPT),
     1  IADHESINODEV(MULTIMOL,NDIMADHMAX,NPT),   
     1  ADHESINODEV(MULTIMOL,NDIMADHMAX,NPT),
     2  ADHICONCV(MULTIMOL,IADHIMAX,NPT),
     1  NZADJ(3,NZADP),ZADATA1(NZADP),ZADATA0(NZADP),
     2  NZADNODF(MULTIMOL,3,NZADPMAX),ZADATM1(MULTIMOL,NZADPMAX),
     3  ZADATM0(MULTIMOL,NZADPMAX),IACTIVE(4) 
     
      DIMENSION SKE(2,2),F3(2),T11(2),EM(2,2),T110(2),PV(2),
     1          LM(2)  
C      
      IF(IPASSME.EQ.1.OR.NDIMCELL.EQ.0) RETURN
C----------------------------------------------------------
C     CONNECTIVITY ELEMENTS FOR CELLS
C------------------------------------------------------------ 
      NN1=2
C
      IF(MULTIMOL.EQ.1) THEN                     
         JJ1=IDT(4,NC)
      ELSE
         JJ1=IDTV(MM,4,NC)
      ENDIF  
      LM(1)=JJ1        
      DO 300 ID=1,NDIMCELL 
      JJ2=IDTVCELL(MM,ID,NC)
      LM(2)=JJ2
      IF(JJ1.EQ.0.AND.JJ2.EQ.0) GO TO 300
C
      DO I = 1,2
         F3(I)=0.D0
         T11(I)=0.D0
         T110(I)=0.D0
      ENDDO
      DO 223 I=1,2
         IF(LM(I).GT.0) THEN
             IF(MULTIMOL.EQ.1) THEN
                 T11(I)=TT1C(LM(I))
                 T110(I)=TT10C(LM(I))
             ELSE
                T11(I)=TT1CM(MM,LM(I))
                T110(I)=TT01CM(MM,LM(I))
             ENDIF    
         ELSE IF(LM(I).EQ.0) THEN
            IF(MULTIMOL.GT.1) GO TO 224
            DO J=1,NZADP
              IF(NZADJ(1,J).EQ.NC) THEN
                 IF(NZADJ(2,J).EQ.ID) THEN 
                     T11(I) =ZADATA1(J)
                     T110(I)=ZADATA0(J)
                     GO TO 223
                 ENDIF                      
              ENDIF        
           ENDDO
           GO TO 223
  224      CONTINUE
C
C          MULTIMOLAR CASE
C
           DO J=1,NZADP  
             IF(NZADNODF(MM,1,J).EQ.NC) THEN
                IF(NZADNODF(MM,2,J).EQ.ID)THEN
                   T11(I) =ZADATM1(MM,J)
                   T110(I)=ZADATM0(MM,J)
                   GO TO 223
                ENDIF                      
            ENDIF        
          ENDDO
        ENDIF
  223 CONTINUE
 
      NNPART=0
      IP1=0
      IP2=0
      PP1=0.D0
      PP2=0.D0
      IF(IPARTC(2+ID,MM).GT.0) THEN
         IF(NDIMPMAX.EQ.0) THEN 
             NNPART=1
             IP1=1
             PP1=PARTC(2+ID,MM)
         ELSE
             KK=0
             DO I=3,2+ID 
                IF(IPARTC(I,MM).EQ.3)KK=KK+1                 
             ENDDO
             IF(KK.GT.0) THEN
                NPARTN=IPARTNODEV(MM,KK,NC)   
                IF(NPARTN.EQ.1) THEN
                   NNPART=1
                   IP1=1
                   PP1=PARTNODEV(MM,KK,NC) 
                ENDIF        
             ENDIF 
          ENDIF
          IF(NNPART.EQ.1)T11(1)=T11(1)*PP1
      ENDIF   
      IF(NDIMWCELLMAX.EQ.0) THEN
         DDIFUS=WALLCELLC(ID,MM)
      ELSE 
         KK=0
         DO I=1,ID
            IF(IWALLCELLC(I,MM).EQ.3)KK=KK+1
         ENDDO 
         DDIFUS=DWALLCELLV(MM,KK,NC)
      ENDIF 
      SKE(1,1)=0.D0
      SKE(1,2)=0.D0
      SKE(2,1)=0.D0
      SKE(2,2)=0.D0 
      AREACOEF=6./DIAMCELLV(ID,NC)              
      AREA=AREACOEF*VFMULTIT(ID,NC)*VOLSMEV(NC)
      IF(IACTIVEC(ID,MM).GT.0) THEN 
         AAIN=0.D0
         AAOUT=0.D0    
         IF(IACTIVEC(ID,MM).NE.3) THEN
            AAIN=ACTIVEC(1,ID,MM)
            AAOUT=ACTIVEC(2,ID,MM)
         ELSE
            KK=0
            DO I=1,ID
              IF(IACTIVEC(I,MM).EQ.3)KK=KK+1    
            ENDDO
            IF(KK.GT.0) THEN
                 IF(IACTIVENODEV(MM,KK,NC).GT.0) THEN
                    AAIN=ACTIVENODEV(MM,KK,NC)
                    AAOUT=ACTIVENODEV(MM,KK+1,NC)
                 ENDIF  
            ENDIF          
         ENDIF
         SKE(1,1)=AAIN*AREA
         SKE(2,2)=AAOUT*AREA
         SKE(1,2)=-SKE(2,2) 
         SKE(2,1)=-SKE(1,1)     
      ENDIF
      AK=AREA*DDIFUS
      EMC=WALLAREAV(NC)*THICKSMEV(NPT)
      EMC=0.D0
      EM(1,1)=EMC/DT3
      EM(1,2)=EMC/DT6     
      EM(2,2)=EM(1,1)
      EM(2,1)=EM(1,2) 
      AKV=0.D0      
      SKE(1,1)=SKE(1,1)+AK-AKV
      SKE(2,2)=SKE(2,2)+AK+AKV
      SKE(1,2)=SKE(1,2)-AK+AKV
      SKE(2,1)=SKE(2,1)-AK-AKV
      DO I=1,2
         DO  J=1,2  
           SKE(I,J)=SKE(I,J)+EM(I,J)
         ENDDO
      ENDDO
C
C     CORRECTION DUE TO ADHESION
C
      AADHES11DT=0.D0
      IF(IADHIMAX.GT.0.AND.IPASSME.EQ.2) THEN
         AADHES11=0.D0
         AADHES22=0.D0
         ID2=2+ID
         IF(NDIMADHMAX.EQ.0.OR.IADHISEC(ID2,MM).NE.3) THEN
            IF(IADHISEC(ID2,MM).GT.0) THEN
               AADHES11=ADHISEC(1,ID2,MM)
               AADHES22=ADHISEC(2,ID2,MM)
            ENDIF 
         ELSE
            KK=0
            DO I=1,ID2
               IF(IADHISEC(I,MM).EQ.3)KK=KK+1
            ENDDO
            NADHIS1=IADHESINODEV(MM,KK,NC)
            IF(NADHIS1.GT.0) THEN
               AADHES11=ADHESINODEV(MM,KK,NC)
               AADHES22=ADHESINODEV(MM,KK+1,NC)
            ENDIF
         ENDIF
         KK=0
         DO K=1,ID2
            IF(IADHISEC(K,MM).GT.0)KK=KK+1
         ENDDO
         AADHES11DT=AADHES11*DT
         AADHES22DT=AADHES22*DT
         ADHDTT=ADHICONCV(MM,KK,NC)
         DADHESC=AADHES11DT*T11(1)-AADHES22DT*ADHICONCV(MM,KK,NC)
         ADHICONCV(MM,KK,NC)=ADHICONCV(MM,KK,NC)+DADHESC
         IF(ADHICONCV(MM,KK,NC).LT.0.D0) THEN
            DADHESC=-ADHDTT
            ADHICONCV(MM,KK,NC)=0.D0
         ENDIF          
         T11(1)=T11(1)-DADHESC
      ENDIF 
      DO I=1,2
         DO J=1,2
           F3(I)=F3(I)-SKE(I,J)*T11(J)+EM(I,J)*T110(J)
         ENDDO
      ENDDO 
      
      SKE(1,1)=SKE(1,1)+AADHES11DT
C      SKE(2,2)=SKE(2,2)+AADHES11DT     
C 
      IF(NNPART.EQ.1.AND.INDFLUX.EQ.0) THEN
        IF(IP1.EQ.1) THEN
           SKE(1,1)=SKE(1,1)*PP1
           SKE(2,1)=SKE(2,1)*PP1
        ENDIF
        IF(IP2.EQ.1) THEN
           SKE(1,2)=SKE(1,2)*PP2
           SKE(2,2)=SKE(2,2)*PP2
        ENDIF
      ENDIF
C
      IF(INDFLUX.EQ.1.AND.IPASSME.EQ.2) THEN
         DMASS=DMASS+F3(2)
         GO TO 300
      ENDIF
C
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
          CALL sparseassembler_addelemmatrix(NN1,LM,SKE)
#endif
          CALL SPAKDE(F,F3,LM,NN1,JEDN)
  300 CONTINUE  
C
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE FUNCT22(AA,IFF,NFMAX,NTMX,NPT,XX,YY,IND)
C
C     VALUE YY OF MULTILIEAR FUNCTION FUNCTION AA(NFMAX,2,NTMX) FOR ARDUMENT XX  
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      DIMENSION AA(NFMAX,2,NTMX)
C
      IND=0
C     FUNCTION CONSTANT 
      IF(NPT.LE.1) THEN
         YY=AA(IFF,2,1)
         RETURN
      ENDIF     
CE    MULTILINEAR CURVE
      DO 50 i=2,NPT
         i1=i-1
         IF(XX.GE.AA(IFF,1,i1).AND.XX.LT.AA(IFF,1,i)) GO TO 20
         GO TO 50
   20    YY=AA(IFF,2,i1)+(AA(IFF,2,i)-AA(IFF,2,i1))/
     1      (AA(IFF,1,i)-AA(IFF,1,i1))*(XX-AA(IFF,1,i1))
         GO TO 100
   50 CONTINUE 
      IND=1
C   
  100 CONTINUE 
C
      RETURN
      END 
C=====================================================================
C
C=====================================================================  