#define MUMPS_CLUSTER FALSE
C=======================================================================
C=======================================================================
      SUBROUTINE UL2DGL
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*130 ACOZ
CE    MAIN PROGRAM TO READ 2D ISOPARAM. ELEMENT INPUT DATA
      COMMON A(17000)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA2/ LNEL2D,LMAT2D,LNQ2D,LITG2D,LIP2CV,LNG2D,LNELG2,
     1LEL2,LHP2,LHK2,LSKE2,LDEL2,LDEHP2,LDEHK2,LTHI2D,LHR2
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /SRPSKI/ ISRPS
	common/elemmodels/modelel(20),ngele 
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ 
      COMMON/DARCYEQ/ ELDARCYX,ELDARCYY,ELDARCYZ,VDARCY,PINLET,
     1       DARCYX,JEDNDARCY,ISOLVER,IDARCY,LDARCYD,LDARCYMI,
     2       LIDARCYMA,NPTINDARCY
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON/MAINIDT/NDIMIDT  
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10) 
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
      COMMON/CSMEARED/ISMEARED,VOLFRACT,POROSSME,LVOLFRACTV,LDWALLSMEV,
     1 LPWALLSMEV,LDIAMSMEV,LTHICKSME,IPARTSME,LVOLSMEV,IRAVSME,DRAVSME
CE     BASIC ELEMENT DATA
C
      CALL ISPITA(ACOZ)
      if(indiffus.eq.0.AND.IDARCY.EQ.0.AND.ISMEARED.EQ.0) then
         IF(INDFOR.EQ.1)
     1   READ(1,*) NMAT2D,MAT2D,NP2DMX,IPR2DC,IPTG2,NGAU2X,NGAU2Y,NTHIC,
     2   THIC
         IF(INDFOR.EQ.2)
     1   READ(ACOZ,1100) NMAT2D,MAT2D,NP2DMX,IPR2DC,IPTG2,NGAU2X,NGAU2Y,
     1   NTHIC,THIC
     	else
        IF(INDFOR.EQ.1)
     1   READ(1,*) MAT2Dd,NP2DMX,IPR2DC,IPTG2,NGAU2X,NGAU2Y,NTHIC,
     2   THIC
         IF(INDFOR.EQ.2)
     1   READ(ACOZ,1111) MAT2DCONV,MAT2DdIF,NP2DMX,IPR2DC,IPTG2,NGAU2X,
     2                   NGAU2Y,NTHIC,THIC
      ENDIF
      
 1100 FORMAT(8I5,F10.3)
 1110 FORMAT(I5,5X,6I5,F10.3)
 1111 FORMAT(8I5,F10.3)
 	if(MAT2Dd.eq.0)MAT2Dd=1
	nmat2d=1
      mat2d=1
      NELEDAT(NGELE,5)=MAT2DCONV
      NELEDAT(NGELE,6)=MAT2DdIF
 1000 FORMAT(10I5)
 1010 FORMAT(I5,5X,10I5)
c
!      IF((MAT2DCONV.GT.NMATTCONV).OR.
!     1   (IHEAT.EQ.0.AND.MAT2DdIF.GT.NMATTDIF).OR.
!     1   (IHEAT.EQ.1.AND.MAT2DdIF.GT.NMATTHEAT)) THEN
!     WRITE(3,6330) nmat2d,nmatt
! 6330 FORMAT(/' E R R O R'/
!     1  'MATERIAL NUMBER IS GREATER THAN THE TOTAL NUMBER OF MATERIALS'/
!     2  '   MATERIAL NUMBER FOR 2D ELEMENTS, MAT2DCONV,MAT2DdIF,',
!     3  'NMATTHEAT =',3I5/
!	3  '   TOTAL NUMBER OF MATERIALS, NMATTCONV,NMATTDIF,NMATTHEAT=',3I5/
!	4  '   S T O P')
!	  STOP
!	endif
      IF(NP2DMX.EQ.0) NP2DMX=4
      IF(NGAU2X.EQ.0) NGAU2X=2
      IF(NGAU2Y.EQ.0) NGAU2Y=2
      IF(NTHIC.EQ.0.AND.DABS(THIC).LT.1.D-10) THIC=1.
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
         CALL WBROJK(KARTIC,0)	
         WRITE(3,6010) MAT2DCONV,MAT2DdIF,NP2DMX
      ENDIF
 2000 FORMAT(6X,'ULAZNI PODACI ZA 2/D IZOPARAMETARSKI ELEMENT'/
     16X,44('-')///
     111X,'UKUPAN BROJ RAZLICITIH MATERIJALA ............. NMAT2D =',I5/
     116X,'EQ.1;(ZA NMATT.EQ.1)'/
     116X,'GT.1; ZA NMATT.GT.1'///
     211X,'MATERIJAL BROJ ................................. MAT2D =',I5/
     216X,'EQ.1; ZA NMATT.EQ.1'/
     216X,'EQ.0; ZA NMAT2D.GT.1'///
     311X,'MAKSIMALAN BROJ CVOROVA PO ELEMENTU ........... NP2DMX =',I5/
     316X,'EQ.0; POSTAJE "4" (ZA 4 CVORA PO ELEMENTU)'/
     316X,'GT.4; ZA ELEMENTE OD 5 DO 9 CVOROVA')
 6000 FORMAT(6X,'INPUT DATA FOR ISOPARAMETRIC 2/D ELEMENTS'/
     16X,41('-')///
     111X,'TOTAL NUMBER OF MATERIALS FOR 2/D ELEMENT ..... NMAT2D =',I5/
     116X,'EQ.1;(FOR NMATT.EQ.1)'/
     116X,'GT.1; FOR NMATT.GT.1'///
     211X,'NUMBER OF MATERIALS ............................ MAT2D =',I5/
     216X,'EQ.1; FOR NMATT.EQ.1'/
     216X,'EQ.0; FOR NMAT2D.GT.1'///
     311X,'MAXIMUM NUMBER OF NODAL POINTS PER ELEMENT .... NP2DMX =',I5/
     316X,'EQ.0; DEFAULT SET "4" (FOUR NODES PER ELEMENT)'/
     316X,'GT.4; FOR ELEMENTS FROM 5 TO 9 NODES')

 2010 FORMAT(6X,'ULAZNI PODACI ZA 2/D IZOPARAMETARSKI ELEMENT'/
     16X,44('-')///
     211X,'MATERIJAL BROJ GRUPE ELEMENATA................. MAT2DD =',I5/
     311X,'MAKSIMALAN BROJ CVOROVA PO ELEMENTU ........... NP2DMX =',I5/
     316X,'EQ.0; POSTAJE "4" (ZA 4 CVORA PO ELEMENTU)'/
     316X,'GT.4; ZA ELEMENTE OD 5 DO 9 CVOROVA')
 6010 FORMAT(6X,'INPUT DATA FOR ISOPARAMETRIC 2/D ELEMENTS'/
     16X,41('-')///
     211X,'MATERIAL NUMBER FOR CONVECTION .. ......... MAT2DCONV =',I5/
     311X,'MATERIAL NUMBER FOR DIFFUSION .......       MAT2DdIF   =',I5/
     411X,'IN CASE OF HEAT TRANSFER, MAT2DdIF IS USED'/ 
     416X,'EQ.0 - NO DIFFUSION OR HEAT TRASFER FOR ELEMENT GROUP'/
     311X,'MAXIMUM NUMBER OF NODAL POINTS PER ELEMENTS ... NP2DMX =',I5/
     316X,'EQ.0; DEFAULT SET "4" (FOUR NODES PER ELEMENT)'/
     316X,'GT.4; FOR ELEMENTS FROM 5 TO 9 NODES')
C    
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
	  IF(ISRPS.EQ.0)
     *  WRITE(3,2200) IPR2DC,IPTG2,NGAU2X,NGAU2Y,NTHIC,THIC
        IF(ISRPS.EQ.1)
     *  WRITE(3,6200) IPR2DC,IPTG2,NGAU2X,NGAU2Y,NTHIC,THIC
      ENDIF
C
 2200 FORMAT(///
     411X,'INDIKATOR STAMPE KOORDINATA GAUSOVIH TACAKA ... IPR2DC =',I5/
     416X,'EQ.0; NE STAMPAJU SE'/
     416X,'EQ.1; STAMPAJU SE U SVIM ELEMENTIMA'/
     416X,'EQ.2; STAMPAJU SE U ZELJENIM ELEMENTIMA'///
     511X,'INDIKATOR STAMPE TEMPERATURA U GAUS. TACKAMA ... IPTG2 =',I5/
     516X,'EQ.0; NE STAMPAJU SE'/
     516X,'EQ.1; STAMPAJU SE U SVIM ELEMENTIMA'/
     516X,'EQ.2; STAMPAJU SE U ZELJENIM ELEMENTIMA'///
     611X,'BROJ GAUSOVIH TACAKA U PRAVCU OSE KSI ......... NGAU2X =',I5/
     616X,'EQ.0; POSTAJE "2"'///
     711X,'BROJ GAUSOVIH TACAKA U PRAVCU OSE ETA ......... NGAU2Y =',I5/
     716X,'EQ.0; POSTAJE "2"'///
     811X,'IDIKATOR DEBLJINE 2D ELEMENATA ................. NTHIC =',I5/
     816X,'EQ.0; SVI ELEMENTI SU ISTE DEBLJINE'/
     816X,'EQ.1; ELEMENTI IMAJU RAZLICITU DEBLJINU'///
     911X,'DEBLJINA SVIH 2D ELEMENATA ................. THIC =',1PD10.3/
     916X,'(ZA NTHIC.EQ.1 IGNORISE SE OVAJ PODATAK)'/
     916X,'EQ.0. ; SMATRA SE DA JE DEBLJINA JEDINICNA')
 6200 FORMAT(///
     411X,'INDICATOR FOR PRINTOUT  COORD. IN GAUSS POINTS  IPR2DC =',I5/
     416X,'EQ.0; NOT PRINTED'/
     416X,'EQ.1; PRINTED IN ALL ELEMENTS'/
     416X,'EQ.2; PRINTED IN PRESRIBED ELEMENTS'///
     511X,'INDICATOR FOR PRINTOUT TEMPER. IN GAUSS POINTS . IPTG2 =',I5/
     516X,'EQ.0; NOT PRINTED'/
     516X,'EQ.1; PRINTED IN ALL ELEMENTS'/
     516X,'EQ.2; PRINTED IN PRESCRIBED ELEMENTS'///
     611X,'NUMBER OF GAUSS POINTS IN DIRECTION KSI ....... NGAU2X =',I5/
     616X,'EQ.0; POSTAJE "2"'///
     711X,'NUMBER OF GAUSS POINTS IN DIRECTION ETA ....... NGAU2Y =',I5/
     716X,'EQ.0; DEFAULT SET "2"'///
     811X,'INDICATOR OF THICKNES .......................... NTHIC =',I5/
     816X,'EQ.0; THICKNESS ARE CONSTANTS'/
     816X,'EQ.1; THICKNESS ARE VARIABLES'///
     911X,'THICKNESS .................................. THIC =',1PD10.3/
     916X,'(THIC.EQ.1; THICKNESS IGNORED)'/
     916X,'EQ.0; THICKNESS OF ALL ELEMENTS IS ONE')
CE    POINTERS IN INPUT DATA VECTOR
      NE2D=NET
      LNEL2D=LMAX
	NELEDAT(NGELE,7)=LNEL2D
      NBR2=4
      IF (NP2DMX.GT.4) NBR2=9
      LMAT2D=LNEL2D + NE2D*NBR2
      NELEDAT(NGELE,8)=LMAT2D  
      LNQ2D=LMAT2D
C      IF (NMAT2D.GT.1.OR.indiffus.EQ.1) LNQ2D=LMAT2D+NE2D
      LNQ2D=LMAT2D+NE2D
	NELEDAT(NGELE,9)=LNQ2D
      LTHI2D=LNQ2D
      IF (IZIP.GT.0) LTHI2D=LNQ2D+NE2D
      NELEDAT(NGELE,10)=LTHI2D 	
C      LITG2D= LTHI2D
C      IF (NTHIC.GT.0) 
      LITG2D=LTHI2D+NE2D
      NELEDAT(NGELE,11)=LITG2D
      LIP2CV=LITG2D
      IF (IPTG2.GT.1) LIP2CV=LITG2D+NE2D
      NELEDAT(NGELE,12)=LIP2CV
      LMAX=LIP2CV
      IF (IPR2DC.GT.1) LMAX=LIP2CV+NE2D
      IF (LMAX.LE.NTOTA) GO TO 30
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) LMAX,NTOTA
 2005 FORMAT(' NEDOVOLJNA DIMENZIJA U VEKTORU A-ZA PODATKE O 2D ELEMENTI
     1MA'/' POTREBNA DIMENZIJA , LMAX=',I10/' RASPOLOZIVA DIMENZIJA ,NTO
     2TA=',I10)
 6005 FORMAT(/1X,' UNSUFFICIENT DIMENSION OF WORKING VECTOR A FOR RE
     1AD IN INPUT DATA'/1X,' REQUIRED DIMENSION, LMAX =',I10/1X,
     2' AVAILABLE DIMENSION, NTOTA=',I10)
      STOP
CE    CALL PROGRAM TO READ INPUT DATA
   30 CALL UL2DK2(A(LNEL2D),A(LMAT2D),A(LNQ2D),A(LITG2D),A(LIP2CV),
     1A(LMAXA),A(LMHT),A(LTHI2D),IDARCY,NDIMIDT)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UL2DK2(NEL,MATV,NQ,ITGAV,IP2CV,MAXA,MHT,THICK,IDARCY,
     1                  NDIMIDT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*130 ACOZ
CE     PROGRAM TO READ DATA ABOUT K09 ELEMENTS
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA2/ LNEL2D,LMAT2D,LNQ2D,LITG2D,LIP2CV,LNG2D,LNELG2,
     1LEL2,LHP2,LHK2,LSKE2,LDEL2,LDEHP2,LDEHK2,LTHI2D,LHR2
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /SRPSKI/ ISRPS
	common/elemmodels/modelel(20),ngele
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ
	COMMON /MUMPS_PAK/IMUMPS,MUFILE,MUFILE2

      DIMENSION NEL(NE2D,4),MATV(*),NQ(*),ITGAV(*),IP2CV(*),
     1MAXA(*),MHT(*),THICK(NE2D)
CE                 * POINTER       *
CE MATRIX-VECTOR   * IN WORKING    *             DESCRIPTION
CE                 * VECTOR A      *
CE     ELEMENT ADTA
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     *WRITE(3,2000)
      IF(ISRPS.EQ.1)
     *WRITE(3,6000)
      ENDIF
      NMATS=  1
      NQQS=  -1
      IPRCOS=-1
      IPGSS= -1
      THICS=  1.
      KN = 0
  100 CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(1,*) NN,(NEL(NN,I),I=1,4),NMAT,NQQ,KORE,NBEG,IPRCO,IPGS,THI
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000)NN,(NEL(NN,I),I=1,4),NMAT,NQQ,KORE,NBEG,IPRCO,
     1IPGS,THI
      KK = NN + NBEG
  130 CONTINUE
      if(nn.gt.net) then
	   write(3,6350)nn,net
 6350    format(/' ERROR IN INPUT DATA FOR 2D ELEMENT GROUP:'
     1   ' INPUT ELEMENT NUMBER IS GREATER THAN'/ 'THE TOTAL NUMBER'
     1   ' WITHIN THE GROUP'//
	2   ' INPUT ELEMENT NUMBER  NN=',I10/
	3   ' TOTAL NUMBER OF ELEMENTS WITHIN THE GROUP, NET=',I10/
	4   ' S T O P')
	  stop
	endif
C      IF(indiffus.EQ.1) THEN
C	  IF(NMAT.EQ.0) NMAT=modelel(ngele)
      MATV(NN)= NMAT  
      IF(NTHIC.EQ.1) THEN
	  IF(DABS(THI).LT.1.E-10) THI=1.D0
	  THICK(NN)=THI
	ELSE
	  THICK(NN)=THIC
	ENDIF
	  
C---------------------------   ONE MATERIAL FOR CONVECTION AND ONE FOR DIFFUSION
C                              FOR THE ENTIRE GROUP MATV(NN) IS NOT USED
C	if(NMAT.gt.NMATT)then
C	  write(3,6330)NN,nmat,nmatt
C 6330   format(/' E R R O R'/
C     1  'MATERIAL NUMBER IS GREATER THAN THE TOTAL NUMBER OF MATERIALS'/
C	1  '   ELEMENT NUMBER, NN=',I8/
C     2  '   MATERIAL NUMBER FOR 3D ELEMENT, NMAT=',I5/
C	3  '   TOTAL NUMBER OF MATERIALS, NMATT=',I5/
C	4  '   S T O P')
C	  STOP
C	endif
C	  GO TO 22
C      ENDIF
C      IF (NMATT.EQ.1) GO TO 20
C      IF (NMAT2D.GT.1) GO TO 18
C      NMAT = MAT2D
C      GO TO 22
C   18 IF (NMAT.EQ.0) NMAT=NMATS
C      NMATS=NMAT
C      MATV(NN)= NMAT
C      GO TO 22
   20 NMAT=  1
   22 IF (IZIP.EQ.0) GO TO 30
      IF (NQQ.EQ.0) NQQ=NQQS
      NQQS=NQQ
      NQ(NN)=NQQ
      IF(NQ(NN).LT.0) NQQ = 0
      IF(NQ(NN).LT.0) NQ(NN) = 0
      GO TO 32
   30 NQQ = 0
   32 IF (IPR2DC.LT.2) GO TO 40
      IF (IPRCO.EQ.0) IPRCO=IPRCOS
      IPRCOS=IPRCO
      IP2CV(NN)=IPRCO
      IF(IP2CV(NN).LT.0) IPRCO = 0
      IF(IP2CV(NN).LT.0) IP2CV(NN) = 0
      GO TO 42
   40 IF (IPR2DC.EQ.1) IPRCO= 1
      IF (IPR2DC.EQ.0) IPRCO= 0
   42 IF (IPTG2.LT.2) GO TO 50
      IF (IPGS.EQ.0) IPGS=IPGSS
      IPGSS=IPGS
      ITGAV(NN)=IPGS
      IF(ITGAV(NN).LT.0) IPGS = 0
      IF(ITGAV(NN).LT.0) ITGAV(NN) = 0
      GO TO 52
   50 IF (IPTG2.EQ.1) IPGS= 1
      IF (IPTG2.EQ.0) IPGS= 0
   52 CONTINUE
C      THI = THIC
C      GO TO 53
C   54 IF (DABS(THI).LT.1.D-10) THI=THICS
C      THICS=THI
C      THICK(NN)=THI
   53 CONTINUE
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
        WRITE(3,5001) NN,(NEL(NN,I),I=1,4),NMAT,NQQ,IPRCO,IPGS,THI
      ENDIF
C      THICK(NN)=THI
      KN = KN + 1
      IF (NP2DMX.EQ.4) GO TO  90
      IF(NN.GT.KK-NBEG) GO TO 80
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(1,*)  (NEL(NN,I),I=5,9)
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000)  (NEL(NN,I),I=5,9)
   80 IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      WRITE(3,5002)  (NEL(NN,I),I=5,9)
      ENDIF
   90 IF(KN.EQ.NE2D) GO TO 110
      IF(KORE.EQ.0.AND.NBEG.EQ.0) GO TO 100
      NN = NN + 1
      IF(NN.GT.KK) GO TO 100
      DO 170 I=1,4
      NEL(NN,I)=NEL(NN-1,I)+KORE
  170 CONTINUE
      IF(NP2DMX.EQ.4) GO TO 130
      DO 180 I=5,9
      IF(NEL(NN-1,I).EQ.0) GO TO 179
      NEL(NN,I)=NEL(NN-1,I)+KORE
      GO TO 180
  179 NEL(NN,I)=0
  180 CONTINUE
      GO TO 130
 1000 FORMAT(5I10,6I5,F10.0)
 6000 FORMAT(//'1'///6X,'DATA FOR EACH 2/D ELEMENT'/6X,25('-')///
     26X,'ELEM.  ',
     37X,'N    O    D    E    S  ',6X,'MAT.',6X,'SOURCE',5X,
     4 'IND FOR COORD. TEMP/CONC',5X,' THICK'/8X,'NO',50X,'NO.',
     4  13X,'G.P.',6X,'G.P.'/21X,'1',5X,'2',5X,'3',5X,'4')
 2000 FORMAT(//'1'///6X,'PODACI ZA SVAKI 2/D ELEMENT'/6X,27('-')///
     26X,'ELEM.   C   V   O   R   O   V   I',
     33X,'MAT.',2X,' IZVOR',2X,'KOORD.',2X,
     4'TEMP.',' DEBLJ.'/8X,'BR.',32X,'BR.',4X,'BR.',4X,'G.T.',3X,'G.T.'/
     517X,'1',5X,'2',5X,'3',5X,'4'/14X,'5',5X,'6',5X,'7',5X,'8',5X,'9'/)
 5001 FORMAT(2X,I8,6X,4I6,7X,I4,I11,6X,2I10,7X,F10.3)
 5002 FORMAT(9X,13I6)
CE    FORM VECTOR MAXA
  110 INDMA= 0
C
      IF(IMUMPS.EQ.1) RETURN 
      IF (NGE.LT.NGET) GO TO 120
      
CE    AUXILARY SPACE FOR MAXA
      LMAXS=LMAX
      LMAXA=LMAX
      LMAX=LMAXA+JEDN+1
      INDMA=1       
      IF (LMAX.LE.NTOTA) GO TO 120
      IF(ISRPS.EQ.0)
     1WRITE(3,2010) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     1WRITE(3,6010) LMAX,NTOTA
      STOP
 2010 FORMAT(' NEDOVOLJNA DIMENZIJA U VEKTORU A-ZA FORMIRANJE MAXA'/' PO
     1TREBNA DIMENZIJA , LMAX=',I9/' RASPOLOZIVA DIMENZIJA , NTOTA=',I9)
 6010 FORMAT(/1X,' UNSUFFICIENT DIMENSION OF WORKING VECTOR A FOR MAXA'/
     1 1X,' REQUIRED DIMENSION, LMAX =',I10/1X,
     2' AVAILABLE DIMENSION, NTOTA=',I10)
    
  120 CONTINUE 
      IF(IDARCY.EQ.0) THEN
         CALL MAXATE(A(LMAXA),MHT,A(LIDT),NEL,LM2,NE2D,JEDN,INDMA,
     1               NBR1,NWK,NDIMIDT)
      ELSE
         CALL MAXAPIPET(A(LMAXA),A(LMHT),A(LIDT),NEL,LM2,NE2D,4,
     1              JEDN,NWK,NPT,NDIMIDT,INDMA)
      ENDIF  
      IF (NGE.LT.NGET)RETURN
      LMAX=LMAXS
      LMAXA=LMHT
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE GRAN2D(NG2D,NELG,NEL,N2DGUL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*130 ACOZ
CE PROGRAM TO READ BOUNDARY CONDITION INPUT DATA ON 2D ELEMENT SURFACES
CE PROGRAM READS ONLY CORNER NODES OF SURFACES WITH FLUXES AND/OR
CE CONVECTION
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /SRPSKI/ ISRPS
      DIMENSION NG2D(*),NELG(5,4,*),NEL(NE2D,*)
      DIMENSION NPOV(4,2),NPOVV(8),NPV(2),NPG(2)
      DATA NPOVV/1,4,3,2,2,1,4,3/
CE NODES ON SURFACES
      KK=0
      DO 10 I=1,4
      DO 10 J=1,2
      KK=KK+1
   10 NPOV(I,J)=NPOVV(KK)
      DO 20 I=1,5
      DO 20 J=1,4
      DO 20 K=1,NE2D
   20 NELG(I,J,K)=0
      DO 25 I=1,NE2D
   25 NG2D(I)=0
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     *WRITE(3,2000)
      IF(ISRPS.EQ.1)
     *WRITE(3,6000)
      ENDIF
 2000 FORMAT(//////6X,'PODACI O GRANICNIM POVRSINAMA 2/D ELEMENATA'/
     16X,43('-')//
     27X,'(UCITAVANJE SE ZAVRSAVA PRAZNOM LINIJOM)'//
     11X,' ELEM.',3X,' CVOROVI ',2X,'FLUKS',3X,'KOEF.PREL.',
     23X,'TEMP.OKOL.',3X,'KOEF.EMIS.',3X,'FUNK.OBLIKA'/
     21X,'   BR.',16X,'BR.',6X,'BR.',11X,'BR.',10X,'BR.',11X,'BR.')
 6000 FORMAT(//////6X,'BOUNDARY CONDITIONS FOR 2/D ELEMENATS'/
     16X,37('-')///
     11X,' ELEM.',3X,'N O D E S',3X,'FLUX',3X,'CONV.COEF.',
     23X,'ENVIR.TEMP.',3X,'EMIS.COEF.',3X,'SHAPE FUNCT.'/
     21X,'   No.',16X,'No.',6X,'No.',11X,'No.',10X,'No.',11X,'No.')
      IFLS=0
      N2DGU=0
      IHPS=0
      IHRS=0
      ITOS=0
      IFOS=0
   30 CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(1,*)NN,(NPV(I),I=1,2),IFL,IHP,ITO,IHR,IFO
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000)NN,(NPV(I),I=1,2),IFL,IHP,ITO,IHR,IFO
 1000 FORMAT(14I5)
      IF(NN.EQ.0) GO TO 200
CE DETERMINATION OF SURFACE ORDINAL NUMBER IN ELEMENT
      DO 50 I=1,4
      DO 40 J=1,2
      JJ=NPOV(I,J)
   40 NPG(J)=NEL(NN,JJ)
      K = 0
      DO 45 J=1,2
      DO 44 JJ = 1,2
      IF(NPV(J).EQ.NPG(JJ)) K = K + 1
   44 CONTINUE
   45 CONTINUE
      IF(K.EQ.2) GO TO 60
   50 CONTINUE
      IF(ISRPS.EQ.0)
     *WRITE(3,2001) NN,(NPV(I),I=1,2)
      IF(ISRPS.EQ.1)
     *WRITE(3,6001) NN,(NPV(I),I=1,2)
 2001 FORMAT(/1X,'GRESKA U ULAZNIM PODACIMA ZA GRANICNE USLOVE:'/
     11X,'ELEMENT BR.',I5/1X,'UCITANI CVOROVI NA GRANICI :',2I5/
     21X,'NE CINE JEDNU STRANU ELEMENTA')
 6001 FORMAT(/1X,'ERROR IN BOUNDARY CONDITION INPUT DATA:'/
     11X,'ELEMENT NO.',I5/1X,'READ IN BOUNDARY NODES :',2I5/
     21X,'DO NOT CONSTITUTE ONE EDGE OF ELEMENT')
      STOP
   60 IF(NG2D(NN).EQ.0) GO TO 65
      IVR=NG2D(NN)
      GO TO 70
   65 N2DGU=N2DGU+1
      IVR=N2DGU
      NG2D(NN) = IVR
   70 IF(IFL.GT.0.OR.IHP.GT.0.OR.ITO.GT.0.OR.IHR.GT.0.OR.IFO.GT.0)
     1GO TO 75
      IFL=IFLS
      IHP=IHPS
      IHR=IHRS
      ITO=ITOS
      IFO=IFOS
      GO TO 80
   75 IFLS=IFL
      IHPS=IHP
      IHRS=IHR
      ITOS=ITO
      IFOS=IFO
   80 NELG(1,I,IVR)=IFL
      NELG(2,I,IVR)=IHP
      NELG(3,I,IVR)=ITO
      NELG(4,I,IVR)=IHR
      NELG(5,I,IVR)=IFO
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      WRITE(3,5002) NN,(NPV(I),I=1,2),IFL,IHP,ITO,IHR,IFO
      ENDIF
 5002 FORMAT(1X,I5,2X,2I5,I7,I9,I14,I13,I14)
      GO TO 30
  200 N2DGUL=N2DGU
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE TGRAFE(NEL,NBR2,NET,NGE,II,LAYER)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      COMMON /SRPSKI/ ISRPS
      DIMENSION NEL(NET,*)
      IF(ISRPS.EQ.0.AND.(NBR2.NE.4.AND.NBR2.NE.8))
     1WRITE(3,2200) NGE
      IF(ISRPS.EQ.1.AND.(NBR2.NE.4.AND.NBR2.NE.8))
     1WRITE(3,6200) NGE
      NBR=NBR2
      IF(NBR2.LT.8) NBR2=4
      IF(NBR2.EQ.9) NBR2=8
      ITYPE=27
      IF(NBR2.EQ.8) ITYPE=6
      IE1=44
      IF(NBR2.EQ.8) IE1=45
      IE2=1
      IE3=LAYER !1
      ICOL=8
      IND=-1
      ITYP=71
      WRITE(II,1100) IND
      WRITE(II,1100) ITYP
      DO 10 I=1,NET
         WRITE(II,1000) I,ITYPE,IE1,IE2,IE3,ICOL,NBR2
         IF(NBR2.EQ.4) THEN
            WRITE(II,1000) (NEL(I,J),J=1,4)
         ELSE
            WRITE(II,1000) (NEL(I,J),NEL(I,J+4),J=1,4)
         ENDIF
   10 CONTINUE
      WRITE(II,1100) IND
      NBR2=NBR
      RETURN
 1100 FORMAT(I6)
 1000 FORMAT(8I10)
 2200 FORMAT(//' PROGRAM ZA GRAFICKO PRIKAZIVANJE REZULTATA "IDEAS"'/
     1' ZAHTEVA 2/D ELEMENT SA 4 ILI 8 CVOROVA U GRUPI ELEMENATA NGE ='
     1,I5)
 6200 FORMAT(//' GRAPHIC PACKAGE   "IDEAS"'/
     1' PERMITS ONLY 2/D ELEMENTS WITH 4 OR 8 NODES PER ELEMENT IN',
     1' GROUP   NGE =',I5)
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE K09MGL
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
CE MAIN PROGRAM TO FORM MATRIXES AND VECTORS OF ELEMENT K09
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA2/ LNEL2D,LMAT2D,LNQ2D,LITG2D,LIP2CV,LNG2D,LNELG2,
     1LEL2,LHP2,LHK2,LSKE2,LDEL2,LDEHP2,LDEHK2,LTHI2D,LHR2
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON /SRPSKI/ ISRPS
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ 
	common/elemmodels/modelel(20),ngele
 	COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON/DARCYEQ/ ELDARCYX,ELDARCYY,ELDARCYZ,VDARCY,PINLET,
     1       DARCYX,JEDNDARCY,ISOLVER,IDARCY,LDARCYD,LDARCYMI,
     2       LIDARCYMA,NPTINDARCY
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON/MAINIDT/NDIMIDT  
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10)
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
      COMMON/PIPEMIX/FLAMREF,IPIPEMIX,NETIP,LIDPRESS,LPRESS,LIDP,
     2               LLAMDAV,IDEFORMG,INDFLUXE,ILAMDA
      COMMON/CSMEARED/ISMEARED,VOLFRACT,POROSSME,LVOLFRACTV,LDWALLSME,
     1 LPWALLSMEV,LDIAMSME,LTHICKSME,IPARTSME,LVOLSME,IRAVSME,DRAVSME
      COMMON/CSMEAREDG/ISMEAREDG,NDIMIDG,ICONVG,INDIFFUSG,LAMIV,
     1     LDARCYCOEF,MATNEWUSE,LHYDRCOEFV,LDPIPE,LDTISSUE,IPRINTVEL,
     2     IACTIVE(4),LZADATA1,LZADATA0,LZADAVXYZ,LWALLAREA,
     3     LWALLPOROSV,LIPIPENOD,ILARGEVES
      COMMON/CSMEARED2/IPASSME,JEDNPRES,JEDNCONC,LTT1P,LTT1C,LTT10P,
     1      LTT10C,LDIRCOEFF,LDPIPECA,LDARCYCA,I2D3D,IANIZS,NDIMTENSOR
C
      COMMON/CMULTITIS/MULTITIS,MULTIMOL,IACTIVECELL(4),NDIMCELL,LIDTV,
     1      LIDTVCELL,JEDNPV(10),JEDNCV(10),JEDNPMAX,JEDNCMAX,MM
      COMMON/MULTITISAD/LIPARTITV,LIACTIVEV,LIVSOURCEV,LIADHESIV,
     1 LVOLFRACT,LDARCYCOEFV,LHYDRCOEFPV,LHYDRCOEFCV,LAMIPV,LAMICV,
     2 LVOLSMEV,LDARTENSOR,LWALLAREAV,LVFMULTIT,LDIAMCELLV,
     3 LDPIPEEXV,LDCELLSV,LDPIPECAP,LIPARTNODEV,LPARTNODEV,
     4 LIACTIVENODEV,LACTIVENODEV,LISOURCENODEV,LSOURCENODEV,
     5 LADHESINODEV,LIADHESINODEV,LDWALLSMEV,LDWALLCELL,LDIAMSMEV,
     6 LTHICKSMEV,LDWALLV,LIPIPENODV,LICRITICALV,LCRITICALV,
     7 LTT1PM,LTT01PM,LTT1CM,LTT01CM,LFMULT  
      COMMON/CMATDATA/NDIMPIPEMAX,NDIMCAPMAX,NDIMCELLMAX,NDIMPMAX,
     4 NDIMAMAX,NDIMSMAX,NDIMADHMAX,NDIMWPIPEMAX,NDIMWCAPMAX,
     5 NDIMWCELLMAX,DARCYCOEF,AMICOEFP,AMICOEFC,HYDROCOEFP,HYDROCOEFC,
     6 DARCYTENSOR(6),DPIPE,DTISSUE,DIFFTENSOR(6),PARTPIPE1,PARTPIPE2,
     7 PARTCELL(2,4),ACTIVECOEF(2,4),SOURCECOEFF(4),ADHCOEFF(2,4),
     8 DWALLPIPE,DWALLCAP,DWALLCELL(4),INODEDTOT,INODEWTOT,LDPIPEEXA,
     9 LDPIPECAPA,LCELLA,LPARTA,LACTIVEA,LSOURCEA,LADHISEA,LWALLPIPEA,
     1 LWALLCAPA,LWALLCELLA,IREADDIFNODE
      COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
      COMMON/CZADATMULT/NZADPV(10),NZADPMAX,LZADATM0,LZADATM1,LNZADNODF,
     1      LZADVALUE,NPTIMESYSV(10),NPTSYSMAX,LZADSYSV
      COMMON/CMAXSAVE/LMAXSAVE
      COMMON/CMIGRATION/IMIGTABLE(10),JEDNMIGV(10),VMIGC(10),
     1 INDCHTAXV(10),INDCHTAX,IMIGTOT,IMIGNODE,LIVMIGV,LVMIGV,LIDTMIG,
     2 INDMIG,LVFTT,JEDNMIG,INDCHTAXTOT,LCHTAXV 
      COMMON/CCELLIN/INDCELLIN,INDCELLINV(10),VFVS(10,5),DIAMVS(10,5),
     1 RAVVS(10,5),DDIFFICY(10,10),DDIFFIVS(10,10,5),DDIFFICM(10,10,5)
     2 ,IPARTIVS(10,10,5),PARTIVS(10,10,5),NDIMVS,NVSMAX,LIDVS,NZADVS,
     3 LNZADNODVS,LNZADNFVS,LNZADFVS,LZADVALUEVS,LZADATAVS0,LZADATAVS 
      COMMON/CLYMPH/INDLYMPH,INDLYMPHH,INDLYMPHC,LRVLYMPH,LPLYMHV,
     1 LCLYMHV,TABLYHW(10),TABLYCW(10,10),TABLYD(10),TENSORLYP(10,6),
     2 TENSORLYC(10,10,6),ITABLYP,ITABLYC,ITABLYD,LHCOEFLYNOD,
     3 LHCOEFLYNODW,LCCOEFLYNOD,LCCOEFLYNODW,LDCOEFLYNOD,LIDLYMPHH,
     4 LIDLYMPHC 
      COMMON/CLYMHZADA/NZADLYMPH,LINPUTLY,LZADVALUELY,LZADALYMH1,
     1 LZADALYMH0,NZADPLYV(10),NZADLYMPHMX               
c  
CE  POINTERS FOR MATRIXES OF ELEMENT
CE  NUMBER OF MEMBERS IN MATRIXES OF ELEMENT                     
C
      IF(INDFLUXE.EQ.1) RETURN
C
      IF(NP2DMX.EQ.4) MEL2D=10
      IF(NP2DMX.GT.4) MEL2D=45
      NDES=NP2DMX*NDIMIDT
      IF(IDARCY.NE.0) THEN
         MEL2D=NDES*NDES
      ENDIF
C      LEL2=LMAXM
      LMAXSAVE=LMAX
      LEL2=LMAX
      LHP2=LEL2
      IF(NSTAC.GT.0) LHP2=LEL2+MEL2D
      LHR2=LHP2+MEL2D
      LHK2=LHR2
      IF(LINTE.GT.0.OR.indiffus.EQ.1.OR.IHEAT.EQ.1) LHK2=LHR2+MEL2D
      LSKE2=LHK2+MEL2D
      LMAX=LSKE2+MEL2D
      IF(INTEB.EQ.1) GO TO 30
      LDEL2= LMAX
      IF(KONC.EQ.1) LMAX = LMAX + MEL2D
      LDEHP2= LMAX
      IF(KONK.EQ.1) LMAX = LMAX + MEL2D
      LDEHK2= LMAX
      IF(MAXTHP.GT.1)LMAX = LMAX + MEL2D
   30 IF(LMAX.LE.NTOTA) GO TO 20
      IF(ISRPS.EQ.0)
     *   WRITE(3,2000) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *   WRITE(3,6000) LMAX,NTOTA
 2000 FORMAT(/1X,'NEDOVOLJNA DIMENZIJA U VEKTORU A - ZA SMESTANJE MATRIC
     1A ELEMENATA'/1X,'POTREBNA DIMENZIJA,LMAX=',I10/1X,'RASPOLOZIVA DIM
     2ENZIJA, NTOTA=',I10)
 6000 FORMAT(/1X,' UNSUFFICIENT DIMENSION OF WORKING VECTOR A FOR',
     1' ELEMENT MATRIX'/1X,' REQUIRED DIMENSION, LMAX =',I10/1X,
     2' AVAILABLE DIMENSION, NTOTA=',I10)
      STOP
   20 continue
C
      NET       = NELEDAT(NGE,2)
      INDAX     = NELEDAT(NGE,3)
      IZIP      = NELEDAT(NGE,4) 
      MAT2DCONV = NELEDAT(NGE,5)
      MAT2DDIFF = NELEDAT(NGE,6)
	LNEL2D    = NELEDAT(NGE,7)
      LMAT2D    = NELEDAT(NGE,8)
      LNQ2D     = NELEDAT(NGE,9)
      LTHI2D    = NELEDAT(NGE,10)
      LITG2D    = NELEDAT(NGE,11)
      LIP2CV    = NELEDAT(NGE,12)
      IDIFUSE   = NELEDAT(NGE,13)
C
      AEFF=1.D0
C--------      
      LNODEIN  = LMAX
      LNODEOUT = LMAX
C
      GOTO 100      
      IF(MULTITIS.GT.0.OR.MULTIMOL.GT.1) GO TO 100         
C  
C      CASE OF ONE MOLECULE AND HOMOGENOUS TISSUE
C
      IF(ISMEAREDG.NE.1) THEN  
          CALL INTEB2DARCYS2(A(LIDT),A(LIDTCD),A(LCORD),A(LTCONS),
     1    A(LNTAKV),A(LNTACV),A(LNEL2D),A(LNQ2D),A(LMAT2D),A(LEL2),
     2    A(LHP2),A(LHK2),A(LSKE2),A(LTHI2D),A(LTT1P),A(LTT1C),
     3    A(LTT10P),A(LTT10C),A(LIBFK),A(LFAKP),A(LFVPOT),A(LHR2),
     4    A(LMATCONV),A(LMATFUNC),A(LMATDIF),A(LMATFUND),A(LNZADJ),
     5    A(LNODEIN),A(LNODEOUT),A(LFLUXDX),A(LVOLFRACTV),A(LAMIV),
     7    A(LDARCYCOEFV),A(LIDARCYMA),A(LDWALLSMEV),A(LDIAMSMEV),
     8    A(LDPIPE),A(LDTISSUE),A(LZADATA1),A(LZADATA0),A(LZADAVXYZ),
     9    A(LNZADCONTUREV),A(LDIRCOEFF),A(LDPIPECAP),A(LDARCYCAP),
     1    IACTIVE,NZADP,NDES,MAT2DCONV,MAT2DDIFF,AEFF,IDARCY,VDARCY,
     2    NZADIN,NZADOUT,ISMEAREDG,IPRINTVEL,NDIMIDG,JEDNPRES,JEDNCONC,
     3    IPASSME,IANIZS,NDIMTENSOR)
      ELSE
          CALL INTEB2DARCY(A(LIDT),A(LIDTCD),A(LCORD),A(LTCONS),
     1    A(LNTAKV),A(LNTACV),A(LNEL2D),A(LNQ2D),A(LMAT2D),A(LEL2),
     2    A(LHP2),A(LHK2),A(LSKE2),A(LTHI2D),A(LTT1),A(LTT2),A(LTT0),
     3    A(LIBFK),A(LFAKP),A(LFVPOT),A(LHR2),A(LMATCONV),A(LMATFUNC), 
     4    A(LMATDIF),A(LMATFUND),A(LNZADJ),A(LZADFM),A(LNODEIN),
     5    A(LNODEOUT),A(LFLUXDX),A(LMATHEAT),A(LMATFUNHRO),A(LMATFUNHSH)
     6     ,A(LMATFUNHK),A(LVOLFRACTV),NZADP,NDES,MAT2DCONV,MAT2DDIFF,
     7    AEFF,IDARCY,VDARCY,NZADIN,NZADOUT,ISMEARED,NDIMIDG)
      ENDIF
      lmax = lmaxsave
      RETURN
C
C     MULTIMOLAR OR COMPOSITE TISSUE
C
  100 CONTINUE     
 
      LNZADCONTUREV=LMAX 
      CALL INTEB2DARCYS2M(A(LIDT),A(LCORD),A(LNTAKV),A(LNTACV),
     1 A(LNEL2D),A(LNQ2D),A(LMAT2D),A(LEL2),A(LHP2),A(LHK2),A(LSKE2),
     2 A(LTHI2D),A(LTT1P),A(LTT1C),A(LTT10P),A(LTT10C),A(LTT1PM),
     3 A(LTT01PM),A(LTT1CM),A(LTT01CM),A(LIBFK),A(LFAKP),A(LFVPOT),
     4 A(LHR2),A(LNODEIN),A(LNODEOUT),A(LFLUXDX),A(LVOLFRACTV),
     5 A(LDARCYCOEFV),A(LDIAMSMEV),A(LNZADJ),A(LZADATA1),A(LZADATA0),
     6 A(LZADAVXYZ),A(LNZADCONTUREV),A(LDIRCOEFF),IACTIVE,A(LIDTV),
     7 A(LAMICV),A(LDARTENSOR),A(LIDTVCELL),A(LIVMIGV),A(LVMIGV),
     8 A(LIDTMIG),A(LVFTT),A(LVFMULTIT),A(LDIAMCELLV),A(LDPIPEEXV),
     9 A(LDCELLSV),A(LDPIPECAP),A(LIACTIVENODEV),A(LACTIVENODEV),
     1 A(LISOURCENODEV),A(LSOURCENODEV),A(LZADATM0),A(LZADATM1),
     2 A(LNZADNODF),A(LCHTAXV),A(LIDLYMPHH),A(LIDLYMPHC),A(LRVLYMPH),
     3 A(LHCOEFLYNOD),A(LCCOEFLYNOD),A(LDCOEFLYNOD),A(LINPUTLY),
     4 A(LZADALYMH1),A(LZADALYMH0),NZADP,NDES,MAT2DCONV,MAT2DdIF,AEFF,
     5 IDARCY,VDARCY,NZADIN,NZADOUT,ISMEARED,IPRINTVEL,NDIMIDG,JEDNPRES,
     6 JEDNCONC,IPASSME,IANIZS,NDIMTENSOR,LFMULT)
C
       IF(INDCELLIN.EQ.0.OR.IPASSME.EQ.1) RETURN
C
C     DIFFUSION WITHIN CELL VESICLES      
C
       CALL INTEB2CINTERNAL(A(LCORD),A(LNEL2D),A(LTHI2D),A(LTT1C),
     1  A(LTT10C),A(LTT1CM),A(LTT01CM),A(LVOLFRACTV),A(LVFMULTIT),
     2  A(LIDVS),A(LNZADNODVS),A(LZADATAVS0),A(LZADATAVS),A(LRVLYMPH),
     3  JEDNCONC,LFMULT,INDLYMPH)           
c
      LMAX=LMAXSAVE
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTEB2DARCYS2M(IDT,CORD,NTAKV,NTACV,NEL,NQ,
     1 MATV,EL,HP,HK,SKE,THI2D,TT1P,TT1C,TT10P,TT10C,TT1PM,TT01PM,
     2 TT1CM,TT01CM,IBFK,FAKP,FVPOT,HR,NODEIN,NODEOUT,FLUX,VOLFRACTV,
     3 DARCYCOEFV,DIAMSMEV,NZADJ,ZADATA1,ZADATA0,ZADAVXYZ,NZADCONTUREV,
     4 DIRCOEFF,IACTIVE,IDTV,AMICV,DARTENSOR,IDTVCELL,IVMIGV,VMIGV,
     8 IDTMIG,VFTT,VFMULTIT,DIAMCELLV,DPIPEEXV,DCELLSV,DPIPECAP,
     9 IACTIVENODEV,ACTIVENODEV,ISOURCENODEV,SOURCENODEV,ZADATM01,
     1 ZADATM1,NZADNODF,CHTAXV,IDLYMPHH,IDLYMPHC,RVLYMPH,HCOEFLYNOD,
     2 CCOEFLYNOD,DCOEFLYNOD,INPUTLY,ZADALYMH1,ZADALYMH0,NZADP,NDES,
     3 MAT2DCONV,MAT2DdIF,AEFF,IDARCY,VDARCY,NZADIN,NZADOUT,ISMEARED,
     4 IPRINTVEL,NDIMID,JEDNPRES,JEDNCONC,IPASSME,IANIZS,NDIMTENSOR,
     5 LFMULT)           
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
C
      COMMON A(1)  
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON/UNSYMMETRIC/LALEVO,LDESNO,LSILE,ISYMM
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA2/ LNEL2D,LMAT2D,LNQ2D,LITG2D,LIP2CV,LNG2D,LNELG2,
     1LEL2,LHP2,LHK2,LSKE2,LDEL2,LDEHP2,LDEHK2,LTHICK,LHR2
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2C(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON/REAL2D/ CK2(9,3),P2(2,9),PJ2(2,9),XJ2(2,2),H2(9),
     1AK2,CC2,HH2,QQ2,HHP2,DET2,DET21,F9(9),TT21(9),TT212(9),TT210(9)
      COMMON /SRPSKI/ ISRPS
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ            
	common/elemmodels/modelel(20),ngele                 
	COMMON/MESSAGES/MESSAGE
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
	COMMON/FLUXKC/INDFLUXKC 
      COMMON/CMULTITIS/MULTITIS,MULTIMOL,IACTIVECELL(4),NDIMCELL,LIDTV,
     1      LIDTVCELL,JEDNPV(10),JEDNCV(10),JEDNPMAX,JEDNCMAX,MM
      COMMON/CMATDATA/NDIMPIPEMAX,NDIMCAPMAX,NDIMCELLMAX,NDIMPMAX,
     4 NDIMAMAX,NDIMSMAX,NDIMADHMAX,NDIMWPIPEMAX,NDIMWCAPMAX,
     5 NDIMWCELLMAX,DARCYCOEF,AMICOEFP,AMICOEFC,HYDROCOEFP,HYDROCOEFC,
     6 DARCYTENSOR(6),DPIPE,DTISSUE,DIFFTENSOR(6),PARTPIPE1,PARTPIPE2,
     7 PARTCELL(2,4),ACTIVECOEF(2,4),SOURCECOEFF(4),ADHCOEFF(2,4),
     8 DWALLPIPE,DWALLCAP,DWALLCELL(4),INODEDTOT,INODEWTOT,LDPIPEEXA,
     9 LDPIPECAPA,LCELLA,LPARTA,LACTIVEA,LSOURCEA,LADHISEA,LWALLPIPEA,
     1 LWALLCAPA,LWALLCELLA,IREADDIFNODE
      COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
      COMMON/CZADATMULT/NZADPV(10),NZADPMAX,LZADATM0,LZADATM1,LNZADNODF,
     1      LZADVALUE,NPTIMESYSV(10),NPTSYSMAX,LZADSYSV
      COMMON/CMIGRATION/IMIGTABLE(10),JEDNMIGV(10),VMIGC(10),
     1 INDCHTAXV(10),INDCHTAX,IMIGTOT,IMIGNODE,LIVMIGV,LVMIGV,LIDTMIG,
     2 INDMIG,LVFTT,JEDNMIG,INDCHTAXTOT,LCHTAXV
      COMMON/CCELLIN/INDCELLIN,INDCELLINV(10),VFVS(10,5),DIAMVS(10,5),
     1 RAVVS(10,5),DDIFFICY(10,10),DDIFFIVS(10,10,5),DDIFFICM(10,10,5)
     2 ,IPARTIVS(10,10,5),PARTIVS(10,10,5),NDIMVS,NVSMAX,LIDVS,NZADVS,
     3 LNZADNODVS,LNZADNFVS,LNZADFVS,LZADVALUEVS,LZADATAVS0,LZADATAVS 
      COMMON/CLYMPH/INDLYMPH,INDLYMPHH,INDLYMPHC,LRVLYMPH,LPLYMHV,
     1 LCLYMHV,TABLYHW(10),TABLYCW(10,10),TABLYD(10),TENSORLYP(10,6),
     2 TENSORLYC(10,10,6),ITABLYP,ITABLYC,ITABLYD,LHCOEFLYNOD,
     3 LHCOEFLYNODW,LCCOEFLYNOD,LCCOEFLYNODW,LDCOEFLYNOD,LIDLYMPHH,
     4 LIDLYMPHC 
      COMMON/CLYMHZADA/NZADLYMPH,LINPUTLY,LZADVALUELY,LZADALYMH1,
     1 LZADALYMH0,NZADPLYV(10),NZADLYMPHMX        
C
      DIMENSION IDT(NDIMID,NPT),CORD(NPT,3),
     1 NTAKV(*),NTACV(*),NEL(NE2D,4),NQ(*),MATV(*),EL(*),HP(*),HK(*),
     2 SKE(NDES,NDES),THI2D(NE2D),TT1P(JEDNPRES),TT1C(JEDNCONC),
     3 TT10P(JEDNPRES),TT10C(JEDNCONC),TT1PM(MULTIMOL,JEDNPMAX),
     4 TT01PM(MULTIMOL,JEDNPMAX),TT1CM(MULTIMOL,JEDNCMAX),
     5 TT01CM(MULTIMOL,JEDNCMAX),IBFK(NMATT,*),FAKP(NMATT,*),         
     4 FVPOT(*),HR(*)   
      DIMENSION NODEIN(NZADIN),NODEOUT(NZADOUT),FLUX(NPT)
      DIMENSION VOLFRACTV(NPT),DARCYCOEFV(NPT),DIAMSMEV(NPT),
     1 NZADJ(3,NZADP),ZADATA1(NZADP),ZADATA0(NZADP),ZADAVXYZ(2,3,NPT),
     2 NZADCONTUREV(2,NPT),DIRCOEFF(3,NPT),IACTIVE(4) 
    
C---------------------
      DIMENSION IDTV(MULTIMOL,NDIMID,NPT),AMICV(NPT),
     4 DARTENSOR(NDIMTENSOR,NPT),IDTVCELL(MULTIMOL,NDIMCELL,NPT),
     5 IVMIGV(IMIGNODE,NPT),VMIGV(IMIGNODE,NPT),IDTMIG(IMIGTOT,NPT),
     6 VFTT(IMIGTOT,NPT),VFMULTIT(NDIMCELL,NPT),
     7 DIAMCELLV(NDIMCELL,NPT),DPIPEEXV(MULTIMOL,NPT,2),
     8 DCELLSV(MULTIMOL,NPT,NDIMCELLMAX),
     9 DPIPECAP(MULTIMOL,NDIMTENSOR,NPT),
     6 IACTIVENODEV(MULTIMOL,NDIMAMAX,NPT),
     9 ACTIVENODEV(MULTIMOL,NDIMAMAX,NPT),
     7 ISOURCENODEV(MULTIMOL,NDIMSMAX,NPT),    
     8 SOURCENODEV(MULTIMOL,NDIMSMAX,NPT),
     9 ZADATM01(MULTIMOL,NZADPMAX),ZADATM1(MULTIMOL,NZADPMAX),
     1 NZADNODF(MULTIMOL,3,NZADPMAX),CHTAXV(INDCHTAXTOT,NPT),
     2 IDLYMPHH(NPT),IDLYMPHC(MULTIMOL,NPT),RVLYMPH(NPT),
     3 HCOEFLYNOD(NDIMTENSOR,NPT),CCOEFLYNOD(MULTIMOL,NDIMTENSOR,NPT),
     4 DCOEFLYNOD(NPT)   
      DIMENSION INPUTLY(MULTIMOL,3,NZADLYMPHMX),
     1          ZADALYMH1(MULTIMOL,NZADLYMPHMX),
     2          ZADALYMH0(MULTIMOL,NZADLYMPHMX)
      DIMENSION ZADLOCAL(14,4),ZADLOCAL0(14,4),LMZADA(14,4),
     1          VLOCAL(4,4),VCONV(2,10),GRADC(2,4),VOLFLOC(14),
     2          DARCYVS(2,4),DDIFV(2,4),ILOC(4,4),LM2(4)
      DIMENSION SKES(14,4,4),SKEMS(14,4,4),SKEDS(14,4,4),LMS(14,4),
     1          TT21S(14,4),TT210S(14,4),HPS(14,10),ELS(14,10),
     2          HKS(14,10),F9S(14,4),SKEES(4,4),F9ES(4),NODEL(4),
     3          LMTOT(14)
      DIMENSION DARCYMA(2,2),DDIFMA(2,2,4),GRADP(2),VFCELL(10)
      DIMENSION ISOURCEL(4,10),SOURCEL(4,10),F9V(4)
      DIMENSION VMIGLOCAL(10,4),TT21SMIG(10,4)
      DIMENSION VFVSTOTV(10)
      DIMENSION VFLY(4),VLOCLY(4),TT1LY(4),TT1LY0(4),LMZADALY(4),
     1          SKEESLY(4,4),SKEMSLY(4,4),LMLY(4) 
             
      DIMENSION XG(15),WGT(15),NREF(6),TBK(2),VPOT(9)  
C
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
C
      IFORM  = 2
      DDARCY = 0.D0
      VBR    = 1.0D35
	AKTT   = 1./DT
	ININ=0
	IF(IPASSME.EQ.2)ININ=2
C	
C	MAT2DDIF IS USED ALSO FOR HEAT TRANSFER
      IF(IZIP.EQ.2) GO TO 15
      IF(NQE.NE.1) GO TO 15
      CALL TABF(A(LQEFN),A(LNTAQE),NQE,NQE,VREME,QQ2,NTA,IND)
      IF(IND.EQ.0) GO TO 15
      IF(ISRPS.EQ.0)
     1WRITE(3,2000) NQE,VREME
      IF(ISRPS.EQ.1)
     1WRITE(3,6000) NQE,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA ZAPREMINSKI IZVOR - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME = ',1PD12.4)
      STOP
   15 CONTINUE
C
      ICONVV    = ICONV
      IDIFFHEAT = 0
      IF(IDIFUSE.NE.0.OR.IHEAT.NE.0) IDIFFHEAT = 1
C
C     COUNTER FOR ID LOOP
      NNID=4
      ISOURCETOT=0
      ISOURCENOD=0
      NZADLY=NZADPLYV(MM)
      
      IF(MULTITIS.GT.0.AND.(IPASSME.EQ.2.OR.ISMEARED.EQ.1).OR.
     1   INDMIG.EQ.1) THEN
C
         NNID=4+NDIMCELL 
         IF(INDMIG.EQ.0) THEN
            DO I=1,NDIMCELL
               IF(ISOURCEC(I,MM).GT.0)ISOURCETOT=ISOURCETOT+1 
               IF(ISOURCEC(I,MM).EQ.3)ISOURCENOD=ISOURCENOD+1 
            ENDDO
         ELSE
            IF(ITER.EQ.0) THEN
               KID=0
               DO IC=1,NDIMCELL
                  IF(IMIGTABLE(IC).GT.0) THEN
                     KID=KID+1
                     DO J=1,NPT
                        VFTT(KID,J)=VFMULTIT(IC,J)
                     ENDDO
                  ENDIF
               ENDDO
            ENDIF
         ENDIF 
      ENDIF 
      DDIFMIG=1.0D-8
C
      CALL CLEAR(VFVSTOTV,10)
      IF(INDCELLIN.GT.0) THEN
         DO  NC=1,NDIMCELL
             NVSE=INDCELLINV(NC)
             IF(NVSE.GT.0) THEN
                DO I=1,NVSE
                   VFVSTOTV(NC)=VFVSTOTV(NC)+VFVS(NC,I)
                ENDDO
             ENDIF
         ENDDO
      ENDIF 
      NNID1=NNID
      IF(INDLYMPH.EQ.1) NNID1= NNID1+1                     
C
C     LOOP OVER ELEMENTS     
C
      DO 200 NLM2= 1,NE2D

      KKIN=0   
      KKOUT=0 
      CC2=1.D0      
C 
      CALL CLEAR(ZADLOCAL,56)
      CALL CLEAR(ZADLOCAL0,56)
      CALL ICLEAR(LMZADA,56)
      CALL CLEAR(VLOCAL,16)
      CALL CLEAR(VOLFLOC,4) 
      CALL ICLEAR(ILOC,16)
      CALL CLEAR(SKEMS,224) 
      CALL CLEAR(SKES,224)
      CALL CLEAR(SKEDS,224)
      CALL ICLEAR(LMS,56)
      CALL CLEAR(TT21S,56)
      CALL CLEAR(TT210S,56)
      CALL CLEAR(HPS,140)
      CALL CLEAR(ELS,140)
      CALL CLEAR(HKS,140)
      CALL CLEAR(F9S,56)
      CALL ICLEAR(LMTOT,14) 
      IF(ISOURCENOD.GT.0) THEN
         CALL ICLEAR(ISOURCEL,40)
         CALL CLEAR(SOURCEL,40)
      ENDIF 
      IF(INDMIG.EQ.1) CALL CLEAR(VMIGLOCAL,40)
      IF(INDLYMPH.EQ.1) THEN
         CALL CLEAR(TT1LY,4)
         CALL CLEAR(TT1LY0,4)
         CALL ICLEAR(LMLY,4)
         CALL CLEAR(SKEESLY,16)
         CALL CLEAR(SKEMSLY,16) 
      ENDIF     
C  
      DO I=1,9
        VPOT(I)=0.D0
      ENDDO
C 
C      CALL CLEAR(SKE,NDES*NDES)
C
      IF(NMAT2D.GT.1.OR.INDIFFUS.EQ.1) MAT2D=MATV(NLM2)
      IQE2=0
      IF(NQE.GT.0) IQE2=NQ(NLM2)
CE
      IF(IDARCY.NE.0) GO TO 30
      ARG=0.
	IF(indiffus.EQ.1) THEN
	  CC2=1.D0
	  GO TO 30 
	ENDIF

C	IF(ISMEARED.GT.0) GO TO 40
      GO TO 40

C     DEO DO LABELE 40 SE PRESKACE
      IF(NSTAC.EQ.0.OR.KONC.EQ.1) GO TO 40
      CALL TABF(A(LTABC),A(LNTACV),MAT2D,NMATT,ARG,CC2,NTA,IND)
   25 IF(IANIZ.EQ.0) GO TO 188
      FAX=FAKP(MAT2D,1)
      FAY=FAKP(MAT2D,2)
  188 IBX=IBFK(MAT2D,1)
      IBY=IBFK(MAT2D,2)
      IF(KONK.EQ.1) GO TO 30
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,ARG,AKX,NTA,IND)
      IF(IBY.GT.0) GO TO 180
      IF(IANIZ.EQ.0) GO TO 189
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 30
  189 AKY=AKX
      GO TO 30
  180 CALL TABF(A(LTABK),A(LNTAKV),IBY,NTABK,ARG,AKY,NTA,IND)
   30 IF(IQE2.EQ.0.OR.NQE.EQ.1) GO TO 44
      CALL TABF(A(LQEFN),A(LNTAQE),IQE2,NQE,VREME,QQ2,NTA,IND)
      IF(IND.EQ.0) GO TO 44
      WRITE(3,2000) IQE2,VREME
      STOP
   44 IF(IZIP.NE.2.OR.MAXTQE.GT.1) GO TO 40
      CALL TABF(A(LQEFN),A(LNTAQE),IQE2,NQE,ARG,QQ2,NTA,IND)
CE POTENTIAL V  FUNCTION VECTOR AT NODES removed
CE  TEMPERATURE AT NODES  VECTOR
C
   40 NCV2     = 0
      NND5     = 0
	NELZAD   = 0
	ICONTOUR = 0
C
      DO 50 I=1,NBR2
      J=NEL(NLM2,I)                 
      NCV2=NCV2+1
      NODEL(NCV2)=J
      VOLFLOC(NCV2)=VOLFRACTV(J) 
      IF(INDMIG.EQ.1) GO TO 171
C
C     PRESCRIBED
C
      IF(MULTIMOL.GT.1) GO TO 170
C
C     ONE MOLECULE CASE
      IF(NZADP.GT.0) THEN
	  DO 345 KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
	      IDOFA=IABS(IDOF)
	      IF(IPASSME.EQ.1) THEN
	         IF(IDOFA.GT.2) GO TO 345
	      ELSE
	         IF(IDOFA.LE.2.AND.ICONV.EQ.0)GO TO 345
	      ENDIF
            IF(IDOF.LT.0) THEN
	        ILOC(IDOFA,NCV2) = 1
	        ICONTOUR   = 1
	      ENDIF	      
            NELZAD=NELZAD+1
            IF(IDOF.GT.0) THEN
               LMZADA(IDOFA,NCV2)     = 1
               ZADLOCAL(IDOFA,NCV2)   = ZADATA1(KK)
               ZADLOCAL0(IDOFA,NCV2)  = ZADATA0(KK)
            ELSE
              VLOCAL(IDOFA,NCV2) = ZADATA1(KK)
            ENDIF
	    ENDIF
  345   CONTINUE
	ENDIF
	GO TO 171
C  
  170 CONTINUE
C
C     MULTI-MOLECULE CASE
      NZADPM=NZADPV(MM)
      IF(NZADPM.GT.0) THEN
	  DO 347 KK=1,NZADPM
	    NJ=NZADNODF(MM,1,KK)
	    IF(NJ.EQ.J) THEN
	       IDOF=NZADNODF(MM,2,KK)
             IDOFA=IABS(IDOF)
             NF=NZADNODF(MM,3,KK) 
	       IF(IPASSME.EQ.1) THEN
	          IF(IDOFA.GT.2) GO TO 347
	       ELSE
	          IF(IDOFA.LE.2.AND.ICONV.EQ.0)GO TO 347
	       ENDIF
             IF(IDOF.LT.0) THEN
	         ILOC(IDOFA,NCV2) = 1
	         ICONTOUR   = 1
	       ENDIF	      
             NELZAD=NELZAD+1                            
             IF(IDOF.GT.0) THEN
                LMZADA(IDOFA,NCV2)     = 1
                ZADLOCAL(IDOFA,NCV2)   = ZADATM1(MM,KK)  
                ZADLOCAL0(IDOFA,NCV2)  = ZADATM01(MM,KK)
             ELSE
                VLOCAL(IDOFA,NCV2) = ZADATM1(MM,KK)
            ENDIF
	    ENDIF
  347   CONTINUE
	ENDIF   
C   
  171 CONTINUE
C
C     CELL MIGRATION CALCULATION ------- START
C
      IF(INDMIG.EQ.1) THEN
          KK=0
          KID=0
          KMIG=0
          DO IC=1,NDIMCELL
             IC4=4+IC
             IF(IMIGTABLE(IC).GT.0) THEN
                KID=KID+1
                IF(IMIGTABLE(IC).NE.3) THEN
                   VMIGLOCAL(IC,I)=VMIGC(IC)  
                ELSE
                   KK=KK+1
                   IF(IVMIGV(KK,J).GT.0)VMIGLOCAL(IC,NCV2)=VMIGV(KK,J)
                ENDIF
                LMS(IC4,NCV2)=IDTMIG(KID,J)
                TT21S(IC4,NCV2)=VFTT(KID,J)
                TT210S(IC4,NCV2)=VFMULTIT(IC,J)     
             ENDIF
             IF(INDCHTAX.GT.0) THEN
               MM=INDCHTAXV(IC)
               IF(MM.GT.0) THEN
                  KMIG=KMIG+1
                  TT21SMIG(IC,NCV2)=CHTAXV(KMIG,J)
               ENDIF
             ENDIF  
          ENDDO
          GO TO 50                            
      ENDIF
C     CELL MIGRATION CALCULATION ----------  END   
      IF(MULTIMOL.EQ.1) THEN
         DO II=1,4
            IF(IACTIVE(II).EQ.1) THEN
               LMS(II,NCV2)=IDT(II,J)
            ENDIF
         ENDDO
      ELSE
         DO II=1,4
             LMS(II,NCV2)=IDTV(MM,II,J)
         ENDDO
      ENDIF
      IF(NDIMCELL.GT.0.AND.(IPASSME.EQ.2.OR.ISMEARED.EQ.1)) THEN
         DO II=1,NDIMCELL
            LMS(II+4,NCV2)=IDTVCELL(MM,II,J) 
         ENDDO
      ENDIF
   45 CONTINUE
C
C     LYMPH DOMAIN
      IF(INDLYMPH.EQ.1) THEN
         IF(IPASSME.EQ.1) THEN
            JJ=IDLYMPHH(J)
            LMLY(NCV2)=JJ
            VFLY(NCV2)=RVLYMPH(J)
            IF(JJ.GT.0) THEN
                IF(MULTIMOL.EQ.1) THEN
                    TT1LY(NCV2)=TT1P(JJ)
                    TT1LY0(NCV2)=TT10P(JJ)
                ELSE
                    TT1LY(NCV2)=TT1PM(MM,JJ)
                    TT1LY0(NCV2)=TT01PM(MM,JJ)
                ENDIF   
            ELSE
                DO K=1,NZADLY
                   NODE=INPUTLY(MM,1,K)
                   IDOF=INPUTLY(MM,2,K) 
                   IF(NODE.EQ.J.AND.IDOF.EQ.1) THEN
                      TT1LY(NCV2)=ZADALYMH1(MM,K)
                      TT1LY0(NCV2)=ZADALYMH0(MM,K)
                   ENDIF 
                ENDDO              
            ENDIF
         ELSE
            JJ=IDLYMPHC(MM,J)
            LMLY(NCV2)=JJ
            VFLY(NCV2)=RVLYMPH(J)
            IF(JJ.GT.0) THEN
                IF(MULTIMOL.EQ.1) THEN
                    TT1LY(NCV2)=TT1C(JJ)
                    TT1LY0(NCV2)=TT10C(JJ)
                ELSE
                    TT1LY(NCV2)=TT1CM(MM,JJ)
                    TT1LY0(NCV2)=TT01CM(MM,JJ)
                ENDIF
            ELSE
                DO K=1,NZADLY
                   NODE=INPUTLY(MM,1,K)
                   IDOF=INPUTLY(MM,2,K) 
                   IF(NODE.EQ.J.AND.IDOF.EQ.2) THEN
                      TT1LY(NCV2)=ZADALYMH1(MM,K)
                      TT1LY0(NCV2)=ZADALYMH0(MM,K)
                   ENDIF 
                ENDDO
            ENDIF         
         ENDIF
      ENDIF
C     END OF LYMPH DOMAIN
      IF(MULTIMOL.GT.1) GO TO 172
C
C      ONE MOLECULE CASE   
       DO II=1,4
          IF(IACTIVE(II).EQ.1) THEN
             JJ=IDT(II,J)
             IF(JJ.GT.0) THEN
                IF(II.LE.2) THEN
                   TT21S(II,NCV2)= TT1P(JJ)
                   TT210S(II,NCV2)= TT10P(JJ)
                ELSE
                   IF(IPASSME.EQ.2.OR.ISMEARED.EQ.1) THEN
                       TT21S(II,NCV2)= TT1C(JJ)
                       TT210S(II,NCV2)= TT10C(JJ)
                   ENDIF
                ENDIF    
	       ELSE
	          IF(LMZADA(II,NCV2).EQ.1) THEN
                    TT21S(II,NCV2)=ZADLOCAL(II,NCV2)
                    TT210S(II,NCV2)=ZADLOCAL0(II,NCV2)
                ENDIF
             ENDIF
          ENDIF
      ENDDO    
      IF(NDIMCELL.EQ.0.OR.IPASSME.EQ.1) GO TO 50
C
C     CELLS
      DO II=1,NDIMCELL
         I4=4+II
         JJ=IDTVCELL(MM,II,J)
         IF(JJ.GT.0) THEN
             TT21S(I4,NCV2)= TT1C(JJ)
             TT210S(I4,NCV2)= TT10C(JJ)
         ELSE
      	     IF(LMZADA(I4,NCV2).EQ.1) THEN
                TT21S(I4,NCV2)=ZADLOCAL(I4,NCV2)
                TT210S(I4,NCV2)=ZADLOCAL0(I4,NCV2)
             ENDIF   
         ENDIF           
      ENDDO           
      GO TO 50
C
C     MULTIMOLAR CASE
  172 CONTINUE                     
       DO II=1,4                        
          IF(IACTIVE(II).EQ.1) THEN
             JJ=IDTV(MM,II,J)
             IF(JJ.GT.0) THEN
                 IF(II.LE.2) THEN
                    TT21S(II,NCV2)= TT1PM(MM,JJ)  
                    TT210S(II,NCV2)= TT01PM(MM,JJ)
                ELSE
                    IF(IPASSME.EQ.2) THEN
                       TT21S(II,NCV2)= TT1CM(MM,JJ)
                       TT210S(II,NCV2)= TT01CM(MM,JJ)
                    ENDIF
                ENDIF  
	       ELSE                        
	          IF(LMZADA(II,NCV2).EQ.1) THEN
                    TT21S(II,NCV2)=ZADLOCAL(II,NCV2)
                    TT210S(II,NCV2)=ZADLOCAL0(II,NCV2)
                ENDIF
             ENDIF
          ENDIF
       ENDDO
       IF(NDIMCELL.GT.0.AND.(IPASSME.EQ.2.OR.ISMEARED.EQ.1)) THEN
           DO II=1,NDIMCELL
                 I4=4+II
                 JJ=IDTVCELL(MM,II,J)
                 IF(JJ.GT.0) THEN
                    TT21S(I4,NCV2)= TT1CM(MM,JJ)
                    TT210S(I4,NCV2)= TT01CM(MM,JJ)
                 ELSE
      	            IF(LMZADA(I4,NCV2).EQ.1) THEN
                       TT21S(I4,NCV2)=ZADLOCAL(I4,NCV2)
                       TT210S(I4,NCV2)=ZADLOCAL0(I4,NCV2)
                    ENDIF   
                 ENDIF           
          ENDDO
       ENDIF                              
C
   50 CONTINUE
   
C----------------  END OF LOOP OVER ELEMENT NODES-----

C
C     SOURCE TERMS   ISOURCETOT
      IF(ISOURCENOD.GT.0.AND.INDMIG.EQ.0) THEN
         KK=0
         DO NC=1,NDIMCELL
            IF(ISOURCEC(NC,MM).GT.0) THEN
               IF(ISOURCEC(NC,MM).EQ.3) THEN    
                  KK=KK+1           !INTERPOLATED FROM NODE
                  DO I=1,4
                    ISOURCEL(I,NC)=ISOURCENODEV(MM,KK,NODEL(I))
                    SOURCEL(I,NC)=SOURCENODEV(MM,KK,NODEL(I))
                  ENDDO
               ELSE
                  CONTINUE !CONSTANT SOURCE
               ENDIF
            ENDIF
         ENDDO 
      ENDIF
        
  300 IELX2=NCV2
      IF(INDMIG.EQ.1) GO TO 56
      DO I=1,4
         IF(IACTIVE(I).EQ.1) THEN
            DO J=1,4
               LMTOT(I)=LMTOT(I)+LMS(I,J)
            ENDDO      
         ENDIF
      ENDDO
      IF(NDIMCELL.GT.0.AND.(IPASSME.EQ.2.OR.ISMEARED.EQ.1)) THEN
         DO I=1,NDIMCELL
            DO J=1,4
               LMTOT(I+4)=LMTOT(I+4)+LMS(I+4,J)
            ENDDO
         ENDDO
      ENDIF
C
CE  NODAL COORDINATES OF ELEMENTS MAtt21sTRIX
   56 CONTINUE
      K=0
      DO 60 I=1,NBR2
      IF(NEL(NLM2,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM2,I)
      DO 55 J=1,2
   55 CK2(K,J)=CORD(KK,J)
   60 CONTINUE 
C
      THICK=THI2D(NLM2)
      CALL CLEAR(F9V,4)
      CALL CLEAR(SKEES,16)
      !IF(INDAX.NE.0) THICK=1.D0 
C
CE    GAUSS POINTS  LOOP =============================================
C
      KKABSORB=0
      NGAUSC=0
      DO 101 NGX=1,NGAU2X 
      JR=NREF(NGAU2X) + NGX
      R = XG(JR)
      DO 100 NGY=1,NGAU2Y
      JS=NREF(NGAU2Y) + NGY
      S = XG(JS)
      WT=WGT(JR)*WGT(JS)
	NGAUSC=NGAUSC+1
      CALL JACT2(R,S,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
      RAD=1.
C      IF(INDAX.EQ.0) GO TO 281
C
      IF(INDAX.EQ.1) THEN
         RAD=0.
         DO I=1,NCV2
           RAD=RAD+H2(I)*CK2(I,1)
         ENDDO
      ENDIF
C
CE    PRESSURE AT GAUSS POINT
C
      GO TO 70
      IF(NSTAC.EQ.0.OR.KONC.EQ.0) GO TO 70
      IF(NTACV(MAT2D).EQ.0) GO TO 67
      CALL TABF(A(LTABC),A(LNTACV),MAT2D,NMATT,TEMP,CC2,NTA,IND)
      IF(IND.EQ.0) GO TO 70
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) MAT2D,TEMP
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) MAT2D,TEMP
 2005 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA SPEC. TOPLOTA - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6005 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SPECIFIC HEAT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
   67 CALL ANALCF(MAT2D,TEMP,CC2,A(LGUSM))
   70 CONTINUE
C
      FAX=1.D0
      FAY=1.D0
C      
CE  ELEMENT MATRICES
C
   81 WDT=WT*DET21*RAD*THICK
      WDT0=WDT
C
      VEFFEC = 0.D0
      DIAM   = 0.D0
      DO I=1,NCV2
         VEFFEC=VEFFEC+ H2(I)*VOLFLOC(I)
         DIAM=DIAM+H2(I)*DIAMSMEV(NODEL(I))
      ENDDO
      VEFFELY=0.D0
C     IT IS TAKON NOW FIRST ROW IN TABLE
      DIAMLY=TABLYD(1)
      IF(INDLYMPH.EQ.1) THEN
         DO I=1,NCV2
            VEFFELY=VEFFELY+ H2(I)*VFLY(I)
         ENDDO 
         IF(ITABLYD.EQ.0) THEN
             DIAMLY=0.D0
             DO I=1,NCV2
               DIAMLY=DIAMLY+H2(I)*DCOEFLYNOD(NODEL(I))
             ENDDO
         ENDIF     
      ENDIF
      IF(MULTITIS.GT.0) THEN
         KK=0
         DO I=1,NDIMCELL
            VFCELL(I)=0.D0
            DO J=1,NCV2   
                 VFCELL(I)=VFCELL(I)+H2(J)*VFMULTIT(I,NODEL(J))
            ENDDO
        ENDDO
      ENDIF              
C
C     CONVECTION
C
      AMI=0.D0
      DDARCY=0.D0
      DDARCY2=0.D0
      IF(ICONV.EQ.1.AND.INDMIG.EQ.0) THEN
         IF(IACTIVE(1).EQ.1) THEN
            IF(ISMEARED.EQ.0) THEN
               IF(ICMTABLE(1).NE.3) THEN
                  DO I=1,NCV2
                     AMI=AMI+H2(I)*AMICV(NODEL(I))
                  ENDDO
               ELSE
                  AMI=AMICOEFP
               ENDIF
               AKPIPE=DIAM*DIAM/(32.*AMI)
               DARCYVS(1,1)=AKPIPE
               DARCYVS(2,1)=AKPIPE
            ELSE
               IF(ICMTABLE(6).NE.3) THEN   ! KOREKCIJA MK 26.12.17 
C                  AKCAP=DIAM*DIAM/(64.*AMICOEFC)
                  IF(IANIZS.NE.2) THEN     ! KORISTIMO UVEK IANIZS.NE.2
C                     DARCYVS(1,1)=DARCYTENSOR(1)
C                     DARCYVS(2,1)=DARCYTENSOR(2)
                      DARCYVS(1,1)=DARCYTENSOR(1)
                      DARCYVS(2,1)=DARCYTENSOR(2)
                  ELSE
                     DARCYMA(1,1)=DARCYTENSOR(1)
                     DARCYMA(1,2)=DARCYTENSOR(3)
                     DARCYMA(2,1)=DARCYTENSOR(3)
                     DARCYMA(2,2)=DARCYTENSOR(2)
                  ENDIF
               ELSE
                  IF(IANIZS.NE.2) THEN
                     DO I=1,NCV2
                        DDARCY=DDARCY+H2(I)*DARTENSOR(1,NODEL(I))
                        DDARCY2=DDARCY2+H2(I)*DARTENSOR(2,NODEL(I))  
                     ENDDO  
                     DARCYVS(1,1)=DDARCY
                     DARCYVS(2,1)=DDARCY2
                  ELSE
                     DDARCY3=0.D0
                     DO I=1,NCV2
                        DDARCY=DDARCY+H2(I)*DARTENSOR(1,NODEL(I))
                        DDARCY2=DDARCY2+H2(I)*DARTENSOR(2,NODEL(I)) 
                        DDARCY3=DDARCY3+H2(I)*DARTENSOR(3,NODEL(I)) 
                     ENDDO                  
                     DARCYMA(1,1)=DDARCY
                     DARCYMA(1,2)=DDARCY3
                     DARCYMA(2,1)=DDARCY3
                     DARCYMA(2,2)=DDARCY2              
                  ENDIF
               ENDIF   
            ENDIF
         ENDIF
         DDARCY=0.D0
         IF(IACTIVE(2).EQ.1) THEN
            IF(ICMTABLE(1).NE.3) THEN 
              DDARCY=DARCYCOEF
            ELSE 
               DO I=1,NCV2
                  DDARCY=DDARCY+H2(I)*DARCYCOEFV(NODEL(I))
               ENDDO
            ENDIF
            DARCYVS(1,2)=DDARCY 
            DARCYVS(2,2)=DDARCY       
         ENDIF     
      ENDIF
C
C     DIFFUSION
C
      DDIF=0.D0
      DDIFP=0.D0
      DDIFP2=0.D0
      IF((IPASSME.EQ.2.AND.INDMIG.EQ.0).OR.(ISMEARED.EQ.1)) THEN
         IF(IACTIVE(3).EQ.1)THEN
            IF(ISMEARED.EQ.0) THEN 
               IF(IDPIPEEXC(1,MM).NE.3) THEN
                  DDIFP=DPIPEEXC(1,MM) 
               ELSE  
                  DO I=1,NCV2
                    DDIFP=DDIFP+H2(I)*DPIPEEXV(MM,NODEL(I),2)
                  ENDDO
               ENDIF
               DDIFV(1,3)=DDIFP
               DDIFV(2,3)=DDIFP
            ELSE 
               IF(IDPIPECAPC(MM).NE.3) THEN
                  IF(IANIZS.NE.2) THEN           ! IANIZS.NE.2 UVEK
                     DDIFV(1,3)=DPIPECAPC(1,MM)
                     DDIFV(2,3)=DPIPECAPC(2,MM)
                  ELSE
                     DDIFMA(1,1,3)=DPIPECAPC(1,MM)
                     DDIFMA(1,2,3)=DPIPECAPC(3,MM)
                     DDIFMA(2,1,3)=DPIPECAPC(3,MM)
                     DDIFMA(2,2,3)=DPIPECAPC(2,MM)      
                  ENDIF
               ELSE
                  IF(IANIZS.NE.2) THEN                      
                     DO I=1,NCV2
                        DDIFP=DDIFP+H2(I)*DPIPECAP(MM,1,NODEL(I))
                        DDIFP2=DDIFP2+H2(I)*DPIPECAP(MM,2,NODEL(I))  
                     ENDDO 
                     DDIFV(1,3)=DDIFP
                     DDIFV(2,3)=DDIFP2
                  ELSE
                     DDIFP3=0.D0
                     DO I=1,NCV2
                        DDIFP=DDIFP+H2(I)*DPIPECAP(MM,1,NODEL(I))
                        DDIFP2=DDIFP2+H2(I)*DPIPECAP(MM,2,NODEL(I))
                        DDIFP3=DDIFP3+H2(I)*DPIPECAP(MM,3,NODEL(I))  
                     ENDDO                 
                     DDIFMA(1,1,3)=DDIFP
                     DDIFMA(1,2,3)=DDIFP3
                     DDIFMA(2,1,3)=DDIFP3
                     DDIFMA(2,2,3)=DDIFP2  
                  ENDIF
               ENDIF
            ENDIF
         ENDIF  
           
         DDIF=0.D0
         IF(IACTIVE(4).EQ.1.AND.(IPASSME.EQ.2.OR.ISMEARED.EQ.1)) THEN
             IF(IDPIPEEXC(2,MM).NE.3) THEN
                DDIF=DPIPEEXC(2,MM)
             ELSE
                DO I=1,NCV2
                   DDIF=DDIF+H2(I)*DPIPEEXV(MM,NODEL(I),2)
                ENDDO
             ENDIF
             DDIFV(1,4)=DDIF
             DDIFV(2,4)=DDIF
         ENDIF
      ENDIF
C
      VCELLTOT=0.D0
      IF(MULTITIS.GT.0) THEN
         DO I=1,NDIMCELL
            VCELLTOT=VCELLTOT+VFCELL(I)
         ENDDO
      ENDIF
C
C     LOOP OVER DOMAINS, CAPILLARY, EX.CELL SPACE, CELLS, LYMPH
      DO 100 ID=1,NNID1
      IF(ID.EQ.NNID1.AND.INDLYMPH.EQ.1) THEN
C     LYMPHATIC SYSEM
         WDT=VEFFELY*WDT0
         GO TO 167
      ENDIF        
      IF(INDMIG.EQ.1.AND.ID.LE.4) GO TO 100
      IF(ID.LE.4) THEN
         IF(IACTIVE(ID).EQ.0) GO TO 100
      ENDIF
      IF(ID.GT.2.AND.IPASSME.EQ.1) GO TO 100
      IF(INDMIG.EQ.1) THEN
         ID4=ID-4
         IF(IMIGTABLE(ID4).EQ.0) GO TO 100
         IF(IMIGTABLE(ID4).NE.3) THEN
            VCONV(1,ID4)=VMIGC(ID4)
            VCONV(2,ID4)=VMIGC(ID4)
         ELSE
            VCONV(1,ID4)=0.D0
            DO I=1,4
               VCONV(1,ID4)=VCONV(1,ID4)+H2(I)*VMIGLOCAL(ID4,I)
            ENDDO
            VCONV(2,ID4)=VCONV(1,ID4)
         ENDIF
         IF(INDCHTAX.GT.0) THEN
            MM=INDCHTAXV(ID4)
            IF(MM.GT.0) THEN
                GRADCX=0.D0
                GRADCY=0.D0
                DO I=1,NCV2
                  GRADCX=GRADCX+PJ2(1,I)*TT21SMIG(ID4,I)
                  GRADCY=GRADCY+PJ2(2,I)*TT21SMIG(ID4,I)
                ENDDO
            ENDIF
            GRADT=DSQRT(GRADCX*GRADCX+GRADCY*GRADCY)
            IF(GRADT.GT.1.D-08) THEN
               GRADCX=GRADCX/GRADT
               GRADCY=GRADCY/GRADT
               VCONV(1,ID4)=VCONV(1,ID4)*GRADCX
               VCONV(2,ID4)=VCONV(2,ID4)*GRADCY
            ENDIF
         ENDIF    
      ENDIF
      IF(LMTOT(ID).EQ.0.AND.INDMIG.EQ.0) GO TO 100 
      IF(ID.EQ.1.OR.ID.EQ.3) THEN
         WDT=VEFFEC*WDT0    
      ELSEIF(ID.EQ.2) THEN
         WDT=(1.-VEFFEC-VEFFELY)*WDT0
      ELSEIF(ID.EQ.4) THEN
         WDT=(1.-VEFFEC-VEFFELY)*(1.-VCELLTOT)*WDT0
      ELSE
         WDT=(1.-VEFFEC-VEFFELY)*VFCELL(ID-4)*(1.-VFVSTOTV(ID-4))*WDT0
      ENDIF
      IF(ICONV.NE.0.AND.(ID.EQ.1.OR.ID.EQ.2).AND.IPASSME.EQ.2) THEN
         GRADP(1)=0.D0
         GRADP(2)=0.D0
         DO K=1,NCV2 
              GRADP(1)=GRADP(1)+PJ2(1,K)*TT21S(ID,K)
              GRADP(2)=GRADP(2)+PJ2(2,K)*TT21S(ID,K)
         ENDDO
         IF(IANIZS.NE.2.OR.ID.NE.1) THEN 
            VCONV(1,ID)=-DARCYVS(1,ID)*GRADP(1)
            VCONV(2,ID)=-DARCYVS(2,ID)*GRADP(2)
         ELSE
            VCONV(1,ID)=-DARCYMA(1,1)*GRADP(1)-DARCYMA(1,2)*GRADP(2)
            VCONV(2,ID)=-DARCYMA(2,1)*GRADP(1)-DARCYMA(2,2)*GRADP(2)
         ENDIF
      ENDIF    
C
C     SOURCE TERMS   
C
      SORCEID=0.D0
      ISOURCEID=0
      IF(ID.GT.4.AND.ISOURCETOT.GT.0.AND.INDMIG.EQ.0) THEN
         ISOURCEID=1
         ID4=ID-4
         IF(ISOURCEC(ID4,MM).GT.0) THEN
            IF(ISOURCENOD.EQ.0) THEN
                SORCEID=SOURCEC(ID4,MM)
            ELSE    
                KK=0
                DO NC=1,ID4
                  IF(ISOURCEC(NC,MM).EQ.3) KK=KK+1               
                ENDDO 
                IF(ISOURCEC(ID4,MM).EQ.3)THEN   !INTERPOLATED FROM NODE
                  DO I=1,4
                    IF(ISOURCEL(I,ID4).GT.0)SORCEID=SORCEID+H2(I)*
     1              SOURCEL(I,ID4)
                  ENDDO
                ELSE
                  SORCEID= SOURCEC(ID4,MM)!CONSTANT SOURCE
                ENDIF
             ENDIF
             DO I=1,4
                F9V(I)=F9V(I)+H2(I)*SORCEID*WDT      
             ENDDO
         ENDIF
      ENDIF     
C
  167 CONTINUE
      IF(IDARCY.NE.0.OR.ISMEARED.NE.1.OR.INDMIG.EQ.1) GO TO 400     
C     
CE  CALCULATION OF CONDUCTION MATRIX AND SPECIFIC HEAT MATRIX OF ELEMENT
C
      IF(ID.LE.2) GO TO 100
      AKX=DDIFV(1,ID)
      AKY=DDIFV(2,ID)
      AKXY=2.*DDIFMA(1,2,ID)
      K=0
      DO 85 I=1,NCV2
      DO 83 J=I,NCV2
      K=K+1
      IF(NSTAC.EQ.0) GO TO 87
      HH2= H2(I)*H2(J)*WDT
      ELS(ID,K)=ELS(ID,K)+CC2*HH2   
   87 IF(INDSK.EQ.0) GO TO 83
      PJX=PJ2(1,I)*PJ2(1,J)
      PJY=PJ2(2,I)*PJ2(2,J)
      IF(IANIZS.NE.2) THEN
         HPS(ID,K) = HPS(ID,K) +(AKX*PJX+AKY*PJY)*WDT
      ELSE
         PJXY=PJ2(1,I)*PJ2(2,J)
         HPS(ID,K) = HPS(ID,K) +(AKX*PJX+AKY*PJY+AKXY*PJXY)*WDT
      ENDIF
   83 CONTINUE
      IF(IQE2.EQ.0) GO TO 85
CE  CALCULATION OF RIGHT-SIDE VECTOR
      GJ=1.
      IZ=1
C      IF(ITOR.NE.2) GO TO 86
C      IZ=-1
C      VX=0.
C      VY=0.
C      DO 84 NV=1,NCV2
C      VX=VX+PJ2(1,NV)*VPOT(NV)
C      VY=VY+PJ2(2,NV)*VPOT(NV)
C   84 CONTINUE
C      GJ=VX**2+VY**2
   86 F9S(ID,I)=F9S(ID,I)+H2(I)*WDT*GJ*QQ2**IZ
   85 CONTINUE
      IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
      TBK(1)=0.
      TBK(2)=0.
      DO 151 J=1,2
      DO 150 I=1,NCV2
  150 TBK(J)=TBK(J)+PJ2(J,I)*TT21S(ID,I)
  151 CONTINUE
      TBK(1)=AKX*TBK(1)
      TBK(2)=AKY*TBK(2)
      DO 152 I=1,NCV2
      DO 153 J=1,2
  153 F9S(ID,I)=F9S(ID,I)-(PJ2(J,I)*TBK(J))*WDT
  152 CONTINUE
C
      GO TO 100

  400 CONTINUE
C 
C     DARCY AND DIFFUSION MATRICES
C
      IF(((ICONVV.NE.0.AND.ID.LE.2).OR.(INDLYMPHH.EQ.1.AND.ID.EQ.NNID1))
     1      .AND.IPASSME.EQ.1) THEN
         IF(INDLYMPHH.EQ.1.AND.ID.EQ.NNID1) THEN
C            LYMPHATIC DOMAIN         
             AKCAP=0.5*DIAMLY*DIAMLY/(32.*TENSORLYP(1,1))  
             AKX=AKCAP*WDT
             AKY=AKX
             AKXY=0.D0     
C             AKX = TENSORLYP(1,1)*WDT 
C             AKY = TENSORLYP(1,1)*WDT
C             AKXY = TENSORLYP(1,3)*WDT
  
             DO I=1,NCV2
                DO J=1,NCV2
                   PJX = PJ2(1,I)*PJ2(1,J)
                   PJY = PJ2(2,I)*PJ2(2,J)
                   IF(IANIZS.NE.2) THEN
                      SKEESLY(I,J) = SKEESLY(I,J) + AKX*PJX + AKY*PJY
                   ELSE
                      PJXY = PJ2(1,I)*PJ2(2,J)
                      PJYX = PJ2(2,I)*PJ2(1,J)
                      SKEESLY(I,J) = SKEESLY(I,J) + AKX*PJX + AKY*PJY +
     1                AKXY*(PJXY+PJYX)
                  ENDIF
               ENDDO
            ENDDO             
            GO TO 100            
        ELSE
           IF(IANIZS.NE.2.OR.ID.NE.1) THEN
              AKX = DARCYVS(1,ID)*WDT 
              AKY = DARCYVS(2,ID)*WDT
           ELSE
              AKX  = DARCYMA(1,1)*WDT
              AKY  = DARCYMA(2,2)*WDT
              AKXY = DARCYMA(1,2)*WDT
           ENDIF
        ENDIF
        DO I=1,NCV2
          DO J=1,NCV2
             PJX = PJ2(1,I)*PJ2(1,J)
             PJY = PJ2(2,I)*PJ2(2,J)
             IF(IANIZS.NE.2.OR.ID.NE.1) THEN
               SKES(ID,I,J) = SKES(ID,I,J) + AKX*PJX + AKY*PJY
             ELSE
               PJXY = PJ2(1,I)*PJ2(2,J)
               PJYX = PJ2(2,I)*PJ2(1,J)
               SKES(ID,I,J) = SKES(ID,I,J) + AKX*PJX + AKY*PJY +
     1           AKXY*(PJXY+PJYX)
             ENDIF
          ENDDO
        ENDDO
      ENDIF
C   
      INDIFFCALC=0
      IF(IDIFFHEAT.NE.0.AND.IPASSME.EQ.2.AND.INDMIG.EQ.0) THEN
         IF(INDLYMPH.EQ.0) THEN
            IF(ID.GT.2) INDIFFCALC=1
         ELSE
            IF(ID.GT.2.AND.ID.LE.NNID)INDIFFCALC=1
            IF(INDLYMPHC.EQ.1.AND.ID.EQ.NNID1) INDIFFCALC=1 
         ENDIF
      ENDIF
C 
C     1   (ID.LE.NNID.AND.INDLYMPHC.EQ.0))   
C      IF(((IDIFFHEAT.NE.0.AND.IPASSME.EQ.2).AND.((ID.GT.2.AND.
C     1   (ID.LE.NNID.AND.INDLYMPHC.EQ.0)).OR.
C     1  (INDLYMPHC.EQ.1.AND.ID.EQ.NNID1)).OR.INDMIG.EQ.1.
C     1   OR.ISMEARED.EQ.1)THEN

      IF(INDIFFCALC.EQ.1) THEN
c    
         AKTW=CC2*AKTT*WDT       
         IF(INDLYMPHC.EQ.1.AND.ID.EQ.NNID1) THEN
            GO TO 136
         ENDIF
         IF(ID.LE.4) THEN
           IF(IANIZS.NE.2.OR.ID.NE.3) THEN
              AKDWX=DDIFV(1,ID)*WDT
              AKDWY=DDIFV(2,ID)*WDT
           ELSE
              AKDWX=DDIFMA(1,1,3)*WDT   
              AKDWY=DDIFMA(2,2,3)*WDT
              AKDWXY=DDIFMA(1,2,3)*WDT       
           ENDIF
        ELSEIF (INDMIG.EQ.0) THEN
           IF(NDIMCELLMAX.GT.0.AND.ICELLC(ID-4,MM).EQ.3)
     1     THEN
              KK=0                  
              DO I=1,ID-4    
                IF(ICELLC(I,MM).EQ.3) THEN
                   KK=KK+1              
                ENDIF
              ENDDO
              DDD=0.D0   
              DO I=1,NCV2  
                 NODE=NEL(NLM2,I)                
                 DDD=DDD+H2(I)*DCELLSV(MM,NODE,KK)
              ENDDO
           ELSE
             DDD=CELLC(ID-4,MM)
           ENDIF
           IF(INDCELLIN.GT.0)DDD=DDIFFICY(ID-4,MM)
           !IANIZS=2
           AKDWX=DDD*WDT
           AKDWY=AKDWX
           AKDWXY=0.D0
        ENDIF
        IDC=ID-2
        IF(INDMIG.EQ.1) THEN
           IDC=ID-4
           AKDWX=DDIFMIG*WDT
           AKDWY=AKDWX
           AKDWXY=0.D0
        ENDIF      
C  
        DO 405 I=1,NCV2
          H2TWI = H2(I)*AKTW
          H2WI  = H2(I)*WDT
          DO 405 J=1,NCV2
            PJX = PJ2(1,I)*PJ2(1,J)
            PJY = PJ2(2,I)*PJ2(2,J)
            SKEMS(ID,I,J)=SKEMS(ID,I,J)+H2TWI*H2(J)
            IF((IANIZS.NE.2.OR.ID.NE.3).OR.INDMIG.EQ.1) THEN
               SKEDS(ID,I,J)=SKEDS(ID,I,J)+PJX*AKDWX+PJY*AKDWY
            ELSE
               PJXY = PJ2(1,I)*PJ2(2,J)
               PJYX = PJ2(2,I)*PJ2(1,J)
               SKEDS(ID,I,J)=SKEDS(ID,I,J)+PJX*AKDWX+PJY*AKDWY+
     1                                     AKDWXY*(PJXY+PJYX)
            ENDIF
            IF((ICONV.EQ.1.AND.IFORM.EQ.2.AND.ID.LE.4).OR.INDMIG.EQ.1)
     1         THEN
                COEFFV=VCONV(1,IDC)*PJ2(1,J)+VCONV(2,IDC)*PJ2(2,J)
                SKEDS(ID,I,J)=SKEDS(ID,I,J)+H2WI*COEFFV
            ELSE
C                ONLY IFORM=2 IS USED
               CONTINUE
C              SKEDS(ID,I,J)=SKEDS(ID,I,J)+(PJX+PJY)*AKDW
C              SKEPS(ID,I,J)=SKEPS(ID,I,J)-H2PI*(GRADC(1,ID)*PJ2(1,J)+
C     1                                GRADC(2,ID)*PJ2(2,J))
            ENDIF       
  405   CONTINUE
        GO TO 100
  136   CONTINUE 
C
C       LYMPHATIC DOMAIN  
C
        AKDWX=TENSORLYC(MM,1,1)*WDT   
        AKDWY=TENSORLYC(MM,1,2)*WDT 
        AKDWXY=TENSORLYC(MM,1,3)*WDT  
        DO I=1,NCV2
           H2TWI = H2(I)*AKTW
           H2WI  = H2(I)*WDT
           DO J=1,NCV2
             PJX = PJ2(1,I)*PJ2(1,J)
             PJY = PJ2(2,I)*PJ2(2,J)
             SKEMSLY(I,J)=SKEMSLY(I,J)+H2TWI*H2(J)
             SKEESLY(I,J)=SKEESLY(I,J)+PJX*AKDWX+PJY*AKDWY
             IF(IANIZS.EQ.2) THEN
               PJXY = PJ2(1,I)*PJ2(2,J)
               PJYX = PJ2(2,I)*PJ2(1,J)
               SKEESLY(I,J)=SKEESLY(I,J)+AKDWXY*(PJXY+PJYX)
             ENDIF
             IF(INDLYMPHH.EQ.1) THEN
                COEFFV=VCONV(1,IDC)*PJ2(1,J)+VCONV(2,IDC)*PJ2(2,J)
                SKEESLY(I,J)=SKEESLY(I,J)+H2WI*COEFFV
             ENDIF
           ENDDO    
        ENDDO         
      ENDIF
C 
  100 CONTINUE
  101 CONTINUE
C
C     KRAJ PETLJE PO GAUSOVIM TACKAMA
C
C     PETLJA PO DOMENIMA
      DO 500 ID=1,NNID1 
C    INDLYMPH,INDLYMPHH,INDLYMPHC  TT1LY  TT1LY0
      IF(INDLYMPH.EQ.1.AND.ID.EQ.NNID1) THEN
         DO I=1,4
            LM2(I)=LMLY(I)
         ENDDO
         CALL CLEAR(SKEES,16)
         CALL CLEAR(F9ES,4)
         IF(IPASSME.EQ.1.AND.INDLYMPHH.EQ.1) THEN
            DO I=1,NCV2
               DO J=1,NCV2
                  SKEES(I,J)=SKEESLY(I,J)
                  F9ES(I)=F9ES(I)-SKEESLY(I,J)*TT1LY(J)
               ENDDO
            ENDDO
         ELSE IF(IPASSME.EQ.2.AND.INDLYMPHC.EQ.1) THEN
            DO I=1,NCV2
               DO J=1,NCV2
                 F9ES(I)=F9ES(I)-SKEMSLY(I,J)*(TT1LY(J)-
     1           TT1LY0(J))-SKEESLY(I,J)*TT1LY(J)
                 SKEES(I,J)=SKEESLY(I,J)+SKEMSLY(I,J)
               ENDDO
            ENDDO
         ENDIF
         GO TO 157        
      ENDIF
C      
      IF(INDMIG.EQ.1) THEN
         IF(ID.LE.4) GO TO 500
         IF(IMIGTABLE(ID-4).EQ.0) GO TO 500
      ENDIF   
      IF(ID.LE.4) THEN
        IF(IACTIVE(ID).EQ.0) GO TO 500
      ENDIF
      IF(ID.LE.2) THEN
        IF(IPASSME.EQ.2) GO TO 500
      ELSE
        IF(IPASSME.EQ.1) GO TO 500
      ENDIF
      IF(LMTOT(ID).EQ.0.AND.INDMIG.EQ.0) GO TO 500  
      INDVE=1
      IF(ID.EQ.2) INDVE=2   
      CALL CLEAR(SKEES,16)
      CALL CLEAR(F9ES,4)
      IF(IDARCY.NE.0) THEN
        IF(ID.LE.2) THEN
          DO I=1,NCV2
            DO J=1,NCV2
              SKEES(I,J)=SKES(ID,I,J)
              F9ES(I)=F9ES(I)-SKES(ID,I,J)*TT21S(ID,J)
            ENDDO
          ENDDO
        ELSE
          DO 430 I=1,NCV2
             DO 430 J=1,NCV2
             IF(IFORM.EQ.2) THEN
                 SKEES(I,J)=SKEES(I,J)+SKEMS(ID,I,J)+SKEDS(ID,I,J)
                 F9ES(I)=F9ES(I)-SKEMS(ID,I,J)*(TT21S(ID,J)-
     1           TT210S(ID,J))-SKEDS(ID,I,J)*TT21S(ID,J)
             ELSE
                 CONTINUE
C                KORISTI SE SAMO IFORM=2
C               SKEES(I,J)=SKEES(I,J)+SKEMS(ID,I,J)+SKEDS(ID,I,J)
C               SKE(II,J)=SKE(II,J)+SKEP(I,J)
C               F9(II)=F9(II)-SKEM(I,J)*(TT21(JJ)-TT210(JJ))-
C     1                       SKED(I,J)*TT21(JJ)-SKEP(I,J)*TT21(J)
             ENDIF
  430     CONTINUE 
        ENDIF  
c
        IF(ICONTOUR.EQ.0.OR.ID.GT.2) GO TO 149
c
C       FLUXES FROM PRESCRIBED VELOCITIES AT THE BOUNDARY
C
        DO 375 ISEG=1,4
        NODE1C=ISEG
	  NODE2C=ISEG+1
	  IF(ISEG.EQ.4) NODE2C=1
        IF(ILOC(ID,NODE1C).EQ.0.OR.ILOC(ID,NODE2C).EQ.0) GO TO 375
	  VV1=VLOCAL(ID,NODE1C)
	  VV2=VLOCAL(ID,NODE2C)
	  NN1=NEL(NLM2,NODE1C)
	  NN2=NEL(NLM2,NODE2C)
	  VOLFRACTL=0.5*(VOLFRACTV(NN1)+VOLFRACTV(NN2))
	  IF(ID.EQ.2)VOLFRACTL=1.-VOLFRACTL
	  DO J=1,2
          CK2(1,J)=CORD(NN1,J)
          CK2(2,J)=CORD(NN2,J)
        ENDDO		        
	  DX=VOLFRACTL*(CK2(2,1)-CK2(1,1))
        DY=VOLFRACTL*(CK2(2,2)-CK2(1,2))
      	ELL=DSQRT(DX*DX+DY*DY)
C
C       NORMAL VELOCITY TO THE SEGMENT - IN-VELOCITY CONSIDERED POSITIVE
C       NODES 1-2 ARE IN COUNTER-CLOCKWISE SENSE
        ANX=DY/ELL
        ANY=-DX/ELL
        ELL=0.5*ELL
C
        DO 373 I=1,NGAU2X  
        JR=NREF(NGAU2X) + I
        RRR = XG(JR)
        HH1=0.5*(1.D0-RRR)
        HH2=0.5*(1.D0+RRR)
        DUM=1.D0 
        IF(INDAX.EQ.1) THEN  
           DUM=HH1*CK2(1,2)+HH2*CK2(2,2)
        ENDIF
        WDT=WGT(JR)*DABS(DUM)*ELL*THICK
        VVV=HH1*VV1+HH2*VV2
        F9ES(NODE1C)=F9ES(NODE1C)-VVV*HH1*WDT
        F9ES(NODE2C)=F9ES(NODE2C)-VVV*HH2*WDT
  373   CONTINUE
C       COMPONENTS OF VELOCITIES 
c        IF(IPRINTVEL.EQ.1) THEN
c           NZADCONTUREV(INDVE,NN1)=NZADCONTUREV(INDVE,NN1)+1
c	     NZADCONTUREV(INDVE,NN2)=NZADCONTUREV(INDVE,NN2)+1
c           ZADAVXYZ(INDVE,1,NN1)=ZADAVXYZ(INDVE,1,NN1)+VVV*ANX
c           ZADAVXYZ(INDVE,2,NN1)=ZADAVXYZ(INDVE,2,NN1)+VVV*ANY
c           ZADAVXYZ(INDVE,1,NN2)=ZADAVXYZ(INDVE,1,NN2)+VVV*ANX
c           ZADAVXYZ(INDVE,2,NN2)=ZADAVXYZ(INDVE,2,NN2)+VVV*ANY
c        ENDIF
  375   CONTINUE   
        GO TO 149
      ENDIF
C
C     SLUCAJ KADA NIJE DARSIJEV PROBLEM  - NE KORISTI SE U OVOJ SUBROUTINE
C     PARAMETAR IDARCY.NE.0 
C
      IF (INDVEL .EQ. 1) GO TO 200
	if(INDFLUXKC.eq.1.and.NELZAD.eq.0) go to 135
      IF(NSTAC.EQ.0) GO TO 740
      DO  I=1,MEL2D
         ELS(ID,I)=ELS(ID,I)/DT
	ENDDO
      K=0
      DO I=1,NCV2
        DO J=I,NCV2
          K=K+1
          SKEES(I,J)=ELS(ID,K)
          SKEES(J,I)=SKEES(I,J)
	  ENDDO
	ENDDO
      DO  I=1,NCV2
         DO  J=1,NCV2
          F9ES(I)=F9ES(I)+SKEES(I,J)*TT210S(ID,J)
         ENDDO
      ENDDO
C 
  740 DO I=1,MEL2D
        HPS(ID,I)=HPS(ID,I)+ELS(ID,I)
      ENDDO
      K=0
      DO I=1,NCV2
        DO J=I,NCV2
          K=K+1
          SKEES(I,J)=HPS(ID,K)
          SKEES(J,I)=SKEES(I,J)
	  ENDDO
	ENDDO    
      DO I=1,NCV2
        DO J=1,NCV2
          F9ES(I)=F9ES(I)-SKEES(I,J)*TT21S(ID,J)
        ENDDO
	ENDDO
	IF(INDSK.EQ.0) THEN
	  DO I=1,MEL2D
          HP(I)=0.D0
        ENDDO
      ENDIF
C
  149 CONTINUE
      
      IF(IDARCY.NE.0) THEN
         DO I=1,4
           DO J=1,4
              SKEES(I,J)=AEFF*SKEES(I,J)
           ENDDO
           F9ES(I)=AEFF*F9ES(I)
         ENDDO
      ENDIF
c      
      IF(INDFLUX.EQ.1) GO TO 137
  135 CONTINUE
C
      DO I=1,4
         LM2(I)=LMS(ID,I)
      ENDDO
      IF(ISOURCEID.EQ.1.AND.ID.GT.4.AND.INDMIG.EQ.0) THEN
          DO I=1,4
              F9ES(I)=F9ES(I)+F9V(I)
              DABSCI= TT21S(ID,I) 
              IF(DABSCI.GT.1E-6)SKEES(I,I)=SKEES(I,I)+  
     1        DABS(F9V(I)/DABSCI)
          ENDDO         
      ENDIF  
  157 CONTINUE       
C
      IF(IMUMPS.EQ.0) THEN
        IF(IDARCY.EQ.0) THEN
          DO I=1,MEL2D
             HP(I)=HPS(ID,I)
          ENDDO
          CALL MATSTE (A(LSK),A(LMAXA),A(LF),HP,F9ES,LM2,NCV2,INDSK)
	  ELSE
	    CALL ADDSTF(A(LALEVO),A(LFMULT),A(LDESNO),SKEES,F9ES,A(LMAXA),LM2,
     1              NCV2,1)
	  ENDIF
	ELSE
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
        CALL sparseassembler_addelemmatrix(4,LM2,SKEES)
#endif
        CALL SPAKDE(A(LFMULT),F9ES,LM2,4,JEDN)
	ENDIF	
C
  137 CONTINUE 
  500 CONTINUE
  200 CONTINUE
  
      IF(IPRINTVEL.EQ.1.AND.ICONV.EQ.1) THEN
         KK=1
         IF(IACTIVE(3).EQ.1)KK=2
         DO NODE=1,NPT
             DO J=1,KK
	          IF(NZADCONTUREV(J,NODE).GT.1) THEN
	             COEF=NZADCONTUREV(J,NODE)
                   ZADAVXYZ(J,1,NODE)=ZADAVXYZ(J,1,NODE)/COEF  
                   ZADAVXYZ(J,2,NODE)=ZADAVXYZ(J,2,NODE)/COEF      
                ENDIF
             ENDDO
          ENDDO
      ENDIF
C
      RETURN
      END  
C=======================================================================
C
C======================================================================= ODAVDE
      SUBROUTINE INTEB2CINTERNAL(CORD,NEL,THI2D,TT1C,TT10C,TT1CM,
     1 TT01CM,VOLFRACTV,VFMULTIT,IDVS,NZADNODVS,ZADATAVSV0,ZADATAVSV,
     2 RVLYMPH,JEDNCONC,LFMULT,INDLYMPH)

      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
C
      COMMON A(1)  
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON/UNSYMMETRIC/LALEVO,LDESNO,LSILE,ISYMM
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA2/ LNEL2D,LMAT2D,LNQ2D,LITG2D,LIP2CV,LNG2D,LNELG2,
     1LEL2,LHP2,LHK2,LSKE2,LDEL2,LDEHP2,LDEHK2,LTHICK,LHR2
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2C(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON/REAL2D/ CK2(9,3),P2(2,9),PJ2(2,9),XJ2(2,2),H2(9),
     1AK2,CC2,HH2,QQ2,HHP2,DET2,DET21,F9(9),TT21(9),TT212(9),TT210(9)
      COMMON /SRPSKI/ ISRPS
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ            
	common/elemmodels/modelel(20),ngele                 
	COMMON/MESSAGES/MESSAGE
      COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
      COMMON/CMULTITIS/MULTITIS,MULTIMOL,IACTIVECELL(4),NDIMCELL,LIDTV,
     1      LIDTVCELL,JEDNPV(10),JEDNCV(10),JEDNPMAX,JEDNCMAX,MM
      COMMON/CCELLIN/INDCELLIN,INDCELLINV(10),VFVS(10,5),DIAMVS(10,5),
     1 RAVVS(10,5),DDIFFICY(10,10),DDIFFIVS(10,10,5),DDIFFICM(10,10,5)
     2 ,IPARTIVS(10,10,5),PARTIVS(10,10,5),NDIMVS,NVSMAX,LIDVS,NZADVS,
     3 LNZADNODVS,LNZADNFVS,LNZADFVS,LZADVALUEVS,LZADATAVS0,LZADATAVS   
C
      DIMENSION CORD(NPT,3),NEL(NE2D,4),THI2D(NE2D),TT1C(JEDNCONC),
     1 TT10C(JEDNCONC),TT1CM(MULTIMOL,JEDNCMAX),
     2 TT01CM(MULTIMOL,JEDNCMAX),VOLFRACTV(NPT),VFMULTIT(NDIMCELL,NPT) 
      DIMENSION IDVS(MULTIMOL,NDIMVS,NVSMAX,NPT),NZADNODVS(4,NZADVS),
     1  ZADATAVSV0(NZADVS),ZADATAVSV(NZADVS)
      DIMENSION RVLYMPH(NPT)    
C
      DIMENSION VOLFLOC(14),DDIFV(2,4),ILOC(4,4),LM2(4)
      DIMENSION SKES(5,4,4),SKEMS(5,4,4),SKEDS(5,4,4),LMS(5,4),
     1          TT21S(5,4),TT210S(5,4),SKEES(4,4),F9ES(4),VFCELL(10),
     1          NODEL(4),VOLFRACTLY(4) 
  
      DIMENSION XG(15),WGT(15),NREF(6),TBK(2)  
C
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
C

	AKTT   = 1./DT
C
C     LOOP OVER CELLS
      KIN=0
      VRACTLY=0.D0
      DO 800 NC=1,NDIMCELL
      NVSE=INDCELLINV(NC)
      IF(NVSE.EQ.0) GO TO 800
      KIN=KIN+1
C     LOOP OVER ELEMENTS     
C
      DO 200 NLM2= 1,NE2D

      CC2=1.D0      
C 
      CALL CLEAR(VOLFLOC,4) 
      CALL ICLEAR(ILOC,16)
      CALL CLEAR(SKEMS,80) 
      CALL CLEAR(SKES,80)
      CALL CLEAR(SKEDS,80)
      CALL ICLEAR(LMS,20)
      CALL CLEAR(TT21S,20)
      CALL CLEAR(TT210S,20)       
C
   40 NCV2     = 0
      DO 50 I=1,NBR2
      J=NEL(NLM2,I)                 
      NCV2=NCV2+1
      NODEL(NCV2)=J
      VOLFLOC(NCV2)=VOLFRACTV(J)
      IF(INDLYMPH.EQ.1) THEN 
          VOLFRACTLY(NCV2)=RVLYMPH(J)
      ENDIF     
C
      DO 39 II=1,NVSE 
         JJ=IDVS(MM,KIN,II,J) 
         LMS(II,NCV2)= JJ                                       
         IF(JJ.GT.0) THEN
             IF(MULTIMOL.EQ.1) THEN
                TT21S(II,NCV2)=TT1C(JJ)
                TT210S(II,NCV2)=TT10C(JJ)
             ELSE
                TT21S(II,NCV2)= TT1CM(MM,JJ)
                TT210S(II,NCV2)= TT01CM(MM,JJ)
             ENDIF  
         ELSE
C           PRESCRIBED
            IF(NZADVS.GT.0) THEN
	         DO  KK=1,NZADVS
	            NODE=NZADNODVS(1,KK)
                  IMM=NZADNODVS(2,KK)
                  ICC=NZADNODVS(3,KK)
                  IDOF=NZADNODVS(4,KK)
                  IF(NODE.EQ.J.AND.IMM.EQ.MM.AND.ICC.EQ.NC.AND.
     1            IDOF.EQ.II) THEN                         
                     TT21S(IDOF,NCV2)= ZADATAVSV(KK)
                     TT210S(IDOF,NCV2)= ZADATAVSV0(KK)
                     GO TO 39
                  ENDIF
               ENDDO
            ENDIF
	   ENDIF
   39 CONTINUE            	                                      
   50 CONTINUE
C----------------  END OF LOOP OVER ELEMENT NODES-----
C        
CE  NODAL COORDINATES OF ELEMENTS   OVDE JE ISPRAVKA NOV.9,17
C      IF(KIN.EQ.1) THEN
         K=0
         DO 60 I=1,NBR2
         IF(NEL(NLM2,I).EQ.0) GO TO 60
         K=K+1
         KK=NEL(NLM2,I)
         DO 55 J=1,2
   55    CK2(K,J)=CORD(KK,J)
   60    CONTINUE 
C      ENDIF
C
      THICK=THI2D(NLM2)
      !IF(INDAX.NE.0) THICK=1.D0 
C
CE    GAUSS POINTS  LOOP =============================================
      NGAUSC=0
      DO 101 NGX=1,NGAU2X 
      JR=NREF(NGAU2X) + NGX
      R = XG(JR)
      DO 100 NGY=1,NGAU2Y
      NGAUSC=NGAUSC+1
      JS=NREF(NGAU2Y) + NGY
      S = XG(JS)
      WT=WGT(JR)*WGT(JS)
      CALL JACT2(R,S,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
      RAD=1. 
C      IF(KIN.EQ.1) THEN
         VEFFEC = 0.D0
         DO I=1,NCV2
            VEFFEC=VEFFEC+ H2(I)*VOLFLOC(I)
         ENDDO
         IF(INDLYMPH.EQ.1) THEN 
            VRACTLY=0.D0
            DO I=1,NCV2
               VRACTLY=VRACTLY+ H2(I)*VOLFRACTLY(I)
            ENDDO
         ENDIF         
         KK=0
         DO I=1,NDIMCELL
            VFCELL(I)=0.D0
            DO J=1,NCV2   
              VFCELL(I)=VFCELL(I)+H2(J)*VFMULTIT(I,NODEL(J))
            ENDDO
         ENDDO           
C      ENDIF      
CE  ELEMENT MATRICES
      WDT=WT*DET21*RAD*THICK
      WDT0=WDT
C
      DO 100 ID=1,NVSE
      WDT=(1.-VEFFEC-VRACTLY)*VFCELL(NC)*VFVS(NC,ID)*WDT0      
C    
      AKTW=CC2*AKTT*WDT
      AKDWX=DDIFFIVS(NC,MM,ID)*WDT
      AKDWY=AKDWX   
C    
      DO 405 I=1,NCV2
          H2TWI = H2(I)*AKTW
          DO 405 J=1,NCV2
            PJX = PJ2(1,I)*PJ2(1,J)
            PJY = PJ2(2,I)*PJ2(2,J)
            SKEMS(ID,I,J)=SKEMS(ID,I,J)+H2TWI*H2(J)
            SKEDS(ID,I,J)=SKEDS(ID,I,J)+PJX*AKDWX+PJY*AKDWY
  405 CONTINUE
C 
  100 CONTINUE
  101 CONTINUE
C     KRAJ PETLJE PO GAUSOVIM TACKAMA ==============================
C
C     PETLJA PO UNUTRASNJIM ENTITETIMA CELIJE
      DO 500 ID=1,NVSE
      CALL CLEAR(SKEES,16)
      CALL CLEAR(F9ES,4)
      DO 430 I=1,NCV2
           DO 430 J=1,NCV2
               SKEES(I,J)=SKEES(I,J)+SKEMS(ID,I,J)+SKEDS(ID,I,J)
               F9ES(I)=F9ES(I)-SKEMS(ID,I,J)*(TT21S(ID,J)-
     1         TT210S(ID,J))-SKEDS(ID,I,J)*TT21S(ID,J)
  430 CONTINUE  
C
      DO I=1,4
         LM2(I)=LMS(ID,I)
      ENDDO    
C
      IF(IMUMPS.EQ.0) THEN
	    CALL ADDSTF(A(LALEVO),A(LFMULT),A(LDESNO),SKEES,F9ES,A(LMAXA),LM2,
     1              NCV2,1)
	ELSE
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
        CALL sparseassembler_addelemmatrix(4,LM2,SKEES)
#endif
        CALL SPAKDE(A(LFMULT),F9ES,LM2,4,JEDN)
	ENDIF	 
C     END OF LOOP OVER VESICLES          
  500 CONTINUE      
C     END OF LOOP OVER ELEMENTS      
  200 CONTINUE
C     END OF LOOP OVER CELLS
  800 CONTINUE
C	
      RETURN
      END  
C=======================================================================DOVDE
C
C========================================================================
      SUBROUTINE INTEB2DARCYS2(IDT,IDTCD,CORD,TCONS,NTAKV,NTACV,NEL,NQ,
     1 MATV,EL,HP,HK,SKE,THI2D,TT1P,TT1C,TT10P,TT10C,IBFK,FAKP,FVPOT,HR,
     2 MATCONV,AMATFC,MATDIF,AMATFD,NZADJ,NODEIN,NODEOUT,FLUX,VOLFRACTV,
     3 AMIV,DARCYCOEFV,IDARCYMA,DWALLSMEV,DIAMSMEV,DPIPE,DTISSUE,
     4 ZADATA1,ZADATA0,ZADAVXYZ,NZADCONTUREV,DIRCOEFF,DPIPECAP,DARCYCAP,
     5 IACTIVE,NZADP,NDES,MAT2DCONV,MAT2DdIF,AEFF,IDARCY,VDARCY,NZADIN,
     6 NZADOUT,ISMEARED,IPRINTVEL,NDIMID,JEDNPRES,JEDNCONC,IPASSME,
     7 IANIZS,NDIMTENSOR)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
C
      COMMON A(1)  
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON/UNSYMMETRIC/LALEVO,LDESNO,LSILE,ISYMM
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA2/ LNEL2D,LMAT2D,LNQ2D,LITG2D,LIP2CV,LNG2D,LNELG2,
     1LEL2,LHP2,LHK2,LSKE2,LDEL2,LDEHP2,LDEHK2,LTHICK,LHR2
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2C(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON/REAL2D/ CK2(9,3),P2(2,9),PJ2(2,9),XJ2(2,2),H2(9),
     1AK2,CC2,HH2,QQ2,HHP2,DET2,DET21,F9(9),TT21(9),TT212(9),TT210(9)
      COMMON /SRPSKI/ ISRPS
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ            
	common/elemmodels/modelel(20),ngele                 
	COMMON/MESSAGES/MESSAGE
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
	COMMON/FLUXKC/INDFLUXKC
	COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
C
      DIMENSION IDT(NDIMID,NPT),IDTCD(2,NPT),CORD(NPT,3),TCONS(*),
     1 NTAKV(*),NTACV(*),NEL(NE2D,4),NQ(*),MATV(*),EL(*),HP(*),HK(*),
     2 SKE(NDES,NDES),THI2D(NE2D),TT1P(JEDNPRES),TT1C(JEDNCONC),
     3 TT10P(JEDNPRES),TT10C(JEDNCONC),IBFK(NMATT,*),FAKP(NMATT,*),
     4 FVPOT(*),HR(*)
      DIMENSION MATCONV(NMATTCONV),AMATFC(NMATTCONV,2,*),
     1          MATDIF(NMATTDIF),AMATFD(NMATTDIF,2,*)     
      DIMENSION NZADJ(3,NZADP)
      DIMENSION NODEIN(NZADIN),NODEOUT(NZADOUT),FLUX(NPT)
      DIMENSION VOLFRACTV(NPT),AMIV(NPT),DARCYCOEFV(NPT),
     1          IDARCYMA(NPT),DWALLSMEV(NPT),DIAMSMEV(NPT),DPIPE(NPT),
     2          DTISSUE(NPT),ZADATA1(NZADP),ZADATA0(NZADP),
     3          ZADAVXYZ(2,3,NPT),NZADCONTUREV(2,NPT),DIRCOEFF(3,NPT),
     4          DPIPECAP(NDIMTENSOR,NPT),DARCYCAP(NDIMTENSOR,NPT),
     5          IACTIVE(4) 

      DIMENSION ZADLOCAL(4,4),ZADLOCAL0(4,4),LMZADA(4,4),
     1          VLOCAL(4,4),VCONV(2,4),GRADC(2,4),VOLFLOC(4),
     2          DARCYVS(2,4),DDIFV(2,4),ILOC(4,4),LM2(4)
      DIMENSION SKES(4,4,4),SKEMS(4,4,4),SKEDS(4,4,4),LMS(4,4),
     1          TT21S(4,4),TT210S(4,4),HPS(4,10),ELS(4,10),HKS(4,10),
     2          F9S(4,4),SKEES(4,4),F9ES(4),NODEL(4),LMTOT(4)
      DIMENSION DARCYMA(2,2),DDIFMA(2,2,4),GRADP(2)  
     
      DIMENSION XG(15),WGT(15),NREF(6),TBK(2),VPOT(9)
C
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
C
      IFORM  = 2
      DDARCY = 0.D0
      VBR    = 1.0D35
	AKTT   = 1./DT
	ININ=0
	IF(IPASSME.EQ.2)ININ=2
C	
C	MAT2DDIF IS USED ALSO FOR HEAT TRANSFER
      IF(IZIP.EQ.2) GO TO 15
      IF(NQE.NE.1) GO TO 15
      CALL TABF(A(LQEFN),A(LNTAQE),NQE,NQE,VREME,QQ2,NTA,IND)
      IF(IND.EQ.0) GO TO 15
      IF(ISRPS.EQ.0)
     1WRITE(3,2000) NQE,VREME
      IF(ISRPS.EQ.1)
     1WRITE(3,6000) NQE,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA ZAPREMINSKI IZVOR - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME = ',1PD12.4)
      STOP
   15 CONTINUE
C
      ICONVV    = ICONV
      IDIFFHEAT = 0
      IF(IDIFUSE.NE.0.OR.IHEAT.NE.0) IDIFFHEAT = 1
C
      IF(IPRINTVEL.EQ.1.AND.IPASSME.EQ.1) THEN
         CALL ICLEAR(NZADCONTUREV,2*NPT)
         CALL CLEAR(ZADAVXYZ,6*NPT) 
      ENDIF 
C
C     LOOP OVER ELEMENTS     
C
      DO 200 NLM2= 1,NE2D

      KKIN=0   
      KKOUT=0 
      CC2=1.D0 
C 
      CALL CLEAR(ZADLOCAL,16)
      CALL CLEAR(ZADLOCAL0,16)
      CALL ICLEAR(LMZADA,16)
      CALL CLEAR(VLOCAL,16)
      CALL CLEAR(VOLFLOC,4) 
      CALL ICLEAR(ILOC,16)
      CALL CLEAR(SKEMS,64) 
      CALL CLEAR(SKES,64)
      CALL CLEAR(SKEDS,64)
      CALL ICLEAR(LMS,16)
      CALL CLEAR(TT21S,16)
      CALL CLEAR(TT210S,16)
      CALL CLEAR(HPS,40)
      CALL CLEAR(ELS,40)
      CALL CLEAR(HKS,40)
      CALL CLEAR(F9S,16)
      CALL ICLEAR(LMTOT,4)
C  
      DO I=1,9
        VPOT(I)=0.D0
      ENDDO
C 
      CALL CLEAR(SKE,NDES*NDES)
C
      IF(NMAT2D.GT.1.OR.INDIFFUS.EQ.1) MAT2D=MATV(NLM2)
      IQE2=0
      IF(NQE.GT.0) IQE2=NQ(NLM2)
CE
      IF(IDARCY.NE.0) GO TO 30
      ARG=0.
	IF(indiffus.EQ.1) THEN
	  CC2=1.D0
	  GO TO 30 
	ENDIF

C	IF(ISMEARED.GT.0) GO TO 40
      GO TO 40

C     DEO DO LABELE 40 SE PRESKACE
      IF(NSTAC.EQ.0.OR.KONC.EQ.1) GO TO 40
      CALL TABF(A(LTABC),A(LNTACV),MAT2D,NMATT,ARG,CC2,NTA,IND)
   25 IF(IANIZ.EQ.0) GO TO 188
      FAX=FAKP(MAT2D,1)
      FAY=FAKP(MAT2D,2)
  188 IBX=IBFK(MAT2D,1)
      IBY=IBFK(MAT2D,2)
      IF(KONK.EQ.1) GO TO 30
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,ARG,AKX,NTA,IND)
      IF(IBY.GT.0) GO TO 180
      IF(IANIZ.EQ.0) GO TO 189
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 30
  189 AKY=AKX
      GO TO 30
  180 CALL TABF(A(LTABK),A(LNTAKV),IBY,NTABK,ARG,AKY,NTA,IND)
   30 IF(IQE2.EQ.0.OR.NQE.EQ.1) GO TO 44
      CALL TABF(A(LQEFN),A(LNTAQE),IQE2,NQE,VREME,QQ2,NTA,IND)
      IF(IND.EQ.0) GO TO 44
      WRITE(3,2000) IQE2,VREME
      STOP
   44 IF(IZIP.NE.2.OR.MAXTQE.GT.1) GO TO 39
      CALL TABF(A(LQEFN),A(LNTAQE),IQE2,NQE,ARG,QQ2,NTA,IND)
CE POTENTIAL V  FUNCTION VECTOR AT NODES
   39 IF(ITOR.NE.2) GO TO 40
      IF(IQE2.EQ.0) GO TO 40
      NCV2=0
      DO 51 I=1,NBR2
      IF(NEL(NLM2,I).EQ.0) GO TO 51
      J=NEL(NLM2,I)
      NCV2=NCV2+1
      VPOT(NCV2)=FVPOT(J)
   51 CONTINUE
C
CE  TEMPERATURE AT NODES  VECTOR
C
   40 NCV2     = 0
      NND5     = 0
	NELZAD   = 0
	ICONTOUR = 0
C
      DO 50 I=1,NBR2
      J=NEL(NLM2,I)                 
      NCV2=NCV2+1
      NODEL(NCV2)=J
      VOLFLOC(NCV2)=VOLFRACTV(J)
C
C     PRESCRIBED
C
      IF(NZADP.GT.0) THEN
	  DO 345 KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
	      IDOFA=IABS(IDOF)
	      IF(IPASSME.EQ.1) THEN
	         IF(IDOFA.GT.2) GO TO 345
	      ELSE
	         IF(IDOFA.LE.2.AND.ICONV.EQ.0)GO TO 345
	      ENDIF
            IF(IDOF.LT.0) THEN
	        ILOC(IDOFA,NCV2) = 1
	        ICONTOUR   = 1
	      ENDIF	      
            NELZAD=NELZAD+1
            IF(IDOF.GT.0) THEN
               LMZADA(IDOFA,NCV2)     = 1
               ZADLOCAL(IDOFA,NCV2)   = ZADATA1(KK)
               ZADLOCAL0(IDOFA,NCV2)  = ZADATA0(KK)
            ELSE
              VLOCAL(IDOFA,NCV2) = ZADATA1(KK)
            ENDIF
	    ENDIF
  345   CONTINUE
	ENDIF
C
      DO II=1,4
         IF(IACTIVE(II).EQ.1) THEN
            LMS(II,NCV2)=IDT(II,J)
         ENDIF
      ENDDO 
   45 CONTINUE
C
C      IF (NSTAC.GT.0.OR.LINTE.GT.0.OR.NELZAD.GT.0) THEN
       DO II=1,4
          IF(IACTIVE(II).EQ.1) THEN
             JJ=IDT(II,J)
             IF(JJ.GT.0) THEN
                 IF(II.LE.2) THEN
                    TT21S(II,NCV2)= TT1P(JJ)
                    TT210S(II,NCV2)= TT10P(JJ)
                ELSE
                    IF(IPASSME.EQ.2) THEN
                       TT21S(II,NCV2)= TT1C(JJ)
                       TT210S(II,NCV2)= TT10C(JJ)
                    ENDIF
                ENDIF  
	       ELSE
	          IF(LMZADA(II,NCV2).EQ.1) THEN
                    TT21S(II,NCV2)=ZADLOCAL(II,NCV2)
                    TT210S(II,NCV2)=ZADLOCAL0(II,NCV2)
                ENDIF
             ENDIF
          ENDIF
      ENDDO
C	ENDIF
   50 CONTINUE
C
C----------------  END OF LOOP OVER ELEMENT NODES-----
  300 IELX2=NCV2
      DO I=1,4
         IF(IACTIVE(I).EQ.1) THEN
            DO J=1,4
               LMTOT(I)=LMTOT(I)+LMS(I,J)
            ENDDO
         ENDIF
      ENDDO
CE  NODAL COORDINATES OF ELEMENTS MAtt21sTRIX
      K=0
      DO 60 I=1,NBR2
      IF(NEL(NLM2,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM2,I)
      DO 55 J=1,2
   55 CK2(K,J)=CORD(KK,J)
   60 CONTINUE 
C
      THICK=THI2D(NLM2)
      !IF(INDAX.NE.0) THICK=1.D0 
C
CE    GAUSS POINTS  LOOP =============================================
C
      KKABSORB=0
      NGAUSC=0
      DO 101 NGX=1,NGAU2X 
      JR=NREF(NGAU2X) + NGX
      R = XG(JR)
      DO 100 NGY=1,NGAU2Y
      JS=NREF(NGAU2Y) + NGY
      S = XG(JS)
      WT=WGT(JR)*WGT(JS)
	NGAUSC=NGAUSC+1
      CALL JACT2(R,S,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
      RAD=1.
C      IF(INDAX.EQ.0) GO TO 281
C
      IF(INDAX.EQ.1) THEN
         RAD=0.
         DO I=1,NCV2
           RAD=RAD+H2(I)*CK2(I,1)
         ENDDO
      ENDIF
C
CE    PRESSURE AT GAUSS POINT
C
C      PRESS=0.
      IF(ICONVV.GT.0) THEN
      ENDIF
C
      IF(NSTAC.EQ.0.OR.KONC.EQ.0) GO TO 70
      IF(NTACV(MAT2D).EQ.0) GO TO 67
      CALL TABF(A(LTABC),A(LNTACV),MAT2D,NMATT,TEMP,CC2,NTA,IND)
      IF(IND.EQ.0) GO TO 70
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) MAT2D,TEMP
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) MAT2D,TEMP
 2005 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA SPEC. TOPLOTA - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6005 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SPECIFIC HEAT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
   67 CALL ANALCF(MAT2D,TEMP,CC2,A(LGUSM))
   70 CONTINUE
C
      FAX=1.D0
      FAY=1.D0
C       CORRECT DDIFUS FOR MODEL
C     FOR SMEARED CONDITIONS MATERIAL PARAMETERS ARE INTERPOLATED FROM NODES
C      IF(ISMEARED.GT.0) GO TO 81 **** I ZA ISMEARED=0 VAZI PRESKAKANJE**** MK NOV24.16.
      GO TO 81
      
      IF(KONK.EQ.0) GO TO 80
      IF(IBX.EQ.0.AND.IBY.EQ.0) GO TO 77
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,TEMP,AKX,NTA,IND)
      IF(IND.GT.0) GO TO 22
      IF(IBY.GT.0) GO TO 181
      IF(IANIZ.EQ.0) GO TO 186
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 182
  186 AKY=AKX
      GO TO 182
  181 CALL TABF(A(LTABK),A(LNTAKV),IBY,NTABK,TEMP,AKY,NTA,IND)
  182 IF(IND.EQ.0) GO TO 80
   22 CONTINUE
      IF(ISRPS.EQ.0)
     *WRITE(3,2001)  MAT2D,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6001)  MAT2D,TEMP
 2001 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. PROVODJENJA - TOPL.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6001 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'DARCY COEFF-PRESSURE OR DDIF-CONC,  NO. =',I5/
     11X,'CONCENTRARION,  CONC =',1PD12.4/
     21X,'S T O P'//' CHECK: INPUT DATA FOR DIFFUSION COEFFICIENT'/)
C
      STOP
   77 CALL ANALKF(MAT2D,TEMP,AKX,AKY,AKZ,A(LTOPM),A(LTMNM))
      IF(AKY.GT.0) GO TO 80
      IF(IANIZ.EQ.0) GO TO 811
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 80
  811 AKY=AKX
   80 IF(IZIP.NE.2.OR.MAXTQE.EQ.1) GO TO 81
      CALL TABF(A(LQEFN),A(LNTAQE),IQE2,NQE,TEMP,QQ2,NTA,IND)
      IF(IND.EQ.0) GO TO 81
      IF(ISRPS.EQ.0)
     *WRITE(3,2011) IQE2,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6011) IQE2,TEMP
 2011 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPLOTNOG IZVORA (PONORA)   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6011 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
CE  ELEMENT MATRICES
   81 WDT=WT*DET21*RAD*THICK
      WDT0=WDT
C
      VEFFEC = 0.D0
      DIAM   = 0.D0
      DO I=1,NCV2
         VEFFEC=VEFFEC+ H2(I)*VOLFLOC(I)
         DIAM=DIAM+H2(I)*DIAMSMEV(NODEL(I))
      ENDDO
C
      AMI=0.D0
      DDARCY=0.D0
      DDARCY2=0.D0
      IF(ICONV.EQ.1) THEN
         IF(IACTIVE(1).EQ.1) THEN
            IF(ISMEARED.EQ.0) THEN
               DO I=1,NCV2
                  AMI=AMI+H2(I)*AMIV(NODEL(I))
               ENDDO
               AKPIPE=DIAM*DIAM/(32.*AMI)
               DARCYVS(1,1)=AKPIPE
               DARCYVS(2,1)=AKPIPE
            ELSE
               IF(IANIZS.NE.2) THEN
                  DO I=1,NCV2
                     DDARCY=DDARCY+H2(I)*DARCYCAP(1,NODEL(I))
                     DDARCY2=DDARCY2+H2(I)*DARCYCAP(2,NODEL(I))  
                  ENDDO  
                  DARCYVS(1,1)=DDARCY
                  DARCYVS(2,1)=DDARCY2
               ELSE
                  DDARCY3=0.D0
                  DO I=1,NCV2
                     DDARCY=DDARCY+H2(I)*DARCYCAP(1,NODEL(I))
                     DDARCY2=DDARCY2+H2(I)*DARCYCAP(2,NODEL(I)) 
                     DDARCY3=DDARCY3+H2(I)*DARCYCAP(3,NODEL(I)) 
                  ENDDO                  
                  DARCYMA(1,1)=DDARCY
                  DARCYMA(1,2)=DDARCY3
                  DARCYMA(2,1)=DDARCY3
                  DARCYMA(2,2)=DDARCY2              
               ENDIF   
            ENDIF
         ENDIF
         IF(IACTIVE(2).EQ.1) THEN
            DO I=1,NCV2
               DDARCY=DDARCY+H2(I)*DARCYCOEFV(NODEL(I))
            ENDDO

            DARCYVS(1,2)=DDARCY
            DARCYVS(2,2)=DDARCY
         ENDIF
      ENDIF
      DDIF=0.D0
      DDIFP=0.D0
      DDIFP2=0.D0
      IF(IPASSME.EQ.2) THEN
         IF(IACTIVE(3).EQ.1)THEN
            IF(ISMEARED.EQ.0) THEN
               IF(IDPIPEEXC(1,MM).NE.3) THEN
                  DDIFP=DPIPEEXC(1,MM) 
               ELSE  
                  !DO I=1,NCV2
                  !  DDIFP=DDIFP+H2(I)*DPIPEEXV(MM,NODEL(I),2)
                  !ENDDO
               ENDIF
               DDIFV(1,3)=DDIFP
               DDIFV(2,3)=DDIFP
            ELSE 
               IF(IANIZS.NE.2) THEN                      
                  DO I=1,NCV2
                     DDIFP=DDIFP+H2(I)*DPIPECAP(1,NODEL(I))
                     DDIFP2=DDIFP2+H2(I)*DPIPECAP(2,NODEL(I))  
                  ENDDO 
                  DDIFV(1,3)=DDIFP
                  DDIFV(2,3)=DDIFP2
               ELSE
                  DDIFP3=0.D0
                  DO I=1,NCV2
                     DDIFP=DDIFP+H2(I)*DPIPECAP(1,NODEL(I))
                     DDIFP2=DDIFP2+H2(I)*DPIPECAP(2,NODEL(I))
                     DDIFP3=DDIFP3+H2(I)*DPIPECAP(3,NODEL(I))  
                  ENDDO                 
                  DDIFMA(1,1,3)=DDIFP
                  DDIFMA(1,2,3)=DDIFP3
                  DDIFMA(2,1,3)=DDIFP3
                  DDIFMA(2,2,3)=DDIFP2  
               ENDIF
            ENDIF
         ENDIF  
         IF(IACTIVE(4).EQ.1) THEN         
             IF(IDPIPEEXC(2,MM).NE.3) THEN
                DDIF=DPIPEEXC(2,MM)
             ELSE
               !! DO I=1,NCV2
               !    DDIF=DDIF+H2(I)*DPIPEEXV(MM,NODEL(I),2)
               ! ENDDO
             ENDIF
             DDIFV(1,4)=DDIF
             DDIFV(2,4)=DDIF
         ENDIF
      ENDIF
C
      DO 100 ID=1,4
      IF(IACTIVE(ID).EQ.0) GO TO 100
      IF(ID.GT.2.AND.IPASSME.EQ.1) GO TO 100
      IF(LMTOT(ID).EQ.0) GO TO 100
      IF(ID.EQ.1.OR.ID.EQ.3) THEN
         WDT=VEFFEC*WDT0
      ELSE
         WDT=(1.-VEFFEC)*WDT0
      ENDIF
      IF(ICONV.NE.0.AND.(ID.EQ.1.OR.ID.EQ.2).AND.IPASSME.EQ.2) THEN
         GRADP(1)=0.D0
         GRADP(2)=0.D0
         DO K=1,NCV2 
              GRADP(1)=GRADP(1)+PJ2(1,K)*TT21S(ID,K)
              GRADP(2)=GRADP(2)+PJ2(2,K)*TT21S(ID,K)
         ENDDO
         IF(IANIZS.NE.2.OR.ID.NE.1) THEN 
            VCONV(1,ID)=-DARCYVS(1,ID)*GRADP(1)
            VCONV(2,ID)=-DARCYVS(2,ID)*GRADP(2)
         ELSE
            VCONV(1,ID)=-DARCYMA(1,1)*GRADP(1)-DARCYMA(1,2)*GRADP(2)
            VCONV(2,ID)=-DARCYMA(2,1)*GRADP(1)-DARCYMA(2,2)*GRADP(2)
         ENDIF
      ENDIF    
C      
      IF(IDARCY.NE.0.OR.ISMEARED.NE.1) GO TO 400     
C     
CE  CALCULATION OF CONDUCTION MATRIX AND SPECIFIC HEAT MATRIX OF ELEMENT
C
      IF(ID.LE.2) GO TO 100
      AKX=DDIFV(1,ID)
      AKY=DDIFV(2,ID)
      AKXY=2.*DDIFMA(1,2,ID)
      K=0
      DO 85 I=1,NCV2
      DO 83 J=I,NCV2
      K=K+1
      IF(NSTAC.EQ.0) GO TO 87
      HH2= H2(I)*H2(J)*WDT
      ELS(ID,K)=ELS(ID,K)+CC2*HH2   
   87 IF(INDSK.EQ.0) GO TO 83
      PJX=PJ2(1,I)*PJ2(1,J)
      PJY=PJ2(2,I)*PJ2(2,J)
      IF(IANIZS.NE.2) THEN
         HPS(ID,K) = HPS(ID,K) +(AKX*PJX+AKY*PJY)*WDT
      ELSE
         PJXY=PJ2(1,I)*PJ2(2,J)
         HPS(ID,K) = HPS(ID,K) +(AKX*PJX+AKY*PJY+AKXY*PJXY)*WDT
      ENDIF
   83 CONTINUE
      IF(IQE2.EQ.0) GO TO 85
CE  CALCULATION OF RIGHT-SIDE VECTOR
      GJ=1.
      IZ=1
C      IF(ITOR.NE.2) GO TO 86
C      IZ=-1
C      VX=0.
C      VY=0.
C      DO 84 NV=1,NCV2
C      VX=VX+PJ2(1,NV)*VPOT(NV)
C      VY=VY+PJ2(2,NV)*VPOT(NV)
C   84 CONTINUE
C      GJ=VX**2+VY**2
   86 F9S(ID,I)=F9S(ID,I)+H2(I)*WDT*GJ*QQ2**IZ
   85 CONTINUE
      IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
      TBK(1)=0.
      TBK(2)=0.
      DO 151 J=1,2
      DO 150 I=1,NCV2
  150 TBK(J)=TBK(J)+PJ2(J,I)*TT21S(ID,I)
  151 CONTINUE
      TBK(1)=AKX*TBK(1)
      TBK(2)=AKY*TBK(2)
      DO 152 I=1,NCV2
      DO 153 J=1,2
  153 F9S(ID,I)=F9S(ID,I)-(PJ2(J,I)*TBK(J))*WDT
  152 CONTINUE
C
      GO TO 100

  400 CONTINUE
C
C     DARCY AND DIFFUSION MATRICES
C
      IF(ICONVV.NE.0.AND.ID.LE.2.AND.IPASSME.EQ.1) THEN
        IF(IANIZS.NE.2.OR.ID.NE.1) THEN
           AKX = DARCYVS(1,ID)*WDT 
           AKY = DARCYVS(2,ID)*WDT
        ELSE
           AKX  = DARCYMA(1,1)*WDT
           AKY  = DARCYMA(2,2)*WDT
           AKXY = DARCYMA(1,2)*WDT
        ENDIF
        DO I=1,NCV2
          DO J=1,NCV2
             PJX = PJ2(1,I)*PJ2(1,J)
             PJY = PJ2(2,I)*PJ2(2,J)
             IF(IANIZS.NE.2.OR.ID.NE.1) THEN
               SKES(ID,I,J) = SKES(ID,I,J) + AKX*PJX + AKY*PJY
             ELSE
               PJXY = PJ2(1,I)*PJ2(2,J)
               PJYX = PJ2(2,I)*PJ2(1,J)
               SKES(ID,I,J) = SKES(ID,I,J) + AKX*PJX + AKY*PJY +
     1           AKXY*(PJXY+PJYX)
             ENDIF
          ENDDO
        ENDDO
      ENDIF
C      
      IF(IDIFFHEAT.NE.0.AND.ID.GT.2.AND.IPASSME.EQ.2) THEN    
        AKTW=CC2*AKTT*WDT
        IF(IANIZS.NE.2.OR.ID.NE.3) THEN
           AKDWX=DDIFV(1,ID)*WDT
           AKDWY=DDIFV(2,ID)*WDT
        ELSE
           AKDWX=DDIFMA(1,1,3)*WDT   
           AKDWY=DDIFMA(2,2,3)*WDT
           AKDWXY=DDIFMA(1,2,3)*WDT       
        ENDIF
C    
        DO 405 I=1,NCV2
          H2TWI = H2(I)*AKTW
          H2WI  = H2(I)*WDT
          DO 405 J=1,NCV2
            PJX = PJ2(1,I)*PJ2(1,J)
            PJY = PJ2(2,I)*PJ2(2,J)
            SKEMS(ID,I,J)=SKEMS(ID,I,J)+H2TWI*H2(J)
            IF(IANIZS.NE.2.OR.ID.NE.3) THEN
               SKEDS(ID,I,J)=SKEDS(ID,I,J)+PJX*AKDWX+PJY*AKDWY
            ELSE
               PJXY = PJ2(1,I)*PJ2(2,J)
               PJYX = PJ2(2,I)*PJ2(1,J)
               SKEDS(ID,I,J)=SKEDS(ID,I,J)+PJX*AKDWX+PJY*AKDWY+
     1                                     AKDWXY*(PJXY+PJYX)
            ENDIF
            IF(ICONV.EQ.1.AND.IFORM.EQ.2) THEN
                COEFFV=VCONV(1,ID-2)*PJ2(1,J)+VCONV(2,ID-2)*PJ2(2,J)
                SKEDS(ID,I,J)=SKEDS(ID,I,J)+H2WI*COEFFV
            ELSE
C                ONLY IFORM=2 IS USED
               CONTINUE
C              SKEDS(ID,I,J)=SKEDS(ID,I,J)+(PJX+PJY)*AKDW
C              SKEPS(ID,I,J)=SKEPS(ID,I,J)-H2PI*(GRADC(1,ID)*PJ2(1,J)+
C     1                                GRADC(2,ID)*PJ2(2,J))
            ENDIF
  405   CONTINUE
      ENDIF
C 
  100 CONTINUE
  101 CONTINUE
C
C     KRAJ PETLJE PO GAUSOVIM TACKAMA ----------
C
C     PETLJA PO DOMENIMA
      DO 500 ID=1,4 
      IF(IACTIVE(ID).EQ.0) GO TO 500
      IF(ID.LE.2) THEN
        IF(IPASSME.EQ.2) GO TO 500
      ELSE
        IF(IPASSME.EQ.1) GO TO 500
      ENDIF
      IF(LMTOT(ID).EQ.0) GO TO 500  
      INDVE=1
      IF(ID.EQ.2) INDVE=2   
      CALL CLEAR(SKEES,16)
      CALL CLEAR(F9ES,4)
      IF(IDARCY.NE.0) THEN
        IF(ID.LE.2) THEN
          DO I=1,NCV2
            DO J=1,NCV2
              SKEES(I,J)=SKES(ID,I,J)
              F9ES(I)=F9ES(I)-SKES(ID,I,J)*TT21S(ID,J)
            ENDDO
          ENDDO
        ELSE
          DO 430 I=1,NCV2
             DO 430 J=1,NCV2
             IF(IFORM.EQ.2) THEN
                 SKEES(I,J)=SKEES(I,J)+SKEMS(ID,I,J)+SKEDS(ID,I,J)
                 F9ES(I)=F9ES(I)-SKEMS(ID,I,J)*(TT21S(ID,J)-
     1           TT210S(ID,J))-SKEDS(ID,I,J)*TT21S(ID,J)
             ELSE
                 CONTINUE
C                KORISTI SE SAMO IFORM=2
C               SKEES(I,J)=SKEES(I,J)+SKEMS(ID,I,J)+SKEDS(ID,I,J)
C               SKE(II,J)=SKE(II,J)+SKEP(I,J)
C               F9(II)=F9(II)-SKEM(I,J)*(TT21(JJ)-TT210(JJ))-
C     1                       SKED(I,J)*TT21(JJ)-SKEP(I,J)*TT21(J)
             ENDIF
  430     CONTINUE
        ENDIF     
c
        IF(ICONTOUR.EQ.0.OR.ID.GT.2) GO TO 149
c
C       FLUXES FROM PRESCRIBED VELOCITIES AT THE BOUNDARY
C
        DO 375 ISEG=1,4
        NODE1C=ISEG
	  NODE2C=ISEG+1
	  IF(ISEG.EQ.4) NODE2C=1
        IF(ILOC(ID,NODE1C).EQ.0.OR.ILOC(ID,NODE2C).EQ.0) GO TO 375
	  VV1=VLOCAL(ID,NODE1C)
	  VV2=VLOCAL(ID,NODE2C)
	  NN1=NEL(NLM2,NODE1C)
	  NN2=NEL(NLM2,NODE2C)
	  VOLFRACTL=0.5*(VOLFRACTV(NN1)+VOLFRACTV(NN2))
	  IF(ID.EQ.2)VOLFRACTL=1.-VOLFRACTL
	  DO J=1,2
          CK2(1,J)=CORD(NN1,J)
          CK2(2,J)=CORD(NN2,J)
        ENDDO		        
	  DX=VOLFRACTL*(CK2(2,1)-CK2(1,1))
        DY=VOLFRACTL*(CK2(2,2)-CK2(1,2))
      	ELL=DSQRT(DX*DX+DY*DY)
C
C       NORMAL VELOCITY TO THE SEGMENT - IN-VELOCITY CONSIDERED POSITIVE
C       NODES 1-2 ARE IN COUNTER-CLOCKWISE SENSE
        ANX=DY/ELL
        ANY=-DX/ELL
        ELL=0.5*ELL
C
        DO 373 I=1,NGAU2X  
        JR=NREF(NGAU2X) + I
        RRR = XG(JR)
        HH1=0.5*(1.D0-RRR)
        HH2=0.5*(1.D0+RRR)
        DUM=1.D0 
        IF(INDAX.EQ.1) THEN  
           DUM=HH1*CK2(1,2)+HH2*CK2(2,2)
        ENDIF
        WDT=WGT(JR)*DABS(DUM)*ELL*THICK
        VVV=HH1*VV1+HH2*VV2
        F9ES(NODE1C)=F9ES(NODE1C)-VVV*HH1*WDT
        F9ES(NODE2C)=F9ES(NODE2C)-VVV*HH2*WDT
  373   CONTINUE
C       COMPONENTS OF VELOCITIES 
        IF(IPRINTVEL.EQ.1) THEN
           NZADCONTUREV(INDVE,NN1)=NZADCONTUREV(INDVE,NN1)+1
	     NZADCONTUREV(INDVE,NN2)=NZADCONTUREV(INDVE,NN2)+1
           ZADAVXYZ(INDVE,1,NN1)=ZADAVXYZ(INDVE,1,NN1)+VVV*ANX
           ZADAVXYZ(INDVE,2,NN1)=ZADAVXYZ(INDVE,2,NN1)+VVV*ANY
           ZADAVXYZ(INDVE,1,NN2)=ZADAVXYZ(INDVE,1,NN2)+VVV*ANX
           ZADAVXYZ(INDVE,2,NN2)=ZADAVXYZ(INDVE,2,NN2)+VVV*ANY
        ENDIF
  375   CONTINUE   
        GO TO 149
      ENDIF
C
C     SLUCAJ KADA NIJE DARSIJEV PROBLEM  - NE KORISTI SE U OVOJ SUBROUTINE
C     PARAMETAR IDARCY.NE.0 
C
      IF (INDVEL .EQ. 1) GO TO 200
	if(INDFLUXKC.eq.1.and.NELZAD.eq.0) go to 135
      IF(NSTAC.EQ.0) GO TO 740
      DO  I=1,MEL2D
         ELS(ID,I)=ELS(ID,I)/DT
	ENDDO
      K=0
      DO I=1,NCV2
        DO J=I,NCV2
          K=K+1
          SKEES(I,J)=ELS(ID,K)
          SKEES(J,I)=SKEES(I,J)
	  ENDDO
	ENDDO
      DO  I=1,NCV2
         DO  J=1,NCV2
          F9ES(I)=F9ES(I)+SKEES(I,J)*TT210S(ID,J)
         ENDDO
      ENDDO
C 
  740 DO I=1,MEL2D
        HPS(ID,I)=HPS(ID,I)+ELS(ID,I)
      ENDDO
      K=0
      DO I=1,NCV2
        DO J=I,NCV2
          K=K+1
          SKEES(I,J)=HPS(ID,K)
          SKEES(J,I)=SKEES(I,J)
	  ENDDO
	ENDDO    
      DO I=1,NCV2
        DO J=1,NCV2
          F9ES(I)=F9ES(I)-SKEES(I,J)*TT21S(ID,J)
        ENDDO
	ENDDO
	IF(INDSK.EQ.0) THEN
	  DO I=1,MEL2D
          HP(I)=0.D0
        ENDDO
      ENDIF
C
  149 CONTINUE
      
      IF(IDARCY.NE.0) THEN
         DO I=1,4
           DO J=1,4
              SKEES(I,J)=AEFF*SKEES(I,J)
           ENDDO
           F9ES(I)=AEFF*F9ES(I)
         ENDDO
      ENDIF
c      
      IF(INDFLUX.EQ.1) GO TO 137
  135 CONTINUE
C
      DO I=1,4
         LM2(I)=LMS(ID,I)
      ENDDO
C
      IF(IMUMPS.EQ.0) THEN
        IF(IDARCY.EQ.0) THEN
          DO I=1,MEL2D
             HP(I)=HPS(ID,I)
          ENDDO
          CALL MATSTE (A(LSK),A(LMAXA),A(LF),HP,F9ES,LM2,NCV2,INDSK)
	  ELSE
	    CALL ADDSTF(A(LALEVO),A(LSILE),A(LDESNO),SKEES,F9ES,A(LMAXA),LM2,
     1              NCV2,1)
	  ENDIF
	ELSE
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
        CALL sparseassembler_addelemmatrix(4,LM2,SKEES)
#endif
        CALL SPAKDE(A(LSILE),F9ES,LM2,4,JEDN)
	ENDIF	
C
  137 CONTINUE 
  500 CONTINUE      
  200 CONTINUE
  
      IF(IPRINTVEL.EQ.1.AND.ICONV.EQ.1) THEN
         KK=1
         IF(IACTIVE(3).EQ.1)KK=2
         DO NODE=1,NPT
             DO J=1,KK
	          IF(NZADCONTUREV(J,NODE).GT.1) THEN
	             COEF=NZADCONTUREV(J,NODE)
                   ZADAVXYZ(J,1,NODE)=ZADAVXYZ(J,1,NODE)/COEF  
                   ZADAVXYZ(J,2,NODE)=ZADAVXYZ(J,2,NODE)/COEF      
                ENDIF
             ENDDO
          ENDDO
      ENDIF
C
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTEB2DARCYS(IDT,IDTCD,CORD,TCONS,NTAKV,NTACV,NEL,NQ,
     1 MATV,EL,HP,HK,SKE,THI2D,TT1,TT0,IBFK,FAKP,FVPOT,HR,MATCONV,
     2 AMATFC,MATDIF,AMATFD,NZADJ,NODEIN,NODEOUT,FLUX,VOLFRACTV,
     3 AMIV,DARCYCOEFV,IDARCYMA,DWALLSMEV,DIAMSMEV,DPIPE,DTISSUE,
     4 ZADATA1,ZADATA0,ZADAVXYZ,NZADCONTUREV,IACTIVE,NZADP,NDES,
     5 MAT2DCONV,MAT2DdIF,AEFF,IDARCY,VDARCY,NZADIN,NZADOUT,ISMEARED,
     6 IPRINTVEL,NDIMID)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
C
      COMMON A(1)  
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON/UNSYMMETRIC/LALEVO,LDESNO,LSILE,ISYMM
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA2/ LNEL2D,LMAT2D,LNQ2D,LITG2D,LIP2CV,LNG2D,LNELG2,
     1LEL2,LHP2,LHK2,LSKE2,LDEL2,LDEHP2,LDEHK2,LTHICK,LHR2
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2C(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON/REAL2D/ CK2(9,3),P2(2,9),PJ2(2,9),XJ2(2,2),H2(9),
     1AK2,CC2,HH2,QQ2,HHP2,DET2,DET21,F9(9),TT21(9),TT212(9),TT210(9)
      COMMON /SRPSKI/ ISRPS
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ            
	common/elemmodels/modelel(20),ngele                 
	COMMON/MESSAGES/MESSAGE
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
	COMMON/FLUXKC/INDFLUXKC 
C
      DIMENSION IDT(NDIMID,NPT),IDTCD(2,NPT),CORD(NPT,3),TCONS(*),
     1 NTAKV(*),NTACV(*),NEL(NE2D,4),NQ(*),MATV(*),EL(*),HP(*),HK(*),
     2 SKE(NDES,NDES),THI2D(NE2D),TT1(JEDN),TT0(JEDN),IBFK(NMATT,*),
     3 FAKP(NMATT,*),FVPOT(*),HR(*)
      DIMENSION MATCONV(NMATTCONV),AMATFC(NMATTCONV,2,*),
     1          MATDIF(NMATTDIF),AMATFD(NMATTDIF,2,*)     
      DIMENSION NZADJ(3,NZADP)
      DIMENSION NODEIN(NZADIN),NODEOUT(NZADOUT),FLUX(NPT)
      DIMENSION VOLFRACTV(NPT),AMIV(NPT),DARCYCOEFV(NPT),
     1          IDARCYMA(NPT),DWALLSMEV(NPT),DIAMSMEV(NPT),DPIPE(NPT),
     2          DTISSUE(NPT),ZADATA1(NZADP),ZADATA0(NZADP),
     3          ZADAVXYZ(2,3,NPT),NZADCONTUREV(2,NPT),IACTIVE(4) 

      DIMENSION ZADLOCAL(4,4),ZADLOCAL0(4,4),LMZADA(4,4),
     1          VLOCAL(4,4),VCONV(2,4),GRADC(2,4),VOLFLOC(4),
     2          DARCYVS(4),DDIFV(4),ILOC(4,4),LM2(4)
      DIMENSION SKES(4,4,4),SKEMS(4,4,4),SKEDS(4,4,4),LMS(4,4),
     1          TT21S(4,4),TT210S(4,4),HPS(4,10),ELS(4,10),HKS(4,10),
     2          F9S(4,4),SKEES(4,4),F9ES(4),NODEL(4)
     
      DIMENSION XG(15),WGT(15),NREF(6),TBK(2),VPOT(9)           

C
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
C
      IFORM  = 2
      DDARCY = 0.D0
      VBR    = 1.0D35
	AKTT   = 1./DT
C	MAT2DDIF IS USED ALSO FOR HEAT TRANSFER
      IF(IZIP.EQ.2) GO TO 15
      IF(NQE.NE.1) GO TO 15
      CALL TABF(A(LQEFN),A(LNTAQE),NQE,NQE,VREME,QQ2,NTA,IND)
      IF(IND.EQ.0) GO TO 15
      IF(ISRPS.EQ.0)
     1WRITE(3,2000) NQE,VREME
      IF(ISRPS.EQ.1)
     1WRITE(3,6000) NQE,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA ZAPREMINSKI IZVOR - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME = ',1PD12.4)
      STOP
   15 CONTINUE
      write(3,2500)kor,iter
 2500 format(/' 2D smeared, kor,iter=',2i5)
C
      ICONVV = ICONV
      IDIFFHEAT = 0
      IF(IDIFUSE.NE.0.OR.IHEAT.NE.0) IDIFFHEAT = 1
      IF(ICONV.EQ.1.AND.IPRINTVEL.EQ.1) THEN
          CALL ICLEAR(NZADCONTUREV,2*NPT)
          CALL CLEAR(ZADAVXYZ,6*NPT) 
      ENDIF 
C
C     LOOP OVER ELEMENTS     
C
      DO 200 NLM2= 1,NE2D
      write(3,2501) nlm2
 2501 format(' element nlm2=',i5)

      KKIN=0   
      KKOUT=0 
      CC2=1.D0 
      !CC2=0.D0  

C 
      CALL CLEAR(ZADLOCAL,16)
      CALL CLEAR(ZADLOCAL0,16)
      CALL ICLEAR(LMZADA,16)
      CALL CLEAR(VLOCAL,16)
      CALL CLEAR(VLOCAL,16)
      CALL CLEAR(VOLFLOC,4) 
      CALL ICLEAR(ILOC,16)
      CALL CLEAR(SKEMS,64) 
      CALL CLEAR(SKES,64)
      CALL CLEAR(SKEDS,64)
      CALL ICLEAR(LMS,16)
      CALL CLEAR(TT21S,16)
      CALL CLEAR(TT210S,16)
      CALL CLEAR(HPS,40)
      CALL CLEAR(ELS,40)
      CALL CLEAR(HKS,40)
      CALL CLEAR(F9S,16)
      DO I=1,9
        VPOT(I)=0.D0
      ENDDO
 
C     IF(NSTAC.EQ.0) GO TO 23
      CALL CLEAR(SKE,NDES*NDES)
      CALL CLEAR(SKEM,16)
      CALL CLEAR(SKEP,16)
      CALL CLEAR(SKED,16) 
C
      IF(NMAT2D.GT.1.OR.INDIFFUS.EQ.1) MAT2D=MATV(NLM2)
      IQE2=0
      IF(NQE.GT.0) IQE2=NQ(NLM2)
CE
      IF(IDARCY.NE.0) GO TO 30
      ARG=0.
	IF(indiffus.EQ.1) THEN
	  CC2=1.D0
	  GO TO 30 
	ENDIF
	IF(ISMEARED.GT.0) GO TO 40
C     DEO DO LABELE 40 SE PRESKACE
      IF(NSTAC.EQ.0.OR.KONC.EQ.1) GO TO 40
      CALL TABF(A(LTABC),A(LNTACV),MAT2D,NMATT,ARG,CC2,NTA,IND)
   25 IF(IANIZ.EQ.0) GO TO 188
      FAX=FAKP(MAT2D,1)
      FAY=FAKP(MAT2D,2)
  188 IBX=IBFK(MAT2D,1)
      IBY=IBFK(MAT2D,2)
      IF(KONK.EQ.1) GO TO 30
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,ARG,AKX,NTA,IND)
      IF(IBY.GT.0) GO TO 180
      IF(IANIZ.EQ.0) GO TO 189
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 30
  189 AKY=AKX
      GO TO 30
  180 CALL TABF(A(LTABK),A(LNTAKV),IBY,NTABK,ARG,AKY,NTA,IND)
   30 IF(IQE2.EQ.0.OR.NQE.EQ.1) GO TO 44
      CALL TABF(A(LQEFN),A(LNTAQE),IQE2,NQE,VREME,QQ2,NTA,IND)
      IF(IND.EQ.0) GO TO 44
      WRITE(3,2000) IQE2,VREME
      STOP
   44 IF(IZIP.NE.2.OR.MAXTQE.GT.1) GO TO 39
      CALL TABF(A(LQEFN),A(LNTAQE),IQE2,NQE,ARG,QQ2,NTA,IND)
CE POTENTIAL V  FUNCTION VECTOR AT NODES
   39 IF(ITOR.NE.2) GO TO 40
      IF(IQE2.EQ.0) GO TO 40
      NCV2=0
      DO 51 I=1,NBR2
      IF(NEL(NLM2,I).EQ.0) GO TO 51
      J=NEL(NLM2,I)
      NCV2=NCV2+1
      VPOT(NCV2)=FVPOT(J)
   51 CONTINUE
C
CE  TEMPERATURE AT NODES  VECTOR
C
   40 NCV2     = 0
      NND5     = 0
	NELZAD   = 0
	ICONTOUR = 0
C
      DO 50 I=1,NBR2
      IF(I.LE.4) GO TO 41
      IDEL2(I-4)=0
      IF(NEL(NLM2,I).EQ.0) GO TO 50   
      NND5=NND5+1
      NOD5(NND5)=I
      IDEL2(I-4)=1
   41 J=NEL(NLM2,I)           
      NCV2=NCV2+1
      NODEL(NCV2)=J
      VOLFLOC(NCV2)=VOLFRACTV(J)
C
C     PRESCRIBED
C
      IF(NZADP.GT.0) THEN
	  DO KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
	      IDOFA=IABS(IDOF)
            IF(IDOF.LT.0) THEN
	        ILOC(IDOFA,NCV2) = 1
	        ICONTOUR   = 1
	      ENDIF	      
            NELZAD=NELZAD+1
            NF=NZADJ(3,KK)
            IF(IDOF.GT.0) THEN
               LMZADA(IDOFA,NCV2)     = 1
               ZADLOCAL(IDOFA,NCV2)   = ZADATA1(KK)
               ZADLOCAL0(IDOFA,NCV2)  = ZADATA0(KK)
            ELSE
              VLOCAL(IDOFA,NCV2) = ZADATA1(KK)
            ENDIF
	    ENDIF
	  ENDDO
 6015   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  VREME =',1PD12.4)
 6016   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  TIMET=VREME-DT =',1PD12.4)
	ENDIF		      
C
      KK=0
      DO II=1,4
         IF(IACTIVE(II).EQ.1) THEN
            KK=KK+1
            LMS(II,NCV2)=IDT(KK,J)
         ENDIF
      ENDDO 
   45 CONTINUE
C      IF (NSTAC.GT.0.OR.LINTE.GT.0.OR.NELZAD.GT.0) THEN
       KK=0
       DO II=1,4
          IF(IACTIVE(II).EQ.1) THEN
             KK=KK+1
             JJ=IDT(KK,J)
             IF(JJ.GT.0) THEN
                 TT21S(II,NCV2)= TT1(JJ)
                 TT210S(II,NCV2)= TT0(JJ)  
	       ELSE
	          IF(LMZADA(II,NCV2).EQ.1) THEN
                    TT21S(II,NCV2)=ZADLOCAL(II,NCV2)
                    TT210S(II,NCV2)=ZADLOCAL0(II,NCV2)
                ENDIF
             ENDIF
          ENDIF
      ENDDO
C	ENDIF
   50 CONTINUE
C----------------  END OF LOOP OVER ELEMENT NODES-----
  300 IELX2=NCV2
CE  NODAL COORDINATES OF ELEMENTS MATRIX
      K=0
      DO 60 I=1,NBR2
      IF(NEL(NLM2,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM2,I)
      DO 55 J=1,2
   55 CK2(K,J)=CORD(KK,J)
   60 CONTINUE 
C
      THICK=THI2D(NLM2)
      !IF(INDAX.NE.0) THICK=1.D0 
C
CE    GAUSS POINTS  LOOP =============================================
C
      KKABSORB=0
      NGAUSC=0
      DO 101 NGX=1,NGAU2X 
      JR=NREF(NGAU2X) + NGX
      R = XG(JR)
      DO 100 NGY=1,NGAU2Y
      JS=NREF(NGAU2Y) + NGY
      S = XG(JS)
      WT=WGT(JR)*WGT(JS)
	NGAUSC=NGAUSC+1
      CALL JACT2(R,S,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
      RAD=1.
C      IF(INDAX.EQ.0) GO TO 281
C
      IF(INDAX.EQ.1) THEN
         RAD=0.
         DO I=1,NCV2
           RAD=RAD+H2(I)*CK2(I,1)
         ENDDO
      ENDIF
C
CE    PRESSURE AT GAUSS POINT
C
      IF(NSTAC.EQ.0.OR.KONC.EQ.0) GO TO 70
      IF(NTACV(MAT2D).EQ.0) GO TO 67
      CALL TABF(A(LTABC),A(LNTACV),MAT2D,NMATT,TEMP,CC2,NTA,IND)
      IF(IND.EQ.0) GO TO 70
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) MAT2D,TEMP
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) MAT2D,TEMP
 2005 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA SPEC. TOPLOTA - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6005 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SPECIFIC HEAT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
   67 CALL ANALCF(MAT2D,TEMP,CC2,A(LGUSM))
   70 CONTINUE
C
      FAX=1.D0
      FAY=1.D0
C       CORRECT DDIFUS FOR MODEL
C     FOR SMEARED CONDITIONS MATERIAL PARAMETERS ARE INTERPOLATED FROM NODES
      IF(ISMEARED.GT.0) GO TO 81
      
      IF(KONK.EQ.0) GO TO 80
      IF(IBX.EQ.0.AND.IBY.EQ.0) GO TO 77
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,TEMP,AKX,NTA,IND)
      IF(IND.GT.0) GO TO 22
      IF(IBY.GT.0) GO TO 181
      IF(IANIZ.EQ.0) GO TO 186
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 182
  186 AKY=AKX
      GO TO 182
  181 CALL TABF(A(LTABK),A(LNTAKV),IBY,NTABK,TEMP,AKY,NTA,IND)
  182 IF(IND.EQ.0) GO TO 80
   22 CONTINUE
      IF(ISRPS.EQ.0)
     *WRITE(3,2001)  MAT2D,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6001)  MAT2D,TEMP
 2001 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. PROVODJENJA - TOPL.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6001 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'DARCY COEFF-PRESSURE OR DDIF-CONC,  NO. =',I5/
     11X,'CONCENTRARION,  CONC =',1PD12.4/
     21X,'S T O P'//' CHECK: INPUT DATA FOR DIFFUSION COEFFICIENT'/)
C
      STOP
   77 CALL ANALKF(MAT2D,TEMP,AKX,AKY,AKZ,A(LTOPM),A(LTMNM))
      IF(AKY.GT.0) GO TO 80
      IF(IANIZ.EQ.0) GO TO 811
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 80
  811 AKY=AKX
   80 IF(IZIP.NE.2.OR.MAXTQE.EQ.1) GO TO 81
      CALL TABF(A(LQEFN),A(LNTAQE),IQE2,NQE,TEMP,QQ2,NTA,IND)
      IF(IND.EQ.0) GO TO 81
      IF(ISRPS.EQ.0)
     *WRITE(3,2011) IQE2,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6011) IQE2,TEMP
 2011 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPLOTNOG IZVORA (PONORA)   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6011 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
CE  ELEMENT MATRICES
   81 WDT=WT*DET21*RAD*THICK
      WDT0=WDT
      VEFFEC=0.D0
      DO I=1,NCV2
            VEFFEC=VEFFEC+H2(I)*VOLFLOC(I)
      ENDDO
      DIAM=0.D0
      DO I=1,NCV2
         DIAM=DIAM+H2(I)*DIAMSMEV(NODEL(I))
      ENDDO
      AMI=0.D0
      DDARCY=0.D0
      IF(IACTIVE(1).EQ.1) THEN
         DO I=1,NCV2
           AMI=AMI+H2(I)*AMIV(NODEL(I))
         ENDDO
         AKPIPE=DIAM*DIAM/(32.*AMI)
         DARCYVS(1)=AKPIPE  
      ENDIF
      IF(IACTIVE(3).EQ.1) THEN
         DO I=1,NCV2
            DDARCY=DDARCY+H2(I)*DARCYCOEFV(NODEL(I))
         ENDDO
C         DDARCY=(1.-VEFFEC)*DDARCY 
         DARCYVS(3)=DDARCY       
      ENDIF
      DDIF=0.D0
      DDIFP=0.D0
      IF(IACTIVE(2).EQ.1)THEN
         DO I=1,NCV2
           DDIFP=DDIFP+H2(I)*DPIPE(NODEL(I))
         ENDDO
C         DDIFP=VEFFEC*DDIFP
         DDIFV(2)=DDIFP
      ENDIF
      IF(IACTIVE(4).EQ.1) THEN
          DO I=1,NCV2
              DDIF=DDIF+H2(I)*DTISSUE(NODEL(I))
          ENDDO
C          DDIF=(1.-VEFFEC)*DDIF
          DDIFV(4)=DDIF
      ENDIF
      DO 100 ID=1,4
      IF(IACTIVE(ID).EQ.0) GO TO 100
      IF(ID.LE.2) THEN
         WDT=VEFFEC*WDT0
      ELSE
         WDT=(1.-VEFFEC)*WDT0
      ENDIF
      IF(ICONV.NE.0.AND.(ID.EQ.1.OR.ID.EQ.3)) THEN
          VCONV(1,ID)=0.D0
          VCONV(2,ID)=0.D0 
          DO K=1,NCV2 
            VCONV(1,ID)=VCONV(1,ID)-DARCYVS(ID)*PJ2(1,K)*TT21S(ID,K)
            VCONV(2,ID)=VCONV(2,ID)-DARCYVS(ID)*PJ2(2,K)*TT21S(ID,K)
          ENDDO
      ENDIF    
C       
      IF(IDARCY.NE.0.OR.ISMEARED.GT.0) GO TO 400
C     
CE  CALCULATION OF CONDUCTION MATRIX AND SPECIFIC HEAT MATRIX OF ELEMENT
      IF(ID.EQ.1.OR.ID.EQ.3) GO TO 100
      AKX=DDIFV(ID)
      AKY=AKX
      K=0
      DO 85 I=1,NCV2
      DO 83 J=I,NCV2
      K=K+1
      IF(NSTAC.EQ.0) GO TO 87
      HH2= H2(I)*H2(J)*WDT
      ELS(ID,K)=ELS(ID,K)+CC2*HH2   
   87 IF(INDSK.EQ.0) GO TO 83
      PJX=PJ2(1,I)*PJ2(1,J)
      PJY=PJ2(2,I)*PJ2(2,J)
      HPS(ID,K) = HPS(ID,K) +(AKX*PJX+AKY*PJY)*WDT
   83 CONTINUE
      IF(IQE2.EQ.0) GO TO 85
CE  CALCULATION OF RIGHT-SIDE VECTOR
      GJ=1.
      IZ=1
C      IF(ITOR.NE.2) GO TO 86
C      IZ=-1
C      VX=0.
C      VY=0.
C      DO 84 NV=1,NCV2
C      VX=VX+PJ2(1,NV)*VPOT(NV)
C      VY=VY+PJ2(2,NV)*VPOT(NV)
C   84 CONTINUE
C      GJ=VX**2+VY**2
   86 F9S(ID,I)=F9S(ID,I)+H2(I)*WDT*GJ*QQ2**IZ
   85 CONTINUE
      IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
c      IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
      TBK(1)=0.
      TBK(2)=0.
      DO 151 J=1,2
      DO 150 I=1,NCV2
  150 TBK(J)=TBK(J)+PJ2(J,I)*TT21S(ID,I)
  151 CONTINUE
      TBK(1)=AKX*TBK(1)
      TBK(2)=AKY*TBK(2)
      DO 152 I=1,NCV2
      DO 153 J=1,2
  153 F9S(ID,I)=F9S(ID,I)-(PJ2(J,I)*TBK(J))*WDT
  152 CONTINUE
C
      GO TO 100

  400 CONTINUE
C
C     DARCY AND DIFFUSION MATRICES
C
      IF(ICONVV.NE.0.AND.(ID.EQ.1.OR.ID.EQ.3)) THEN
        AKX = DARCYVS(ID)
        AKY = AKX
        DO I=1,NCV2
          DO J=1,NCV2
            PJX = PJ2(1,I)*PJ2(1,J)
            PJY = PJ2(2,I)*PJ2(2,J)
            SKES(ID,I,J)=SKES(ID,I,J)+(AKX*PJX+AKY*PJY)*WDT 
          ENDDO
        ENDDO
      ENDIF
C      
      IF(IDIFFHEAT.NE.0.AND.ID.EQ.2.OR.ID.EQ.4) THEN    
        AKTW=CC2*AKTT*WDT
        DDIFFUS=DDIFV(ID)
        DDARCY=DARCYVS(ID-1)
        AKDW     = DDIFFUS*WDT
        AKDARCYW = DDARCY*WDT
        DO 405 I=1,NCV2
          H2TWI = H2(I)*AKTW
          H2WI  = H2(I)*WDT
          H2PI  = H2(I)*AKDARCYW
          DO 405 J=1,NCV2
            PJX = PJ2(1,I)*PJ2(1,J)
            PJY = PJ2(2,I)*PJ2(2,J)
            SKEMS(ID,I,J)=SKEMS(ID,I,J)+H2TWI*H2(J)
            IF(ICONV.GT.0) THEN
              COEFFV=VCONV(1,ID-1)*PJ2(1,J)+VCONV(2,ID-1)*PJ2(2,J)
            ENDIF
            SKEDS(ID,I,J)=SKEDS(ID,I,J)+(PJX+PJY)*AKDW
            IF(ICONV.EQ.1.AND.IFORM.EQ.2) THEN
                SKEDS(ID,I,J)=SKEDS(ID,I,J)+H2WI*COEFFV
            ELSE
C                ONLY IFORM=2 IS USED
               CONTINUE
C              SKEDS(ID,I,J)=SKEDS(ID,I,J)+(PJX+PJY)*AKDW
C              SKEPS(ID,I,J)=SKEPS(ID,I,J)-H2PI*(GRADC(1,ID)*PJ2(1,J)+
C     1                                GRADC(2,ID)*PJ2(2,J))
            ENDIF
  405   CONTINUE
      ENDIF
C 
  100 CONTINUE
  101 CONTINUE
C
C     KRAJ PETLJE PO GAUSOVIM TACKAMA ----------
C
C     PETLJA PO DOMENIMA
      DO 500 ID=1,4 
      IF(IACTIVE(ID).EQ.0) GO TO 500  
      INDVE=1
      IF(ID.EQ.3) INDVE=2   
      CALL CLEAR(SKEES,16)
      CALL CLEAR(F9ES,4)
      IF(IDARCY.NE.0) THEN
        IF(ID.EQ.1.OR.ID.EQ.3) THEN
          DO I=1,NCV2
            DO J=1,NCV2
              SKEES(I,J)=SKES(ID,I,J)
              F9ES(I)=F9ES(I)-SKES(ID,I,J)*TT21S(ID,J)
            ENDDO
          ENDDO
        ELSE
          DO 430 I=1,NCV2
             DO 430 J=1,NCV2
             IF(IFORM.EQ.2) THEN
                 SKEES(I,J)=SKEES(I,J)+SKEMS(ID,I,J)+SKEDS(ID,I,J)
                 F9ES(I)=F9ES(I)-SKEMS(ID,I,J)*(TT21S(ID,J)-
     1           TT210S(ID,J))-SKEDS(ID,I,J)*TT21S(ID,J)
             ELSE
                 CONTINUE
C                KORISTI SE SAMO IFORM=2
C               SKEES(I,J)=SKEES(I,J)+SKEMS(ID,I,J)+SKEDS(ID,I,J)
C               SKE(II,J)=SKE(II,J)+SKEP(I,J)
C               F9(II)=F9(II)-SKEM(I,J)*(TT21(JJ)-TT210(JJ))-
C     1                       SKED(I,J)*TT21(JJ)-SKEP(I,J)*TT21(J)
             ENDIF
  430     CONTINUE
        ENDIF     
c
        IF(ICONTOUR.EQ.0.OR.(ID.EQ.2.OR.ID.EQ.4)) GO TO 149
c
C       FLUXES FROM PRESCRIBED VELOCITIES AT THE BOUNDARY
C
        DO 375 ISEG=1,4
        NODE1C=ISEG
	  NODE2C=ISEG+1
	  IF(ISEG.EQ.4) NODE2C=1
        IF(ILOC(ID,NODE1C).EQ.0.OR.ILOC(ID,NODE2C).EQ.0) GO TO 375
	  VV1=VLOCAL(ID,NODE1C)
	  VV2=VLOCAL(ID,NODE2C)
	  NN1=NEL(NLM2,NODE1C)
	  NN2=NEL(NLM2,NODE2C)
	  VOLFRACTL=0.5*(VOLFRACTV(NN1)+VOLFRACTV(NN2))
	  DO J=1,2
          CK2(1,J)=CORD(NN1,J)
          CK2(2,J)=CORD(NN2,J)
        ENDDO		        
	  DX=VOLFRACTL*(CK2(2,1)-CK2(1,1))
        DY=VOLFRACTL*(CK2(2,2)-CK2(1,2))
      	ELL=DSQRT(DX*DX+DY*DY)
C
C       NORMAL VELOCITY TO THE SEGMENT - IN-VELOCITY CONSIDERED POSITIVE
C       NODES 1-2 ARE IN COUNTER-CLOCKWISE SENSE
        ANX=DY/ELL
        ANY=-DX/ELL
        ELL=0.5*ELL
C
        DO 373 I=1,NGAU2X  
        JR=NREF(NGAU2X) + I
        RRR = XG(JR)
        HH1=0.5*(1.D0-RRR)
        HH2=0.5*(1.D0+RRR)
        DUM=1.D0 
        IF(INDAX.EQ.1) THEN  
           DUM=HH1*CK2(1,2)+HH2*CK2(2,2)
        ENDIF
        WDT=WGT(JR)*DABS(DUM)*ELL
        VVV=HH1*VV1+HH2*VV2
        F9ES(NODE1C)=F9ES(NODE1C)-VVV*HH1*WDT
        F9ES(NODE2C)=F9ES(NODE2C)-VVV*HH2*WDT
  373   CONTINUE
C       COMPONENTS OF VELOCITIES 
        IF(IPRINTVEL.EQ.1) THEN
           NZADCONTUREV(INDVE,NN1)=NZADCONTUREV(INDVE,NN1)+1
	     NZADCONTUREV(INDVE,NN2)=NZADCONTUREV(INDVE,NN2)+1
           ZADAVXYZ(INDVE,1,NN1)=ZADAVXYZ(INDVE,1,NN1)+VVV*ANX
           ZADAVXYZ(INDVE,2,NN1)=ZADAVXYZ(INDVE,2,NN1)+VVV*ANY
           ZADAVXYZ(INDVE,1,NN2)=ZADAVXYZ(INDVE,1,NN2)+VVV*ANX
           ZADAVXYZ(INDVE,2,NN2)=ZADAVXYZ(INDVE,2,NN2)+VVV*ANY
        ENDIF
  375   CONTINUE   
        GO TO 149
      ENDIF
C
C     SLUCAJ KADA NIJE DARSIJEV PROBLEM  - NE KORISTI SE U OVOJ SUBROUTINE
C     PARAMETAR IDARCY.NE.0 
C
      IF (INDVEL .EQ. 1) GO TO 200
	if(INDFLUXKC.eq.1.and.NELZAD.eq.0) go to 135
      IF(NSTAC.EQ.0) GO TO 740
      DO  I=1,MEL2D
         ELS(ID,I)=ELS(ID,I)/DT
	ENDDO
      K=0
      DO I=1,NCV2
        DO J=I,NCV2
          K=K+1
          SKEES(I,J)=ELS(ID,K)
          SKEES(J,I)=SKEES(I,J)
	  ENDDO
	ENDDO
      DO  I=1,NCV2
         DO  J=1,NCV2
          F9ES(I)=F9ES(I)+SKEES(I,J)*TT210S(ID,J)
         ENDDO
      ENDDO
C 
  740 DO I=1,MEL2D
        HPS(ID,I)=HPS(ID,I)+ELS(ID,I)
      ENDDO
      K=0
      DO I=1,NCV2
        DO J=I,NCV2
          K=K+1
          SKEES(I,J)=HPS(ID,K)
          SKEES(J,I)=SKEES(I,J)
	  ENDDO
	ENDDO    
      DO I=1,NCV2
        DO J=1,NCV2
          F9ES(I)=F9ES(I)-SKEES(I,J)*TT21S(ID,J)
        ENDDO
	ENDDO
	IF(INDSK.EQ.0) THEN
	  DO I=1,MEL2D
          HP(I)=0.D0
        ENDDO
      ENDIF
C
  149 CONTINUE
      IF(IDARCY.NE.0) THEN
         DO I=1,4
           DO J=1,4
              SKEES(I,J)=AEFF*SKEES(I,J)
           ENDDO
           F9ES(I)=AEFF*F9ES(I)
         ENDDO
      ENDIF
c      
      IF(INDFLUX.EQ.1) GO TO 137
C      IF(NHP.EQ.0.AND.NTOK.EQ.0.AND.NQP.EQ.0.AND.NHR.EQ.0) GO TO 135
CE    INTEGRALS OVER BORDER LINES OF ELEMENT
C      CALL INTAB2(A(LNG2D),A(LNELG2),A(LNEL2D),A(LNTAHP),A(LHP2),A(LHK2)
C     1,A(LSKE2),A(LNTAHR),A(LHR2),A(LFOHR),NREF,XG,WGT)
CE    INSERTING MATRIX HP AND VECTOR F9 INTO SYSTEM
  135 CONTINUE       
C
      VBR=1.0D35
C
      DO I=1,4
         LM2(I)=LMS(ID,I)
      ENDDO
      IF(IMUMPS.EQ.0) THEN
        IF(IDARCY.EQ.0) THEN
          DO I=1,MEL2D
             HP(I)=HPS(ID,I)
          ENDDO
          CALL MATSTE (A(LSK),A(LMAXA),A(LF),HP,F9ES,LM2,NCV2,INDSK)
	  ELSE
	    CALL ADDSTF(A(LALEVO),A(LSILE),A(LDESNO),SKEES,F9ES,A(LMAXA),LM2,
     1              NCV2,1)
	  ENDIF
	ELSE
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
        CALL sparseassembler_addelemmatrix(4,LM2,SKEES)
#endif
        CALL SPAKDE(A(LSILE),F9ES,LM2,4,JEDN)
	ENDIF
C
  137 CONTINUE 
  500 CONTINUE      
  200 CONTINUE
  
      IF(IPRINTVEL.EQ.1.AND.ICONV.EQ.1) THEN
         KK=1
         IF(IACTIVE(3).EQ.1)KK=2
         DO NODE=1,NPT
             DO J=1,KK
	          IF(NZADCONTUREV(J,NODE).GT.1) THEN
	             COEF=NZADCONTUREV(J,NODE)
                   ZADAVXYZ(J,1,NODE)=ZADAVXYZ(J,1,NODE)/COEF  
                   ZADAVXYZ(J,2,NODE)=ZADAVXYZ(J,2,NODE)/COEF      
                ENDIF
             ENDDO
          ENDDO
      ENDIF
C	
      RETURN
      END     
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTEB2DARCY(IDT,IDTCD,CORD,TCONS,NTAKV,NTACV,NEL,NQ,
     1 MATV,EL,HP,HK,SKE,THI2D,TT1,TT2,TT0,IBFK,FAKP,FVPOT,HR,MATCONV,
     2 AMATFC,MATDIF,AMATFD,NZADJ,ZADFM,NODEIN,NODEOUT,FLUX,MATERH,
     3 AMATFRO,AMATFSH,AMATFK,VOLFRACTV,NZADP,NDES,MAT2DCONV,MAT2DdIF,
     4 AEFF,IDARCY,VDARCY,NZADIN,NZADOUT,ISMEARED,NDIMID)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
C
      COMMON A(1)  
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON/UNSYMMETRIC/LALEVO,LDESNO,LSILE,ISYMM
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA2/ LNEL2D,LMAT2D,LNQ2D,LITG2D,LIP2CV,LNG2D,LNELG2,
     1LEL2,LHP2,LHK2,LSKE2,LDEL2,LDEHP2,LDEHK2,LTHICK,LHR2
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON/REAL2D/ CK2(9,3),P2(2,9),PJ2(2,9),XJ2(2,2),H2(9),
     1AK2,CC2,HH2,QQ2,HHP2,DET2,DET21,F9(9),TT21(9),TT212(9),TT210(9)
      COMMON /SRPSKI/ ISRPS
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ            
	common/elemmodels/modelel(20),ngele                 
	COMMON/MESSAGES/MESSAGE
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
C
      DIMENSION IDT(NDIMID,NPT),CORD(NPT,3),TCONS(*),NTAKV(*),NTACV(*),
     1NEL(NE2D,4),NQ(*),MATV(*),EL(*),HP(*),HK(*),SKE(NDES,NDES),
     2THI2D(NE2D),TT1(JEDN),TT2(JEDN),TT0(JEDN),IBFK(NMATT,*),
     3FAKP(NMATT,*),FVPOT(*),HR(*),IDTCD(2,NPT)
      DIMENSION MATCONV(NMATTCONV),AMATFC(NMATTCONV,2,*),
     1          MATDIF(NMATTDIF),AMATFD(NMATTDIF,2,*)     
      DIMENSION NZADJ(3,NZADP),ZADFM(NZADP)
      DIMENSION NODEIN(NZADIN),NODEOUT(NZADOUT),FLUX(NPT)
      DIMENSION XG(15),WGT(15),NREF(6),TBK(2),VPOT(9) 
      DIMENSION MATERH(NMATTHEAT),AMATFRO(NMATTHEAT,2,*),
     2          AMATFSH(NMATTHEAT,2,*),AMATFK(NMATTHEAT,2,*),
     3          VOLFRACTV(NPT) 

      DIMENSION ZADLOCAL(8),ZADLOCAL0(8),ZADLOCAL32(8),LMZADA(8),
     1          VLOCAL(4),SKEM(4,4),SKEP(4,4),
     2          SKED(4,4),VCONV(3),GRADC(3),VOLFLOC(4),ILOC(4) 

C
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
C
      IFORM  = 2
      DDARCY = 0.D0
      VBR    = 1.0D35
	AKTT   = 1./DT
C	MAT2DDIF IS USED ALSO FOR HEAT TRANSFER
      IF(IZIP.EQ.2) GO TO 15
      IF(NQE.NE.1) GO TO 15
      CALL TABF(A(LQEFN),A(LNTAQE),NQE,NQE,VREME,QQ2,NTA,IND)
      IF(IND.EQ.0) GO TO 15
      IF(ISRPS.EQ.0)
     1WRITE(3,2000) NQE,VREME
      IF(ISRPS.EQ.1)
     1WRITE(3,6000) NQE,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA ZAPREMINSKI IZVOR - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME = ',1PD12.4)
      STOP
   15 CONTINUE
C
      ICONVV = ICONV
      IDIFFHEAT = 0
      IF(IDIFUSE.NE.0.OR.IHEAT.NE.0) IDIFFHEAT = 1
C
C     LOOP OVER ELEMENTS     
C
      DO 200 NLM2= 1,NE2D

      KKIN=0   
      KKOUT=0 
      CC2=1.D0 
      !CC2=0.D0  
      IF(IDARCY.EQ.0) THEN 
         DO 20 I = 1,MEL2D
C        IF(INDSK.EQ.0) GO TO 21
         HP(I) = 0.
         HK(I) = 0.
         HR(I) = 0.
C    21 IF(NSTAC.EQ.0) GO TO 20
         EL(I) = 0.
   20    CONTINUE
      ENDIF
      CALL CLEAR(VOLFLOC,4)  
   
      DO 17 I=1,9
      TT21(I) = 0.
      TT212(I) = 0.
      TT210(I) = 0.
      LM2(I) = 0
	LMZADA(I)=0
      VPOT(I)=0.
   17 F9(I)=0.
      DO I=1,8
        ZADLOCAL(I)=0.D0
        ZADLOCAL0(I)=0.D0
        ZADLOCAL32(I)=0.D0
      ENDDO
C     IF(NSTAC.EQ.0) GO TO 23
      CALL CLEAR(SKE,NDES*NDES)
      CALL CLEAR(SKEM,16)
      CALL CLEAR(SKEP,16)
      CALL CLEAR(SKED,16) 
C
      IF(NMAT2D.GT.1.OR.INDIFFUS.EQ.1) MAT2D=MATV(NLM2)
      IQE2=0
      IF(NQE.GT.0) IQE2=NQ(NLM2)
CE
      IF(IDARCY.NE.0) GO TO 30
      ARG=0.
	IF(indiffus.EQ.1) THEN
	  CC2=1.D0
	  GO TO 30 
	ENDIF
      IF(NSTAC.EQ.0.OR.KONC.EQ.1) GO TO 25
      CALL TABF(A(LTABC),A(LNTACV),MAT2D,NMATT,ARG,CC2,NTA,IND)
   25 IF(IANIZ.EQ.0) GO TO 188
      FAX=FAKP(MAT2D,1)
      FAY=FAKP(MAT2D,2)
  188 IBX=IBFK(MAT2D,1)
      IBY=IBFK(MAT2D,2)
      IF(KONK.EQ.1) GO TO 30
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,ARG,AKX,NTA,IND)
      IF(IBY.GT.0) GO TO 180
      IF(IANIZ.EQ.0) GO TO 189
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 30
  189 AKY=AKX
      GO TO 30
  180 CALL TABF(A(LTABK),A(LNTAKV),IBY,NTABK,ARG,AKY,NTA,IND)
   30 IF(IQE2.EQ.0.OR.NQE.EQ.1) GO TO 44
      CALL TABF(A(LQEFN),A(LNTAQE),IQE2,NQE,VREME,QQ2,NTA,IND)
      IF(IND.EQ.0) GO TO 44
      WRITE(3,2000) IQE2,VREME
      STOP
   44 IF(IZIP.NE.2.OR.MAXTQE.GT.1) GO TO 39
      CALL TABF(A(LQEFN),A(LNTAQE),IQE2,NQE,ARG,QQ2,NTA,IND)
CE POTENTIAL V  FUNCTION VECTOR AT NODES
   39 IF(ITOR.NE.2) GO TO 40
      IF(IQE2.EQ.0) GO TO 40
      NCV2=0
      DO 51 I=1,NBR2
      IF(NEL(NLM2,I).EQ.0) GO TO 51
      J=NEL(NLM2,I)
      NCV2=NCV2+1
      VPOT(NCV2)=FVPOT(J)
   51 CONTINUE
C
CE  TEMPERATURE AT NODES  VECTOR
C
   40 NCV2     = 0
      NND5     = 0
	NELZAD   = 0
	ICONTOUR = 0
C
      DO 50 I=1,NBR2
      IF(I.LE.4) GO TO 41
      IDEL2(I-4)=0
      IF(NEL(NLM2,I).EQ.0) GO TO 50   
      NND5=NND5+1
      NOD5(NND5)=I
      IDEL2(I-4)=1
   41 J=NEL(NLM2,I) 
      IF(ISMEARED.EQ.1) THEN
          VOLFLOC(I)=VOLFRACTV(J)  
      ENDIF        
      NCV2=NCV2+1
C      
      JJ1=IDT(1,J)
      JJ2=IDT(2,J)
C 
      VLOCAL(NCV2)=0.D0
      ILOC(NCV2)=0
      NCV2DISP=NBR2+NCV2
C
C     PRESCRIBED
C
      IF(NZADP.GT.0) THEN
	  DO KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
            IF(IDOF.EQ.3) THEN
	        ILOC(NCV2) = 1
	        ICONTOUR   = 1
	      ENDIF	      
            NELZAD=NELZAD+1
            NF=NZADJ(3,KK)
            FAK = ZADFM(KK)
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,IND)
            IF(IND.NE.0) THEN    
              WRITE(3,6015) NF,VREME
              STOP
            ENDIF
            TIMET=VREME-DT
            IF(TIMET.LT.0) TIMET=0.D0
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,TIMET,FTT,NTMX,
     1                IND)
            IF(IND.NE.0) THEN    
              WRITE(3,6016) NF,TIMET
              STOP
            ENDIF
            IF(IDOF.EQ.1) THEN
              LMZADA(NCV2)     = 1
              ZADLOCAL(NCV2)   = FT*FAK
              ZADLOCAL0(NCV2)  = FTT*FAK
              ZADLOCAL32(NCV2) = ZADLOCAL(NCV2)-ZADLOCAL0(NCV2)
            ELSEIF(IDOF.EQ.2) THEN
              LMZADA(NCV2DISP)    = 1
              ZADLOCAL(NCV2DISP)  = FT*FAK
              ZADLOCAL0(NCV2DISP) = FTT*FAK
              ZADLOCAL32(NCV2DISP)= ZADLOCAL(NCV2DISP)-
     1                                ZADLOCAL0(NCV2DISP)
            ELSEIF(IDOF.EQ.3) THEN
              VLOCAL(NCV2) = FT*FAK
            ENDIF
	    ENDIF
	  ENDDO
 6015   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  VREME =',1PD12.4)
 6016   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  TIMET=VREME-DT =',1PD12.4)
	ENDIF
   37 CONTINUE			      
C
      LM2(NCV2)=JJ1
      LM2(NCV2DISP)=JJ2
      IF(NTCONS.GT.0) THEN
        LM2(NCV2)     = IDT(1,J)
        LM2(NCV2DISP) = IDT(2,J)
      ENDIF
      IF(NTCONS.EQ.0) GO TO 45
      IF(IDT(1,J).LE.0.AND.IDT(2,J).LE.0) GO TO 42
      IF(NSTAC.EQ.0.AND.LINTE.EQ.0) GO TO 50
C
      DO KK=1,2
         K=IDT(KK,J)
         IF(K.GT.0) THEN
           KLOC=(KK-1)*NBR2+NCV2
           TT21(KLOC)=TT1(K)
           TT212(KLOC)=TT2(K)
           TT210(KLOC)=TT0(K)
         ENDIF
      ENDDO
C
      GO TO 50
   42 TT21(NCV2)=TCONS(J)
      TT212(NCV2)=TCONS(J)
      TT210(NCV2)=TCONS(J)
      GO TO 50
   45 CONTINUE
      IF (NSTAC.GT.0.OR.LINTE.GT.0.OR.NELZAD.GT.0) THEN
         DO KK=1,2
           JJ=IDT(KK,J)
           KLOC=(KK-1)*NBR2+NCV2
           IF(JJ.GT.0) THEN
             TT21(KLOC)  = TT1(JJ)  
             TT212(KLOC) = TT2(JJ)
             TT210(KLOC) = TT0(JJ)
             IF(ITER.EQ.0) TT212(KLOC)=0.D0 
	     ELSE
	       IF(LMZADA(KLOC).EQ.1) THEN
               TT21(KLOC)  = ZADLOCAL(KLOC)
               TT212(KLOC) = ZADLOCAL32(KLOC)
               TT210(KLOC) = ZADLOCAL0(KLOC)
             ENDIF
           ENDIF
        ENDDO
	ENDIF
   50 CONTINUE
C----------------  END OF LOOP OVER ELEMENT NODES-----
  300 IELX2=NCV2
CE  NODAL COORDINATES OF ELEMENTS MATRIX
      K=0
      DO 60 I=1,NBR2
      IF(NEL(NLM2,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM2,I)
      DO 55 J=1,2
   55 CK2(K,J)=CORD(KK,J)
   60 CONTINUE 
C
      THICK=THI2D(NLM2)
      !IF(INDAX.NE.0) THICK=1.D0 
C
CE    GAUSS POINTS  LOOP =============================================
C
      KKABSORB=0
      NGAUSC=0
      DO 101 NGX=1,NGAU2X 
      JR=NREF(NGAU2X) + NGX
      R = XG(JR)
      DO 100 NGY=1,NGAU2Y
      JS=NREF(NGAU2Y) + NGY
      S = XG(JS)
      WT=WGT(JR)*WGT(JS)
	NGAUSC=NGAUSC+1
      CALL JACT2(R,S,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
      RAD=1.
      IF(INDAX.EQ.0) GO TO 281
C
      RAD=0.
      if(indiffus.EQ.0.AND.IHEAT.EQ.0) then
         DO I=1,NCV2
           RAD=RAD+H2(I)*CK2(I,1)
         ENDDO
      ENDIF
CE    VELOCITIES CALCULATION
  281 IF (INDVEL .EQ. 1) THEN
      VX = 0.0
      VY = 0.0
      DO 304 NV=1,NCV2
      KK=NEL(NLM2,NV)
      KK = LF +KK-1
      VX=VX-PJ2(1,NV)*A(KK)
      VY=VY-PJ2(2,NV)*A(KK)
  304 CONTINUE
      WRITE (3,9990) NGX,NGY, VX,VY
 9990 FORMAT ('   NG(',I1,',',I1,')     VX = ',F12.6,'  VY = ',F12.6)
      GO TO 100
      ENDIF
C
CE    PRESSURE AT GAUSS POINT
C
      PRESS=0.
      IF(ICONVV.GT.0) THEN
        DO I=1,NCV2
          PRESS=PRESS+H2(I)*TT21(I)
        ENDDO
      ENDIF
C
CE    CONCENTRATION AT GAUSS POINT 
C
      CONC=0.D0
      GRADC(1)=0.D0
      GRADC(2)=0.D0     
      IF(IDIFFHEAT.NE.0) THEN
        DO I=1,NCV2
          CONC=CONC+H2(I)*TT21(NCV2+I)
          GRADC(1)=GRADC(1)+PJ2(1,I)*TT21(NCV2+I)
          GRADC(2)=GRADC(2)+PJ2(2,I)*TT21(NCV2+I)
        ENDDO            
      ENDIF
C
      IF(NSTAC.EQ.0.OR.KONC.EQ.0) GO TO 70
      IF(NTACV(MAT2D).EQ.0) GO TO 67
      CALL TABF(A(LTABC),A(LNTACV),MAT2D,NMATT,TEMP,CC2,NTA,IND)
      IF(IND.EQ.0) GO TO 70
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) MAT2D,TEMP
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) MAT2D,TEMP
 2005 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA SPEC. TOPLOTA - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6005 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SPECIFIC HEAT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
   67 CALL ANALCF(MAT2D,TEMP,CC2,A(LGUSM))
   70 CONTINUE
C
      IF(ICONVV.GT.0) THEN
        IF(IDARCY.NE.-2.OR.IPASS.EQ.1) THEN
	    PRESSA=dabs(PRESS)      
          call tabdiff(MATCONV,AMATFC,MAT2DCONV,PRESSA,DDARCY,IND)
          MAT2D=MAT2DCONV
          TEMP=PRESSA
          IF(IND.NE.0) GO TO 22
        ELSE
          !DDARCY=DARCYV(INDDEG)
        ENDIF
      ENDIF
C
      IF(IDIFFHEAT.NE.0) THEN
        CONCA=dabs(CONC)
        IF(IHEAT.EQ.0) THEN
           call tabdiff(MATDIF,AMATFD,MAT2DdIF,CONCA,DDIFUS,IND)
           MAT2D=MAT2DdIF
           TEMP=CONCA
           IF(IND.NE.0) GO TO 22
        ELSE
           call tabdiff(MATERH,AMATFRO,MAT2DdIF,CONCA,RRO,IND1)
           call tabdiff(MATERH,AMATFSH,MAT2DdIF,CONCA,CC2,IND2)
           call tabdiff(MATERH,AMATFK,MAT2DdIF,CONCA,DDIFUS,IND3)
           MAT2D=MAT2DdIF
           TEMP=CONCA
           IF(IND1.GT.0.OR.IND2.GT.0.OR.IND3.GT.0) GO TO 22
           CC2=RRO*CC2           
        ENDIF
        IF(ICONV.NE.0) THEN
          CALL CLEAR(VCONV,3)
          DO K=1,NCV2 
            VCONV(1)=VCONV(1)-DDARCY*PJ2(1,K)*TT21(K)
            VCONV(2)=VCONV(2)-DDARCY*PJ2(2,K)*TT21(K)
          ENDDO
        ENDIF
      ENDIF
C
      FAX=1.D0
      FAY=1.D0
C       CORRECT DDIFUS FOR MODEL
      IF(KONK.EQ.0) GO TO 80
      IF(IBX.EQ.0.AND.IBY.EQ.0) GO TO 77
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,TEMP,AKX,NTA,IND)
      IF(IND.GT.0) GO TO 22
      IF(IBY.GT.0) GO TO 181
      IF(IANIZ.EQ.0) GO TO 186
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 182
  186 AKY=AKX
      GO TO 182
  181 CALL TABF(A(LTABK),A(LNTAKV),IBY,NTABK,TEMP,AKY,NTA,IND)
  182 IF(IND.EQ.0) GO TO 80
   22 CONTINUE
      IF(ISRPS.EQ.0)
     *WRITE(3,2001)  MAT2D,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6001)  MAT2D,TEMP
 2001 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. PROVODJENJA - TOPL.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6001 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'DARCY COEFF-PRESSURE OR DDIF-CONC,  NO. =',I5/
     11X,'CONCENTRARION,  CONC =',1PD12.4/
     21X,'S T O P'//' CHECK: INPUT DATA FOR DIFFUSION COEFFICIENT'/)
C
      STOP
   77 CALL ANALKF(MAT2D,TEMP,AKX,AKY,AKZ,A(LTOPM),A(LTMNM))
      IF(AKY.GT.0) GO TO 80
      IF(IANIZ.EQ.0) GO TO 811
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 80
  811 AKY=AKX
   80 IF(IZIP.NE.2.OR.MAXTQE.EQ.1) GO TO 81
      CALL TABF(A(LQEFN),A(LNTAQE),IQE2,NQE,TEMP,QQ2,NTA,IND)
      IF(IND.EQ.0) GO TO 81
      IF(ISRPS.EQ.0)
     *WRITE(3,2011) IQE2,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6011) IQE2,TEMP
 2011 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPLOTNOG IZVORA (PONORA)   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6011 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
CE  ELEMENT MATRICES
   81 WDT=WT*DET21*RAD*THICK
      IF(ISMEARED.EQ.1) THEN
          VEFFEC=0.D0
          DO I=1,NCV2
              VEFFEC=VEFFEC+ H2(I)*VOLFLOC(I)
          ENDDO
          WDT=(1.-VEFFEC)*WDT
      ENDIF        
      IF(IDARCY.NE.0) GO TO 400
C     
CE  CALCULATION OF CONDUCTION MATRIX AND SPECIFIC HEAT MATRIX OF ELEMENT
      K=0
      DO 85 I=1,NCV2
      DO 83 J=I,NCV2
      K=K+1
      IF(NSTAC.EQ.0) GO TO 87
      HH2= H2(I)*H2(J)*WDT
      EL(K)=EL(K)+CC2*HH2
   87 IF(INDSK.EQ.0) GO TO 83
      PJX=PJ2(1,I)*PJ2(1,J)
      PJY=PJ2(2,I)*PJ2(2,J)
      HP(K) = HP(K) +(AKX*PJX+AKY*PJY)*WDT
   83 CONTINUE
      IF(IQE2.EQ.0) GO TO 85
CE  CALCULATION OF RIGHT-SIDE VECTOR
      GJ=1.
      IZ=1
      IF(ITOR.NE.2) GO TO 86
      IZ=-1
      VX=0.
      VY=0.
      DO 84 NV=1,NCV2
      VX=VX+PJ2(1,NV)*VPOT(NV)
      VY=VY+PJ2(2,NV)*VPOT(NV)
   84 CONTINUE
      GJ=VX**2+VY**2
   86 F9(I)=F9(I)+H2(I)*WDT*GJ*QQ2**IZ
   85 CONTINUE
      IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
c      IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
      TBK(1)=0.
      TBK(2)=0.
      DO 151 J=1,2
      DO 150 I=1,NCV2
  150 TBK(J)=TBK(J)+PJ2(J,I)*TT21(I)
  151 CONTINUE
      TBK(1)=AKX*TBK(1)
      TBK(2)=AKY*TBK(2)
      DO 152 I=1,NCV2
      DO 153 J=1,2
  153 F9(I)=F9(I)-(PJ2(J,I)*TBK(J))*WDT
  152 CONTINUE
C
      GO TO 100

  400 CONTINUE
C
C     DARCY AND DIFFUSION MATRICES
C
      IF(ICONVV.NE.0) THEN
        AKX = DDARCY
        AKY = DDARCY
        DO I=1,NCV2
          DO J=1,NCV2
            PJX = PJ2(1,I)*PJ2(1,J)
            PJY = PJ2(2,I)*PJ2(2,J)
            SKE(I,J)=SKE(I,J)+(AKX*PJX+AKY*PJY)*WDT 
          ENDDO
        ENDDO
      ENDIF
C      
      IF(IDIFFHEAT.NE.0) THEN    
        AKTW     = CC2*AKTT*WDT
        AKDW     = DDIFUS*WDT
        AKDARCYW = DDARCY*WDT
        DO 405 I=1,NCV2
          H2TWI = H2(I)*AKTW
          H2WI  = H2(I)*WDT
          H2PI  = H2(I)*AKDARCYW
          DO 405 J=1,NCV2
            PJX = PJ2(1,I)*PJ2(1,J)
            PJY = PJ2(2,I)*PJ2(2,J)
            COEFFV=0.D0
            IF(ICONV.GT.0) THEN
              COEFFV=VCONV(1)*PJ2(1,J)+VCONV(2)*PJ2(2,J)
            ENDIF
            SKEM(I,J)=SKEM(I,J)+H2TWI*H2(J)
            IF(IFORM.EQ.2) THEN
              SKED(I,J)=SKED(I,J)+(PJX+PJY)*AKDW+H2WI*COEFFV
            ELSE
              SKED(I,J)=SKED(I,J)+(PJX+PJY)*AKDW
              SKEP(I,J)=SKEP(I,J)-H2PI*(GRADC(1)*PJ2(1,J)+
     1                                GRADC(2)*PJ2(2,J))
            ENDIF
  405     CONTINUE
        ENDIF
C 
  100 CONTINUE
  101 CONTINUE
C
C     KRAJ PETLJE PO GAUSOVIM TACKAMA ----------
C
      IF(IDARCY.NE.0) THEN
        IF(ICONVV.NE.0) THEN
          DO I=1,NCV2
            DO J=1,NCV2
              F9(I)=F9(I)-SKE(I,J)*TT21(J)
            ENDDO
          ENDDO
        ENDIF
        
        IF(IDIFFHEAT.NE.0) THEN 
          DO 430 I=1,NCV2
             II=NCV2+I
          DO 430 J=1,NCV2
             JJ=NCV2+J
             IF(IFORM.EQ.2) THEN
               SKE(II,JJ)=SKE(II,JJ)+SKEM(I,J)+SKED(I,J)
               F9(II)=F9(II)-SKEM(I,J)*(TT21(JJ)-TT210(JJ))-
     1                     SKED(I,J)*TT21(JJ)
             ELSE
               SKE(II,JJ)=SKE(II,JJ)+SKEM(I,J)+SKED(I,J)
               SKE(II,J)=SKE(II,J)+SKEP(I,J)
               F9(II)=F9(II)-SKEM(I,J)*(TT21(JJ)-TT210(JJ))-
     1                       SKED(I,J)*TT21(JJ)-SKEP(I,J)*TT21(J)
             ENDIF
  430     CONTINUE
        ENDIF     
c
        IF(ICONTOUR.EQ.0) GO TO 149
c
C       FLUXES FROM PRESCRIBED VELOCITIES AT THE BOUNDARY
C
        DO 375 ISEG=1,4
        NODE1C=ISEG
	  NODE2C=ISEG+1
	  IF(ISEG.EQ.4) NODE2C=1
        IF(ILOC(NODE1C).EQ.0.OR.ILOC(NODE2C).EQ.0) GO TO 375
	  VV1=VLOCAL(NODE1C)
	  VV2=VLOCAL(NODE2C)
	  NN1=NEL(NLM2,NODE1C)
	  NN2=NEL(NLM2,NODE2C)
	  DO J=1,2
          CK2(1,J)=CORD(NN1,J)
          CK2(2,J)=CORD(NN2,J)
        ENDDO		        
	  DX=CK2(2,1)-CK2(1,1)
        DY=CK2(2,2)-CK2(1,2)
      	ELL=0.5*DSQRT(DX*DX+DY*DY)
C
        DO 373 I=1,NGAU2X  
        JR=NREF(NGAU2X) + I
        RRR = XG(JR)
        HH1=0.5*(1.D0-RRR)
        HH2=0.5*(1.D0+RRR)
        DUM=1.D0 
        IF(INDAX.EQ.1) THEN  
           DUM=HH1*CK2(1,2)+HH2*CK2(2,2)
        ENDIF
        WDT=WGT(JR)*DABS(DUM)*ELL
        VVV=HH1*VV1+HH2*VV2
        F9(NODE1C)=F9(NODE1C)+VVV*HH1*WDT
        F9(NODE2C)=F9(NODE2C)+VVV*HH2*WDT
  373   CONTINUE
  375   CONTINUE   
        GO TO 149
      ENDIF
C
C     SLUCAJ KADA NIJE DARSIJEV PROBLEM  - NE KORISTI SE U OVOJ SUBROUTINE
C
      IF (INDVEL .EQ. 1) GO TO 200
	if(INDFLUXKC.eq.1.and.NELZAD.eq.0) go to 135
      IF(NSTAC.EQ.0) GO TO 740
      DO  I=1,MEL2D
         EL(I)=EL(I)/DT
	ENDDO
      K=0
      DO I=1,NCV2
        DO J=I,NCV2
          K=K+1
          SKE(I,J)=EL(K)
          SKE(J,I)=SKE(I,J)
	  ENDDO
	ENDDO
      DO  I=1,NCV2
         DO  J=1,NCV2
          F9(I)=F9(I)+SKE(I,J)*TT210(J)
         ENDDO
      ENDDO
C 
  740 DO I=1,MEL2D
        HP(I)=HP(I)+EL(I)
      ENDDO
      K=0
      DO I=1,NCV2
        DO J=I,NCV2
          K=K+1
          SKE(I,J)=HP(K)
          SKE(J,I)=SKE(I,J)
	  ENDDO
	ENDDO    
      DO I=1,NCV2
        DO J=1,NCV2
          F9(I)=F9(I)-SKE(I,J)*TT21(J)
        ENDDO
	ENDDO
	IF(INDSK.EQ.0) THEN
	  DO I=1,MEL2D
          HP(I)=0.D0
        ENDDO
      ENDIF
C
  149 CONTINUE
      IF(IDARCY.NE.0) THEN
         DO I=1,NDES
           DO J=1,NDES
              SKE(I,J)=AEFF*SKE(I,J)
           ENDDO
           F9(I)=AEFF*F9(I)
         ENDDO
      ENDIF
c      
      IF(INDFLUX.EQ.1) GO TO 137
      IF(NHP.EQ.0.AND.NTOK.EQ.0.AND.NQP.EQ.0.AND.NHR.EQ.0) GO TO 135
CE    INTEGRALS OVER BORDER LINES OF ELEMENT
      CALL INTAB2(A(LNG2D),A(LNELG2),A(LNEL2D),A(LNTAHP),A(LHP2),A(LHK2)
     1,A(LSKE2),A(LNTAHR),A(LHR2),A(LFOHR),NREF,XG,WGT)
CE    INSERTING MATRIX HP AND VECTOR F9 INTO SYSTEM
  135 CONTINUE 
C
      VBR=1.0D35
C
      IF(IMUMPS.EQ.0) THEN
        IF(IDARCY.EQ.0) THEN
          CALL MATSTE (A(LSK),A(LMAXA),A(LF),HP,F9,LM2,NCV2,INDSK)
	  ELSE
	    CALL ADDSTF(A(LALEVO),A(LSILE),A(LDESNO),SKE,F9,A(LMAXA),LM2,
     1              NDES,1)
	  ENDIF
	ELSE
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
        CALL sparseassembler_addelemmatrix(NDES,LM2,SKE)
#endif
        CALL SPAKDE(A(LSILE),F9,LM2,NDES,JEDN)
	ENDIF
C
  137 CONTINUE 
  200 CONTINUE
C	
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE JACT2 (R,S,NEL,KFIX)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
CE    PROGRAM TO FORM JACOBIAN AND JACOBIAN DETERMINANT AT POINT R,S
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON/REAL2D/ CK2(9,3),P2(2,9),PJ2(2,9),XJ2(2,2),H2(9),
     1AK2,CC2,HH2,QQ2,HHP2,DET2,DET21,F9(9),TT21(9),TT212(9),TT210(9)
      COMMON /SRPSKI/ ISRPS
      DIMENSION NEL(NE2D,*),IPERM(8),LE(2),ME(2)
      DATA IPERM/2,3,4,1,6,7,8,5/
      RP=1.0+R
      SP=1.0+S
      RM=1.0-R
      SM=1.0-S
      RR=1.0-R*R
      SS=1.0-S*S
      DO 82 I=1,9
      H2(I)=0.
      DO 82 J=1,2
   82 P2(J,I)=0.
CE    INTERPOLATION FUNCTIONS AND DERIVATIVES
CE    FIRST 4 NODES
      H2(1)=0.25*RP*SP
      H2(2)=0.25*RM*SP
      H2(3)=0.25*RM*SM
      H2(4)=0.25*RP*SM
CE  LOCAL INTERPOLATION FUNCTIONS DERIVATIVES FOR 4-NODE ELEMENT
      P2(1,1)=0.25*SP
      P2(1,2)=-P2(1,1)
      P2(1,3)=-0.25*SM
      P2(1,4)=-P2(1,3)
      P2(2,1)=0.25*RP
      P2(2,2)=0.25*RM
      P2(2,3)=-P2(2,2)
      P2(2,4)=-P2(2,1)
      IF (IELX2.EQ.4) GO TO 50
CE     DEGREES OF FREEDOM FOR NODES OVER 4
      I=0
    2 I=I+1
      IF (I.GT.NND5) GO TO 30
      NN=NOD5(I)-4
      GO TO (5,6,7,8,9),NN
    5 H2(5)=0.5*RR*SP
      P2(1,5)=-R*SP
      P2(2,5)=0.5*RR
      GO TO 2
    6 H2(6)=0.5*RM*SS
      P2(1,6)=-0.5*SS
      P2(2,6)=-RM*S
      GO TO 2
    7 H2(7)=0.5*RR*SM
      P2(1,7)=-R*SM
      P2(2,7)=-0.5*RR
      GO TO 2
    8 H2(8)=0.5*RP*SS
      P2(1,8)=0.5*SS
      P2(2,8)=-RP*S
      GO TO 2
    9 H2(9)=RR*SS
      P2(1,9)=-2.0*R*SS
      P2(2,9)=-2.0*S*RR
      GO TO 2
CE    CORECTION OF FIRST 8 FUNCTIONS IF NODE 9 EXISTS
   30 IN=NOD5(NND5)
      IF(IN.NE.9) GO TO 40
      DO 36 I=1,4
      H2(I)=H2(I)-0.25*H2(9)
      DO 36 J=1,2
   36 P2(J,I)=P2(J,I)-0.25*P2(J,9)
      IF(NND5.EQ.1) GO TO 51
      DO 37 I=1,NND5-1
      IN=NOD5(I)
      H2(IN)=H2(IN)-0.5*H2(9)
      DO 37 J=1,2
   37 P2(J,IN)=P2(J,IN)-0.5*P2(J,9)
CE    CORECTION OF FIRST 4 FUNCTIONS IF NODES OVER 4 EXISTS
   40 IH=0
   41 IH=IH+1
      IF(IH.GT.NND5) GO TO 50
      IN=NOD5(IH)
      IF(IN.EQ.9) GO TO 51
      I1=IN-4
      I2=IPERM(I1)
      H2(I1)=H2(I1)-0.5*H2(IN)
      H2(I2)=H2(I2)-0.5*H2(IN)
      H2(IH+4)=H2(IN)
      DO 45 J=1,2
      P2(J,I1)=P2(J,I1)-0.5*P2(J,IN)
      P2(J,I2)=P2(J,I2)-0.5*P2(J,IN)
   45 P2(J,IH+4)=P2(J,IN)
      GO TO 41
   51 H2(NND5+4)=H2(9)
      DO 39 J=1,2
   39 P2(J,NND5+4)=P2(J,9)
CE     JACOBIAN AT POINT R,S
   50 DO 61 I=1,2
      DO 61 J=1,2
      XJ2(I,J)=0.
      DO 61 KK=1,NCV2
      XJ2(I,J)=XJ2(I,J)+P2(I,KK)*CK2(KK,J)
   61 CONTINUE
      IF(KFIX.GT.0) GO TO 70
      IF(KFIX.LT.0) RETURN
CE    JACOBIAN DETERMINANT AT POINT R,S
      CALL MINV(XJ2,2,DET21,LE,ME)
      IF (DET21.GT.1.D-15) GO TO 77
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) NLM2,R,S,DET21
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) NLM2,R,S,DET21
      STOP
   77 DO 85 I=1,2
      DO 85 JJ=1,NCV2
      PJ2(I,JJ)=0.
      DO 85 K=1,2
      PJ2(I,JJ)=PJ2(I,JJ) + XJ2(I,K)*P2(K,JJ)
   85 CONTINUE
      RETURN
CE     LINE JACOBIAN DETERMINANT
   70 GO TO (71,72),KFIX
CE     CONSTANT KSI
   71 DET2= XJ2(2,1)*XJ2(2,1)+XJ2(2,2)*XJ2(2,2)
      GO TO 74
CE     CONSTANT ETA
   72 DET2= XJ2(1,1)*XJ2(1,1)+XJ2(1,2)*XJ2(1,2)
   74 DET2=DSQRT(DET2)
      IF ( DET2.GT.1.D-15) RETURN
      STOP
 2000 FORMAT(' ** GRESKA **: JAKOBIJAN JEDNAK ILI MANJI OD NULE',
     1       ' ZA ELEMENT No.',I5/
     2       12X,'R=',F10.5/
     3       12X,'S=',F10.5/
     4       9X,'DET2=',D10.3)
 6000 FORMAT(' ** ERROR **: JACOBIAN EQUAL OR LESS THEN ZERO',
     1       ' FOR ELEMENT No.',I5/
     2       12X,'R=',F10.5/
     3       12X,'S=',F10.5/
     4       9X,'DET2=',D10.3)
      END
C======================================================================
C
C======================================================================
      SUBROUTINE INTAB2(NG2D,NELG,NEL,NTAHP,HP,HK,SKE,NTAHR,HR,FOHR,
     1NREF,XG,WGT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
CE  PROGRAM TO PERFORM INTEGRATION OVER 2D ELEMENT LINES
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA2/ LNEL2D,LMAT2D,LNQ2D,LITG2D,LIP2CV,LNG2D,LNELG2,
     1LEL2,LHP2,LHK2,LSKE2,LDEL2,LDEHP2,LDEHK2,LTHICK,LHR2
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON/REAL2D/ CK2(9,3),P2(2,9),PJ2(2,9),XJ2(2,2),H2(9),
     1AK2,CC2,HH2,QQ2,HHP2,DET2,DET21,F9(9),TT21(9),TT212(9),TT210(9)
      COMMON /SRPSKI/ ISRPS
      DIMENSION NG2D(*),NELG(5,4,*),NEL(NE2D,*),NTAHP(*),HR(*),
     1HP(*),HK(*),SKE(NBR2,*),NREF(*),XG(*),WGT(*),FOHR(*),NTAHR(*)
      IVR=NG2D(NLM2)
      IF(IVR.EQ.0) RETURN
CE  CE LOOP OVER BORDER ELEMENT LINES
      IHPS = 0
      IHRS = 0
      DO 200 NPOV=1,4
      IFL=NELG(1,NPOV,IVR)
      IHP=NELG(2,NPOV,IVR)
      IHR=NELG(4,NPOV,IVR)
      IF(IFL.EQ.0.AND.IHP.EQ.0.AND.IHR.EQ.0) GO TO 200
      ITOK=NELG(3,NPOV,IVR)
      IFO=NELG(5,NPOV,IVR)
      IF(IHP.EQ.0) GO TO 5
      IHPS = 1
      IF(NTAHP(IHP).GT.1) GO TO 5
      CALL TABF(A(LHPFN),A(LNTAHP),IHP,NHP,TEMP,HHP2,NTA,IND)
    5 IF(IHR.EQ.0) GO TO 6
      IHRS = 1
      IF(NTAHR(IHR).GT.1) GO TO 6
      CALL TABF(A(LHRFN),A(LNTAHR),IHR,NHR,TEMP,HHR2,NTA,IND)
    6 IF(IFL.EQ.0) GO TO 20
      CALL TABF(A(LQPFN),A(LNTAQP),IFL,NQP,VREME,QQP,NTA,IND)
      IF(IND.EQ.0) GO TO 20
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) IFL,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) IFL,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA FLUKS-VREME BR.=',I3/
     11X,'ARGUMENT VREME ',D12.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SURFACE FLUX - TIME,  No. =',I5/
     11X,'ARGUMENT TIME, TIME =',1PD12.4)
      STOP
   20 IF(ITOK.EQ.0) GO TO 40
      CALL TABF(A(LTOKFN),A(LNTAOK),ITOK,NTOK,VREME,TT,NTA,IND)
      IF(IND.EQ.0) GO TO 40
      IF(ISRPS.EQ.0)
     *WRITE(3,2001) ITOK,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6001) ITOK,VREME
 2001 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TEMP. OKOLINE-VREME BR.=',I3/
     11X,'ARGUMENT VREME ',D12.4)
 6001 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE ENVIRONMENT TEMPERATURE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME, TIME =',1PD12.4)
      STOP
CE  GAUSS POINTS LOOP
   40 IF(NPOV.GT.2) GO TO 45
      KFIX=1
      NGXP=NGAU2Y
      R=1.
      IF(NPOV.EQ.2) R=-1.
      GO TO 60
   45 KFIX=2
      NGXP=NGAU2X
      S=1.
      IF(NPOV.EQ.4) S=-1.
   60 DO 100 NGX=1,NGXP
      JR=NREF(NGXP) + NGX
      XX = XG(JR)
      WX=WGT(JR)
      GO TO (71,72),KFIX
   71 S=XX
      GO TO 75
   72 R=XX
   75 WT=WX
      CALL JACT2(R,S,NEL,KFIX)
      RADS=1.
      IF(INDAX.EQ.0) GO TO 281
      RADS=0.
      DO 282 I=1,NCV2
  282 RADS=RADS+H2(I)*CK2(I,1)
  281 WDT=WT*DET2*RADS
      IF(LINTE.EQ.0) GO TO 81
      TEMP=0.
      DO 65 I=1,NCV2
   65 TEMP=TEMP+H2(I)*TT21(I)
      IF(IHP.EQ.0) GO TO 80
      IF((NHP.EQ.1.AND.MAXTHP.EQ.1).OR.NTAHP(IHP).EQ.1) GO TO 80
      CALL TABF(A(LHPFN),A(LNTAHP),IHP,NHP,TEMP,HHP2,NTA,IND)
      IF(IND.EQ.0) GO TO 80
      IF(ISRPS.EQ.0)
     *WRITE(3,2002) IHP,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6002) IHP,TEMP
 2002 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. PRELAZA TOPL. BR.=',I3/
     11X,'ARGUMENT TEMP= ',D12.4)
 6002 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE CONVECTION COEFICIENT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE, TEMP =',1PD12.4)
      STOP
   80 IF(IHR.EQ.0) GO TO 81
      IF((NHR.EQ.1.AND.MAXTHR.EQ.1).OR.NTAHR(IHR).EQ.1) GO TO 81
      CALL TABF(A(LHRFN),A(LNTAHR),IHR,NHR,TEMP,HHR2,NTA,IND)
      IF(IND.EQ.0) GO TO 81
      IF(ISRPS.EQ.0)
     *WRITE(3,2003) IHR,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6003) IHR,TEMP
 2003 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. EMISIVNOSTI BR.=',I3/
     11X,'ARGUMENT TEMP= ',D12.4)
 6003 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE RADIATION COEFICIENT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE, TEMP =',1PD12.4)
      STOP
   81 K=0
      IF(IFL.GT.0) WQP=WDT*QQP
      IF(IHP.GT.0) WHP=WDT*HHP2
      IF(ITOK.EQ.0) GO TO 97
      IF(IHR.EQ.0) GO TO 82
      FOR=1.
      IF(NFO.EQ.0) GO TO 79
      FOR=FOHR(IHR)
   79 HRR=HHR2*FOR*SBC
      HKR=HRR*(TT**2+TEMP**2)*(TT+TEMP)
      WHR=WDT*HKR
CE CALCULATION OF TEMPERATURE DIFERENCE AT BORDER CONVECTION LINE
   82 TTT = 0.
      IF(LINTE.EQ.0) GO TO 98
      DO 88 I=1,NCV2
   88 TTT=TTT+H2(I)*(TT-TT21(I))
   98 IF(LINTE.EQ.1) GO TO 97
      DO 87 I=1,NCV2
   87 TTT=TTT+H2(I)*TT
   97 K=0
      KK=0
      DO 86 I=1,NCV2
      IF(LINTE.EQ.0) GO TO 83
      IF(IHR.EQ.0) GO TO 83
      IF(INDSK.EQ.0) GO TO 91
      DO 92 J=I,NCV2
      KK=KK+1
      HR(KK)=HR(KK) + H2(I)*H2(J)*WHR
   92 CONTINUE
   91 F9(I)=F9(I) + H2(I)*WHR*TTT
   83 IF(IHP.EQ.0) GO TO 85
      IF(INDSK.EQ.0) GO TO 89
      DO 84 J=I,NCV2
      K=K+1
      HK(K)=HK(K) + H2(I)*H2(J)*WHP
   84 CONTINUE
   89 F9(I)=F9(I) + H2(I)*WHP*TTT
   85 IF(IFL.EQ.0) GO TO 86
      F9(I)=F9(I) + H2(I)*WQP
   86 CONTINUE
  100 CONTINUE
  200 CONTINUE
CE  CORECTION OF LEFT-SIDE MATRIX
      IF(INDSK.EQ.0) GO TO 300
      IF(IHPS.EQ.0) GO TO 250
      DO 105 I=1,MEL2D
  105 HP(I) = HP(I) + HK(I)
  250 IF(IHRS.EQ.0) GO TO 300
      DO 115 I=1,MEL2D
  115 HP(I) = HP(I) + HR(I)
  300 RETURN
      END
C======================================================================
C
C=========================================================================      
      SUBROUTINE PRINTMAXA(MAXA,JEDN)   
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION  MAXA(JEDN+1)
      write(3,7000) jedn
 7000 format(' NANOPORES MAXA, jedn=',i5)
      write(3,7001)(maxa(i),i=1,jedn+1)
 7001 format(15i5)
      return
      end  
C=======================================================================
C
C=======================================================================
      SUBROUTINE VELOCITIES2D(IDT,CORD,NEL,SKE,THI2D,TT1,VELOC,INODE,
     1 MATCONV,AMATFC,NZADJ,ZADFM,NZADP,NDES,MAT2DCONV,NDIMID)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
C
      COMMON A(1)  
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA2/ LNEL2D,LMAT2D,LNQ2D,LITG2D,LIP2CV,LNG2D,LNELG2,
     1LEL2,LHP2,LHK2,LSKE2,LDEL2,LDEHP2,LDEHK2,LTHICK,LHR2
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON/REAL2D/ CK2(9,3),P2(2,9),PJ2(2,9),XJ2(2,2),H2(9),
     1AK2,CC2,HH2,QQ2,HHP2,DET2,DET21,F9(9),TT21(9),TT212(9),TT210(9)
      COMMON /SRPSKI/ ISRPS
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ            
	common/elemmodels/modelel(20),ngele                 
	COMMON/MESSAGES/MESSAGE
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
C
      DIMENSION IDT(NDIMID,NPT),CORD(NPT,3),NEL(NE2D,4),SKE(NDES,NDES),
     1 TT1(JEDN),THI2D(NE2D)
      DIMENSION MATCONV(NMATTCONV),AMATFC(NMATTCONV,2,*)    
      DIMENSION NZADJ(3,NZADP),ZADFM(NZADP),VELOC(3,NPT),INODE(NPT)
      DIMENSION XG(15),WGT(15),NREF(6),TBK(2),NREFGAUS4(4) 
      DIMENSION ZADLOCAL(8),ZADLOCAL0(8),ZADLOCAL32(8),LMZADA(8),
     1          VLOCAL(4),ILOC(4),VLOC(2,4),GRADP(2)
C
      DATA NREF/0,1,3,6,10,15/
      DATA NREFGAUS4/3,2,4,1/ 
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
     
C
      IFORM  = 2
      DDARCY = 0.D0
	AKTT   = 1./DT
C
C     LOOP OVER ELEMENTS     
C
      DO 200 NLM2= 1,NE2D

      CC2=1.D0    
      DO 17 I=1,9
      TT21(I) = 0.
      TT212(I) = 0.
      TT210(I) = 0.
      LM2(I) = 0
	LMZADA(I)=0
   17 F9(I)=0.
C
      DO I=1,8
        ZADLOCAL(I)=0.D0
        ZADLOCAL0(I)=0.D0
        ZADLOCAL32(I)=0.D0
      ENDDO
C
      CALL CLEAR(SKE,NDES*NDES)  
      CALL CLEAR(VLOC,2*4)  
C
CE  TEMPERATURE AT NODES  VECTOR
C
   40 NCV2     = 0
      NND5     = 0
	NELZAD   = 0
	ICONTOUR = 0
C
      DO 50 I=1,NBR2
      IF(I.LE.4) GO TO 41
      IDEL2(I-4)=0
      IF(NEL(NLM2,I).EQ.0) GO TO 50   
      NND5=NND5+1
      NOD5(NND5)=I
      IDEL2(I-4)=1
   41 J=NEL(NLM2,I)     
      NCV2=NCV2+1
      JJ1=IDT(1,J)
      JJ2=IDT(2,J)
      VLOCAL(NCV2)=0.D0
      ILOC(NCV2)=0
      NCV2DISP=NBR2+NCV2
C
C     PRESCRIBED
C
      IF(NZADP.GT.0) THEN
	  DO KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
            IF(IDOF.EQ.3) THEN
	        ILOC(NCV2) = 1
	        ICONTOUR   = 1
	      ENDIF	      
            NELZAD=NELZAD+1
            NF=NZADJ(3,KK)
            FAK = ZADFM(KK)
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,IND)
            IF(IND.NE.0) THEN    
              WRITE(3,6015) NF,VREME
              STOP
            ENDIF
            TIMET=VREME-DT
            IF(TIMET.LT.0) TIMET=0.D0
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,TIMET,FTT,NTMX,
     1                IND)
            IF(IND.NE.0) THEN    
              WRITE(3,6016) NF,TIMET
              STOP
            ENDIF
            IF(IDOF.EQ.1) THEN
              LMZADA(NCV2)     = 1
              ZADLOCAL(NCV2)   = FT*FAK
              ZADLOCAL0(NCV2)  = FTT*FAK
              ZADLOCAL32(NCV2) = ZADLOCAL(NCV2)-ZADLOCAL0(NCV2)
            ELSEIF(IDOF.EQ.2) THEN
            ELSEIF(IDOF.EQ.3) THEN
              VLOCAL(NCV2) = FT*FAK
            ENDIF
	    ENDIF
	  ENDDO
 6015   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  VREME =',1PD12.4)
 6016   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  TIMET=VREME-DT =',1PD12.4)
	ENDIF	      
C
      LM2(NCV2)=JJ1
      IF (NSTAC.GT.0.OR.LINTE.GT.0.OR.NELZAD.GT.0) THEN
         KK=1
         JJ=IDT(KK,J)
         KLOC=(KK-1)*NBR2+NCV2
         IF(JJ.GT.0) THEN
           TT21(KLOC)=TT1(JJ)
	   ELSE
	     IF(LMZADA(KLOC).EQ.1) THEN
             TT21(KLOC) = ZADLOCAL(KLOC)
           ENDIF
         ENDIF
	ENDIF
   50 CONTINUE
C----------------  END OF LOOP OVER ELEMENT NODES-----
  300 IELX2=NCV2
CE  NODAL COORDINATES OF ELEMENTS MATRIX
      K=0
      DO 60 I=1,NBR2
      IF(NEL(NLM2,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM2,I)
      DO 55 J=1,2
   55 CK2(K,J)=CORD(KK,J)
   60 CONTINUE 
C
      THICK = THI2D(NLM2)
C
CE    GAUSS POINTS  LOOP =============================================
C
      KKABSORB=0
      NGAUSC=0
      DO 101 NGX=1,NGAU2X 
      JR=NREF(NGAU2X) + NGX
      R = XG(JR)
      DO 100 NGY=1,NGAU2Y
      JS=NREF(NGAU2Y) + NGY
      S = XG(JS)
      WT=WGT(JR)*WGT(JS)
	NGAUSC=NGAUSC+1
      CALL JACT2(R,S,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
      RAD=1.
C
CE    PRESSURE AT GAUSS POINT
C
      PRESS    = 0.D0
      GRADP(1) = 0.D0
      GRADP(2) = 0.D0     
      DO I=1,NCV2
        PRESS    = PRESS    + H2(I)    * TT21(I)
        GRADP(1) = GRADP(1) + PJ2(1,I) * TT21(I)
        GRADP(2) = GRADP(2) + PJ2(2,I) * TT21(I)
      ENDDO
C
	PRESSA=dabs(PRESS)      
      call tabdiff(MATCONV,AMATFC,MAT2DCONV,PRESSA,DDARCY,IND)
      IF(IND.NE.0) STOP
C
CE  ELEMENT MATRICES
C
   81 WDT=WT*DET21*RAD*THICK
C
      !DO I = 1,NCV2
      !  DO J = 1,2
      !    VLOC(J,I) = VLOC(J,I) - H2(I) * GRADP(J) * DDARCY
      !  ENDDO
      !ENDDO
      
      I = NREFGAUS4(NGAUSC)      
      VLOC(1,I) = - GRADP(1) * DDARCY
      VLOC(2,I) = - GRADP(2) * DDARCY     
C 
  100 CONTINUE
  101 CONTINUE
C
C     KRAJ PETLJE PO GAUSOVIM TACKAMA
C
      DO I = 1,NCV2
        IN = NEL(NLM2,I)
        VELOC(1,IN) = VELOC(1,IN) + VLOC(1,I)
        VELOC(2,IN) = VELOC(2,IN) + VLOC(2,I)
      
        INODE(IN) = INODE(IN) + 1
      ENDDO

  200 CONTINUE
C     KRAJ PETLJE PO ELEMENTIMA
C   
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE PRINTSMEARED2(LVELOC)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C 
C     MAIN SUBROUTINE FOR PRINTOUT RESULTS FOR SMEARED MODEL (ISMEARED.GT.1)
C
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA2/ LNEL2D,LMAT2D,LNQ2D,LITG2D,LIP2CV,LNG2D,LNELG2,
     1LEL2,LHP2,LHK2,LSKE2,LDEL2,LDEHP2,LDEHK2,LTHI2D,LHR2
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON /SRPSKI/ ISRPS
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ 
	common/elemmodels/modelel(20),ngele
 	COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON/DARCYEQ/ ELDARCYX,ELDARCYY,ELDARCYZ,VDARCY,PINLET,
     1       DARCYX,JEDNDARCY,ISOLVER,IDARCY,LDARCYD,LDARCYMI,
     2       LIDARCYMA,NPTINDARCY
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON/MAINIDT/NDIMIDT  
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10)
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
      COMMON/PIPEMIX/FLAMREF,IPIPEMIX,NETIP,LIDPRESS,LPRESS,LIDP,
     2               LLAMDAV,IDEFORMG,INDFLUXE,ILAMDA
      COMMON/ICOUPLING/ICOUPLEDCD,IPASSCD,LIDTCD,JEDNCD(2),
     1 IDISJCALC,IDISJMESH,IGRAFS,NPERS,LNKDTS,LDTDTS,LVDTS,NDTS
      COMMON/CSMEARED/ISMEARED,VOLFRACT,POROSSME,LVOLFRACTV,LDWALLSME,
     1 LPWALLSMEV,LDIAMSME,LTHICKSME,IPARTSME,LVOLSME,IRAVSME,DRAVSME
      COMMON/CSMEAREDG/ISMEAREDG,NDIMIDG,ICONVG,INDIFFUSG,LAMI,
     1     LDARCYCOEF,MATNEWUSE,LHYDRCOEF,LDPIPE,LDTISSUE,IPRINTVEL,
     2     IACTIVE(4),LZADATA1,LZADATA0,LZADAVXYZ,LWALLAREA,
     3     LWALLPOROSV,LIPIPENOD,ILARGEVES
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON/CSMEARED2/IPASSME,JEDNPRES,JEDNCONC,LTT1P,LTT1C,LTT10P,
     1      LTT10C,LDIRCOEFF,LDPIPECA,LDARCYCA,I2D3D,IANIZS,NDIMTENSOR
      COMMON/MULTITISAD/LIPARTITV,LIACTIVEV,LIVSOURCEV,LIADHESIV,
     1 LVOLFRACT,LDARCYCOEFV,LHYDRCOEFPV,LHYDRCOEFCV,LAMIPV,LAMICV,
     2 LVOLSMEV,LDARTENSOR,LWALLAREAV,LVFMULTIT,LDIAMCELLV,
     3 LDPIPEEXV,LDCELLSV,LDPIPECAP,LIPARTNODEV,LPARTNODEV,
     4 LIACTIVENODEV,LACTIVENODEV,LISOURCENODEV,LSOURCENODEV,
     5 LADHESINODEV,LIADHESINODEV,LDWALLSMEV,LDWALLCELL,LDIAMSMEV,
     6 LTHICKSMEV,LDWALLV,LIPIPENODV,LICRITICALV,LCRITICALV,
     7 LTT1PM,LTT01PM,LTT1CM,LTT01CM,LFMULT
C  
CE  POINTERS FOR MATRIXES OF ELEMENT
CE  NUMBER OF MEMBERS IN MATRIXES OF ELEMENT
C
      NET       = NELEDAT(NGE,2)
      NE2D      = NET
      INDAX     = NELEDAT(NGE,3)
      IZIP      = NELEDAT(NGE,4) 
      MAT2DCONV = NELEDAT(NGE,5)
      MAT2DDIFF = NELEDAT(NGE,6)
	LNEL2D    = NELEDAT(NGE,7)
      LMAT2D    = NELEDAT(NGE,8)
      LNQ2D     = NELEDAT(NGE,9)
      LTHI2D    = NELEDAT(NGE,10)
      LITG2D    = NELEDAT(NGE,11)
      LIP2CV    = NELEDAT(NGE,12)
      IDIFUSE   = NELEDAT(NGE,13)
      KDOMAIN   = 0
      KID       = 0
      KCYCLE    = 0
      LMAXSAVE  = LMAX
C
C     CALCULATION OF VELOCITIES TO BE PRINTED
C
      LNODEVV=LMAX
      LVNODEV=LNODEVV+NPT
      LMAX=LVNODEV+NPT*2
      IF(LMAX.LE.NTOTA) GO TO 20
      IF(ISRPS.EQ.0)
     *   WRITE(3,2000) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *   WRITE(3,6000) LMAX,NTOTA
 2000 FORMAT(/1X,'NEDOVOLJNA DIMENZIJA U VEKTORU A - ZA SMESTANJE MATRIC
     1A ELEMENATA'/1X,'POTREBNA DIMENZIJA,LMAX=',I10/1X,'RASPOLOZIVA DIM
     2ENZIJA, NTOTA=',I10)
 6000 FORMAT(/1X,' UNSUFFICIENT DIMENSION OF WORKING VECTOR A FOR',
     1' ELEMENT MATRIX'/1X,' REQUIRED DIMENSION, LMAX =',I10/1X,
     2' AVAILABLE DIMENSION, NTOTA=',I10)
      STOP
   20 continue
C
C     CALCULATE VELOCITIES IN THE DOMAIN 
C
      CALL VELOCITIES2DS2(A(LIDT),A(LCORD),A(LNEL2D),A(LTT1P),
     1    A(LNZADJ),A(LZADATA1),A(LVOLFRACTV),A(LAMICV),A(LDARCYCOEFV),
     2    A(LDIAMSMEV),A(LDARTENSOR),IACTIVE,A(LNODEVV),A(LVNODEV),
     3    A(LZADAVXYZ),A(LIPIPENODV),A(LVELOC),NZADP,ISMEAREDG,NDIMIDG,
     4    NPT,JEDNPRES,ICONV,NPRINT,NDIMTENSOR)
      LMAX=LMAXSAVE 
C
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE VELOCITIES2DS2(IDT,CORD,NEL,TT1P,NZADJ,ZADATA1,
     1 VOLFRACTV,AMIV,DARCYCOEFV,DIAMSMEV,DARTENSOR,IACTIVE,NODEVV,
     2 VNODEV,ZADAVXYZ,IPIPENODV,VELOC,NZADP,ISMEARED,NDIMID,NPT,
     3 JEDNPRES,ICONV,NPRINT,NDIMTENSOR)
C
C      PRINTOUT VELOCITIES     
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
      COMMON/REAL2D/ CK2(9,3),P2(2,9),PJ2(2,9),XJ2(2,2),H2(9),
     1AK2,CC2,HH2,QQ2,HHP2,DET2,DET21,F9(9),TT21(9),TT212(9),TT210(9)  
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
      COMMON/CMATDATA/NDIMPIPEMAX,NDIMCAPMAX,NDIMCELLMAX,NDIMPMAX,
     4 NDIMAMAX,NDIMSMAX,NDIMADHMAX,NDIMWPIPEMAX,NDIMWCAPMAX,
     5 NDIMWCELLMAX,DARCYCOEF,AMICOEFP,AMICOEFC,HYDROCOEFP,HYDROCOEFC,
     6 DARCYTENSOR(6),DPIPE,DTISSUE,DIFFTENSOR(6),PARTPIPE1,PARTPIPE2,
     7 PARTCELL(2,4),ACTIVECOEF(2,4),SOURCECOEFF(4),ADHCOEFF(2,4),
     8 DWALLPIPE,DWALLCAP,DWALLCELL(4),INODEDTOT,INODEWTOT,LDPIPEEXA,
     9 LDPIPECAPA,LCELLA,LPARTA,LACTIVEA,LSOURCEA,LADHISEA,LWALLPIPEA,
     1 LWALLCAPA,LWALLCELLA,IREADDIFNODE
      COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
C
      DIMENSION IDT(NDIMID,NPT),CORD(NPT,3),NEL(NE2D,4),TT1P(JEDNPRES)
      DIMENSION NZADJ(3,NZADP),ZADATA1(NZADP)
      DIMENSION VOLFRACTV(NPT),AMIV(NPT),DARCYCOEFV(NPT),
     1          DIAMSMEV(NPT),DARTENSOR(NDIMTENSOR,NPT),IACTIVE(4),
     2          NODEVV(NPT),VNODEV(2,NPT),ZADAVXYZ(2,3,NPT),
     3          IPIPENODV(NPT),VELOC(6,NPT)   

      DIMENSION ZADLOCAL(4),LMZADA(4),VLOCAL(4),VCONV(2,4),
     1 VOLFLOC(4),CONC(4),DARCYVS(4),DDIFV(4)
      DIMENSION LMS(4,4),TT21S(4),TT210S(4),NODEL(4)
     
      DIMENSION XG(15),WGT(15),NREF(6),TBK(2),VPOT(9) 
      DIMENSION NREFNODE(4)          
      DATA NREFNODE/3,2,4,1/
C
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
C
      ICONVV = ICONV
      IDIFFHEAT = 0
      CALL ICLEAR(NODEVV,NPT)
      CALL CLEAR(VNODEV,2*NPT)
      VZZ=0.D0    
C
C     LOOP OVER DOMAINS
      DO 500 KDOMAIN=1,2
      KID=KDOMAIN
      INDVE=KDOMAIN
      IF(IACTIVE(KDOMAIN).EQ.0) GO TO 500
      IF(ISMEARED.EQ.0.AND.KDOMAIN.EQ.1) GO TO 500
      
C     LOOP OVER ELEMENTS     
C
      DO 200 NLM2= 1,NE2D

      KKIN=0   
      KKOUT=0 
      CC2=1.D0 
C 
      CALL CLEAR(ZADLOCAL,16)
      CALL ICLEAR(LMZADA,16)
      CALL CLEAR(VLOCAL,16)
      CALL CLEAR(VOLFLOC,4) 
      CALL ICLEAR(LMS,16)
      CALL CLEAR(TT21S,16)
      CALL CLEAR(TT210S,16)
C
   40 NCV2     = 0
      NND5     = 0
	NELZAD   = 0
C
      DO 50 I=1,4
      NCV2=I
   41 J=NEL(NLM2,I)           
      NODEL(NCV2)=J
      VOLFLOC(NCV2)=VOLFRACTV(J)
C
C     PRESCRIBED
C
      IF(NZADP.GT.0) THEN
	  DO 42 KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(IPIPENODV(NJ).EQ.1) GO TO 42
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
	      IDOFA=IABS(IDOF)
	      IF((KDOMAIN.EQ.1.AND.IDOFA.GT.1).OR.
     1         (KDOMAIN.EQ.2.AND.IDOFA.NE.2)) GO TO 42              
            NELZAD=NELZAD+1
            LMZADA(NCV2)  = 1
            ZADLOCAL(NCV2)= ZADATA1(KK)           
	    ENDIF
   42   CONTINUE 
	ENDIF			      
C
   45 CONTINUE
C
      JJ=IDT(KID,J)
      IF(JJ.GT.0) THEN
         TT21S(NCV2)= TT1P(JJ)  
	ELSE
	   IF(LMZADA(NCV2).EQ.1) THEN
            TT21S(NCV2)=ZADLOCAL(NCV2)
         ENDIF
      ENDIF
C	ENDIF
   50 CONTINUE
C----------------  END OF LOOP OVER ELEMENT NODES-----
CE  NODAL COORDINATES 
      K=0
      DO 60 I=1,4
        KK=NEL(NLM2,I)
        K = K+1
        DO 55 J=1,2
   55   CK2(K,J)=CORD(KK,J)
   60 CONTINUE 
C
CE    GAUSS POINTS  LOOP =============================================
C
      KKABSORB=0
      NGAUSC=0
      DO 100 NGX=1,NGAU2X 
      JR=NREF(NGAU2X) + NGX
      R = XG(JR)
      DO 100 NGY=1,NGAU2Y
      JS=NREF(NGAU2Y) + NGY
      S = XG(JS)
	NGAUSC=NGAUSC+1
      CALL JACT2(R,S,NEL,0)
C
      DIAM=0.D0
      DO I=1,NCV2
         DIAM=DIAM+H2(I)*DIAMSMEV(NODEL(I))
      ENDDO
      AMI=0.D0
      DDARCY1=0.D0
      DDARCY2=0.D0
      IF(KID.EQ.1) THEN
         IF(ICMTABLE(6).NE.3) THEN
           DDARCY1 = DARCYTENSOR(1)
           DDARCY2 = DARCYTENSOR(2)
         ELSE
           DO I=1,NCV2
             DDARCY1=DDARCY1+H2(I)*DARTENSOR(1,NODEL(I))
             DDARCY2=DDARCY2+H2(I)*DARTENSOR(2,NODEL(I))  
           ENDDO
         ENDIF           
      ELSE
         IF(ICMTABLE(1).NE.3) THEN 
            DDARCY=DARCYCOEF
         ELSE
            DO I=1,NCV2
               DDARCY=DDARCY+H2(I)*DARCYCOEFV(NODEL(I))
            ENDDO
         ENDIF
         DDARCY1=DDARCY
         DDARCY2=DDARCY    
      ENDIF
      
      VXX=0.D0
      VYY=0.D0 
      DO K=1,4 
         VXX=VXX-DDARCY1*PJ2(1,K)*TT21S(K)
         VYY=VYY-DDARCY2*PJ2(2,K)*TT21S(K)
      ENDDO  
      NODEE=NREFNODE(NGAUSC)
      NODE=NEL(NLM2,NODEE)
      NODEVV(NODE)=NODEVV(NODE)+1
      VNODEV(1,NODE)=VNODEV(1,NODE)+VXX
      VNODEV(2,NODE)=VNODEV(2,NODE)+VYY
  100 CONTINUE
C ---------------- END OF LOOP OVER GAUS POINTS  
  200 CONTINUE
C ---------------- END OF LOOP OVER ELEMENTS  
C
      DO I=1,NPT
         IF(IPIPENODV(NJ).EQ.0) THEN
            COEF=NODEVV(I)
            IF(COEF.GT.0) THEN
               VNODEV(1,I)=VNODEV(1,I)/COEF
               VNODEV(2,I)=VNODEV(2,I)/COEF
            ENDIF
        ENDIF 
      ENDDO
C
      II = (KDOMAIN-1) * 3
      DO NODE=1,NPT
        VELOC(II+1,NODE) = VNODEV(1,NODE)
        VELOC(II+2,NODE) = VNODEV(2,NODE)
      ENDDO
C
      IF (NPRINT.LT.0) GOTO 500
C	
      IF(KDOMAIN.EQ.1) THEN
         WRITE(3,2001)
      ELSE	
         WRITE(3,2003)
      ENDIF 
 2001 FORMAT(/' CAPILLARY DOMAIN   V E L O C I T I E S'//
     1 '    NODE        VELOCITY-X   VELOCITY-Y   VELOCITY-Z') 
 2003 FORMAT(/' TISSUE DOMAIN      V E L O C I T I E S'//
     1 '    NODE        VELOCITY-X   VELOCITY-Y   VELOCITY-Z') 
C
      DO I=1,NPT
         IF (IPIPENODV(NJ).EQ.0) THEN
            IF(DABS(VNODEV(1,I)).LT.1.D-10) VNODEV(1,I)=0.D0
            IF(DABS(VNODEV(2,I)).LT.1.D-10) VNODEV(2,I)=0.D0
         ENDIF
      ENDDO
      DO NODE=1,NPT
         IF(IPIPENODV(NODE).EQ.0) THEN
            WRITE(3,2010) NODE,VNODEV(1,NODE),VNODEV(2,NODE),VZZ  
 2010       FORMAT(I8,5X,3(1P1D13.4))
         ENDIF     
      ENDDO
      
  500 CONTINUE                 
C	
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE PRINTSMEAREDPD23(IDT,IDTV,IDTVCELL,TT1P,TT1C,
     1   TT1PM,TT1CM,NZADNODF,ZADATAM1,NZADJ,ZADATA1,IZADLOCALDI,
     2   IPIPENODV,IACTIVE,IDVS,NZADNODVS,ZADATAVSV,IDLYMPHH,
     3   IDLYMPHC,INPUTLY,ZADALYMH1,NZADLY,NZADLYMPHMX,NPT,NZADP,KOR,
     4   ITER,VREME,NDIMID,ILARGEVES,JEDNPRES,JEDNCONC,JEDNPMAX,
     5   JEDNCMAX,IPASSME,ISMEARED,NDIMTOTAL,NZADPMAX,NDIMCELL,MULTIMOL,
     6   MM,INDLYMPH,INDLYMPHH,INDLYMPHC)      
     
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)     
      COMMON/CCELLIN/INDCELLIN,INDCELLINV(10),VFVS(10,5),DIAMVS(10,5),
     1 RAVVS(10,5),DDIFFICY(10,10),DDIFFIVS(10,10,5),DDIFFICM(10,10,5)
     2 ,IPARTIVS(10,10,5),PARTIVS(10,10,5),NDIMVS,NVSMAX,LIDVS,NZADVS,
     3 LNZADNODVS,LNZADNFVS,LNZADFVS,LZADVALUEVS,LZADATAVS0,LZADATAVS   
C
      COMMON A(1)
C
      DIMENSION IDT(NDIMID,NPT),IDTV(MULTIMOL,NDIMID,NPT),
     1  IDTVCELL(MULTIMOL,NDIMCELL,NPT),TT1P(JEDNPRES),TT1C(JEDNCONC),
     1  TT1PM(MULTIMOL,JEDNPMAX),TT1CM(MULTIMOL,JEDNCMAX),
     2  NZADNODF(MULTIMOL,3,NZADPMAX),ZADATAM1(MULTIMOL,NZADPMAX),
     3  NZADJ(3,NZADP),ZADATA1(NZADP),IZADLOCALDI(NDIMTOTAL,NPT),
     4  IPIPENODV(NPT),IACTIVE(4)
      DIMENSION IDVS(MULTIMOL,NDIMVS,NVSMAX,NPT),NZADNODVS(4,NZADVS),
     1  ZADATAVSV(NZADVS) 
      DIMENSION IDLYMPHH(NPT),IDLYMPHC(MULTIMOL,NPT),
     1  INPUTLY(MULTIMOL,3,NZADLYMPHMX),ZADALYMH1(MULTIMOL,NZADLYMPHMX)
      DIMENSION N4(4),T4(4)
C
C      CALL ICLEAR(IZADLOCAL,NPT)
      CALL ICLEAR(IZADLOCALDI,NDIMTOTAL*NPT)
      IF(MULTIMOL.GT.1) GO TO 10
      IF(NZADP.GT.0) THEN
         DO KK=1,NZADP
            NODE=NZADJ(1,KK)
            IF(IPIPENODV(NODE).EQ.0) THEN
	         IDIR=NZADJ(2,KK)
	         IDIRA=IABS(IDIR)
	         IF(IPASSME.EQ.1) THEN
	            IF(IDIRA.LT.3.AND.IDIR.GT.0) THEN
	              IZADLOCALDI(IDIR,NODE)=KK
	            ENDIF
	         ELSE
	            IF(IDIRA.GT.2.AND.IDIR.GT.0) THEN
	              IZADLOCALDI(IDIR,NODE)=KK
	            ENDIF	         
	         ENDIF
	      ENDIF
	   ENDDO
	ENDIF
	GO TO 15
  10  CONTINUE
      IF(NZADP.GT.0) THEN
         DO KK=1,NZADP
            NODE=NZADNODF(MM,1,KK)
            IF(IPIPENODV(NODE).EQ.0) THEN
	         IDIR=NZADNODF(MM,2,KK)
	         IDIRA=IABS(IDIR)
	         IF(IPASSME.EQ.1) THEN
	            IF(IDIRA.LT.3.AND.IDIR.GT.0) THEN
	              IZADLOCALDI(IDIR,NODE)=KK
	            ENDIF
	         ELSE
	            IF(IDIRA.GT.2.AND.IDIR.GT.0) THEN
	              IZADLOCALDI(IDIR,NODE)=KK
	            ENDIF	         
	         ENDIF
	      ENDIF
	   ENDDO
	ENDIF		
	
   15 CONTINUE	
	IF(ILARGEVES.EQ.0) THEN
	   IF(IPASSME.EQ.1.OR.(IPASSME.EQ.2.AND.IACTIVE(3).EQ.1.AND.
     1      IACTIVE(1).EQ.0))THEN
            WRITE(3,6000) KOR,VREME
            WRITE(3,6003) ITER
         ENDIF
      ENDIF
C
      KID=0
      IF(IPASSME.EQ.2)KID=2
      DO 200 KDOMAIN=1,2
         KID=KID+1
         IF(IACTIVE(KID).EQ.0) GO TO 200
         IF(KDOMAIN.EQ.1) THEN
            IF(ISMEARED.EQ.0) GO TO 200
            IF(IPASSME.EQ.1) THEN
               WRITE(3,6011)
            ELSE
               WRITE(3,6012)
               IF(MULTIMOL.GT.1) WRITE(3,6015)MM
            ENDIF
         ELSE
            IF(IPASSME.EQ.1) THEN
               WRITE(3,6013)
            ELSE 
               IF(NDIMCELL.EQ.0) THEN
                   WRITE(3,6014)
               ELSE
                   WRITE(3,6017)
               ENDIF
            ENDIF
         ENDIF
C     
C        SET TO ZERO SMALL VALUES
         IF(IPASSME.EQ.1) THEN
            DO I=1,JEDNPRES
              IF(DABS(TT1P(I)).LT.1.D-15) TT1P(I)=0.D0
            ENDDO
         ELSE
             DO I=1,JEDNCONC
               IF(DABS(TT1C(I)).LT.1.D-15) TT1C(I)=0.D0
             ENDDO        
         ENDIF
         
         KG=0   
   20    CONTINUE
         DO 50 I = 1,4
   55    KG = KG +1
         IF(KG.LE.NPT.AND.IPIPENODV(KG).EQ.1) THEN
            IF(KG.EQ.NPT) GO TO 100
            GO TO 55
         ENDIF
         IF(KG.GT.NPT) GO TO 100     
         N4(I) = KG
         IF(MULTIMOL.EQ.1) THEN
            JJ=IDT(KID,KG)
         ELSE
            JJ=IDTV(MM,KID,KG)
         ENDIF
         IF(JJ.EQ.0)THEN
            GO TO 30
         ENDIF
         
         IF(IPASSME.EQ.1) THEN
             IF(MULTIMOL.EQ.1) THEN
                T4(I) = TT1P(JJ)
             ELSE
                T4(I) = TT1PM(MM,JJ)
             ENDIF
         ELSE
             IF(MULTIMOL.EQ.1) THEN
                T4(I) = TT1C(JJ)
             ELSE
                T4(I) = TT1CM(MM,JJ)
             ENDIF
         ENDIF
         GO TO 50
   30    CONTINUE
         II=IZADLOCALDI(KID,KG)
         IF(MULTIMOL.EQ.1) THEN
            T4(I) = ZADATA1(II)
         ELSE
            T4(I) = ZADATAM1(MM,II)
         ENDIF
   50    CONTINUE
  100    I = I - 1
         IF(I.NE.0) THEN
         WRITE(3,2002) (N4(J),T4(J),J=1,I)
         ENDIF
 2002    FORMAT(4(I8,4X,1P1D13.5))
   77    IF(KG.LT.NPT) GO TO 20
  200 CONTINUE   
      IF(NDIMCELL.EQ.0.OR.IPASSME.EQ.1)THEN
        IF(INDLYMPH.EQ.0) RETURN
        GO TO 700
      ENDIF 
C
C     CONCENTRATIONS WITHIN CELLS   
C
      WRITE(3,6020) 
      KIN=0
      DO 400  NC=1,NDIMCELL
         WRITE(3,6021) NC
 6021    FORMAT(/'     CELL TYPE NUMBER:',I3)
         IF(INDCELLIN.NE.0) WRITE(3,6022)
 6022    FORMAT( '     CYTOSOL SPACE')
         KG=0
  220    CONTINUE
         DO 250 I = 1,4
  255    KG = KG +1
         IF(KG.LE.NPT.AND.IPIPENODV(KG).EQ.1) THEN
            IF(KG.EQ.NPT) GO TO 300
            GO TO 255
         ENDIF
         IF(KG.GT.NPT) GO TO 300     
         N4(I) = KG
         IF(IDTVCELL(MM,NC,KG).EQ.0)THEN
            GO TO 230
         ENDIF
         JJ=IDTVCELL(MM,NC,KG)
         IF(MULTIMOL.EQ.1) THEN
             T4(I) = TT1C(JJ)
         ELSE
             T4(I) = TT1CM(MM,JJ)
         ENDIF
         GO TO 250
  230    CONTINUE
         II=IZADLOCALDI(4+NC,KG)
         IF(MULTIMOL.EQ.1) THEN
             T4(I) = ZADATA1(II)
         ELSE
             T4(I) = ZADATAM1(MM,II)
         ENDIF
  250    CONTINUE
  300    I = I - 1
         IF(I.NE.0) THEN
            WRITE(3,2002) (N4(J),T4(J),J=1,I)
         ENDIF
         IF(KG.LT.NPT) GO TO 220
         IF(INDCELLIN.EQ.0) GO TO 400
C      
C     CONCENTRATION WITHIN VESICLES
C
        NVISE=INDCELLINV(NC)
        IF(NVISE.EQ.0) GO TO 400
        KIN=KIN+1
        DO 600 IVS=1,NVISE
           WRITE(3,6030)IVS
 6030      FORMAT('     VESICLE  NUMBER:',I3)
         KG=0
  520    CONTINUE
         DO 550 I = 1,4
  555    KG = KG +1
         IF(KG.GT.NPT) GO TO 500     
         N4(I) = KG
         JJ=IDVS(MM,KIN,IVS,KG)
         IF(JJ.EQ.0)THEN    
            DO J=1,NZADVS   
                NODE=NZADNODVS(1,J)
                IMM=NZADNODVS(2,J)
            	ICC=NZADNODVS(3,J)
            	IDOF=NZADNODVS(4,J)
            	IF(NODE.EQ.KG.AND.IMM.EQ.MM.AND.ICC.EQ.NC.AND.IDOF.EQ.IVS)
     1          THEN
                   T4(I)=ZADATAVSV(J)
                   GO TO 550
                ENDIF
            ENDDO          
         ENDIF
         IF(MULTIMOL.EQ.1) THEN
             T4(I) = TT1C(JJ)
         ELSE
             T4(I) = TT1CM(MM,JJ)
         ENDIF
  550    CONTINUE
  500    I = I - 1
         IF(I.NE.0) THEN
            WRITE(3,2002) (N4(J),T4(J),J=1,I)
         ENDIF
         IF(KG.LT.NPT) GO TO 520         
  600   CONTINUE          
                     
  400 CONTINUE 
      IF(INDLYMPH.EQ.0) RETURN
C 
  700 CONTINUE
C     LYMPHATIC SYSTEM
      IF(IPASSME.EQ.1) THEN 
         IF(INDLYMPHH.EQ.0) RETURN
         WRITE(3,7020)
      ELSEIF(IPASSME.EQ.2) THEN   
         IF(INDLYMPHC.EQ.0) RETURN
         WRITE(3,7021)
         IF(MULTIMOL.GT.1) WRITE(3,6015)MM
      ENDIF
C             
         KG=0   
  820    CONTINUE
         DO 850 I = 1,4
  855    KG = KG +1
         IF(KG.LE.NPT.AND.IPIPENODV(KG).EQ.1) THEN
            IF(KG.EQ.NPT) GO TO 800
            GO TO 855
         ENDIF
C 
         IF(KG.GT.NPT) GO TO 800     
         N4(I) = KG
         IF(IPASSME.EQ.1) THEN
            JJ=IDLYMPHH(KG)
         ELSE
            JJ=IDLYMPHC(MM,KG) 
         ENDIF
         IF(JJ.EQ.0)THEN
            DO K=1,NZADLY 
               NODE=INPUTLY(MM,1,K)
               IF(NODE.EQ.KG) THEN
                  IDOF=INPUTLY(MM,2,K)
                  IF(IDOF.EQ.IPASSME) THEN
                    T4(I)=ZADALYMH1(MM,K)
                    GO TO 850
                  ENDIF
               ENDIF
            ENDDO
         ENDIF  
         IF(IPASSME.EQ.1) THEN
             IF(MULTIMOL.EQ.1) THEN
                T4(I) = TT1P(JJ)
             ELSE
                T4(I) = TT1PM(MM,JJ)
             ENDIF
         ELSE
             IF(MULTIMOL.EQ.1) THEN
                T4(I) = TT1C(JJ)
             ELSE
                T4(I) = TT1CM(MM,JJ)
             ENDIF
         ENDIF
C         GO TO 850
C  830    CONTINUE
C         II=IZADLOCALDI(KID,KG)
C         IF(MULTIMOL.EQ.1) THEN
C            T4(I) = ZADATA1(II)
C         ELSE
C            T4(I) = ZADATAM1(MM,II)
C         ENDIF
  850    CONTINUE
         I = I - 1
         IF(I.NE.0) THEN
            WRITE(3,2002) (N4(J),T4(J),J=1,I)
         ENDIF
         IF(KG.LT.NPT) GO TO 820
  800 CONTINUE                   
C
 6000 FORMAT(///'1'/' S T E P  NUMBER =',I6,25X,'  T I M E =',1PD12.5)
 6003 FORMAT(' NUMBER OF ITERATIONS ....................... ITER =',I5)
 6011 FORMAT(/' CAPILARY DOMAIN   N O D A L   P R E S S U R E S'/ 
     1'    NODE      PRESSURE',9X,'NODE    PRESSURE',9X,'NODE',
     2'    PRESSURE',9X,'NODE    PRESSURE')
 6012 FORMAT(/' CAPILLARY DOMAIN  N O D A L  C O N C E N T R A T I O N S
     1'/
     1'      NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT',3X,
     2 '    NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT')
     
 6013 FORMAT(/' TISSUE DOMAIN    N O D A L  P R E S S U R E S'/
     1'   NODE       PRESSURE',9X,'NODE    PRESSURE',9X,'NODE',
     2'    PRESSURE',9X,'NODE    PRESSURE')
 6014 FORMAT(/' TISSUE DOMAIN    N O D A L   C O N C E N T R A T I O N S
     1'/
     1'      NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT',3X,
     2 '    NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT')
 6017 FORMAT(/' TISSUE DOMAIN - EXTRACELLULAR SPACE',
     1 '    N O D A L   C O N C E N T R A T I O N S '/
     1'      NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT',3X,
     2 '    NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT')
 6015 FORMAT(/'    M O L E C U L E   NUMBER:',I3) 
 6020 FORMAT(/' CONCENTRATIONS WITHIN C E L L S'/
     1 '      NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT',3X,
     2 '    NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT') 
C
 7020 FORMAT(/' LYMPHATIC SYSTEM   N O D A L   P R E S S U R E S'/ 
     1'    NODE      PRESSURE',9X,'NODE    PRESSURE',9X,'NODE',
     2'    PRESSURE',9X,'NODE    PRESSURE')
 7021 FORMAT(/' LYMPHATIC SYSTEM  N O D A L  C O N C E N T R A T I O N S
     1'/
     1'      NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT',3X,
     2 '    NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT')      
C
      RETURN
      END
C ======================================================================
C
C =======================================================================
      SUBROUTINE PRINTSMEAREDPD(IDT,TT1,NZADJ,ZADATA1,
     1      IZADLOCALDI,IPIPENODV,IACTIVE,NPT,NZADP,KID,KDOMAIN,KOR,
     2      ITER,VREME,NDIMID,JEDN,KPRINT,KZADI,ILARGEVES,IND)
     
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON A(1)
C
      DIMENSION IDT(NDIMID,NPT),TT1(JEDN),NZADJ(3,NZADP),ZADATA1(NZADP),
     1          IZADLOCALDI(4,NPT),IPIPENODV(NPT),
     2          IACTIVE(4)    
      DIMENSION N4(4),T4(4)
C
      CALL ICLEAR(IZADLOCALDI,4*NPT)
      IF(NZADP.GT.0) THEN
         DO KK=1,NZADP
            NODE=NZADJ(1,KK)
            IF(IPIPENODV(NODE).EQ.0) THEN
	         IDIR=NZADJ(2,KK)
	         IDIRA=IABS(IDIR)
	         IF(IDIRA.EQ.KZADI.AND.IDIR.GT.0) THEN
	              NJ=NZADJ(1,KK)
C	              IZADLOCAL(NJ)=NJ
	              IZADLOCALDI(KID,NJ)=KK
	         ENDIF
	      ENDIF
	   ENDDO
	ENDIF
	IF(KPRINT.EQ.1.AND.ILARGEVES.EQ.0)THEN
         WRITE(3,6000) KOR,VREME
         WRITE(3,6003) ITER
      ENDIF
      IF(KDOMAIN.EQ.1) THEN
        IF(IND.EQ.1) THEN
            WRITE(3,6011)
        ELSE
            WRITE(3,6012)
        ENDIF
      ELSE
        IF(IND.EQ.1) THEN
          WRITE(3,6013)
        ELSE 
         WRITE(3,6014)
        ENDIF
      ENDIF
C      JEDN = 0
C      MILOS-KORIGOVANO 19 MARTA,09
C     
C     SET TO ZERO SMALL VALUES
      DO I=1,JEDN
       IF(DABS(TT1(I)).LT.1.D-15) TT1(I)=0.D0
      ENDDO
      KG=0
   20 DO 50 I = 1,4
   55 KG = KG +1
      IF(KG.LE.NPT.AND.IPIPENODV(KG).EQ.1) THEN
        IF(KG.EQ.NPT) GO TO 100
        GO TO 55
      ENDIF
      IF(KG.GT.NPT) GO TO 100     
      N4(I) = KG
      IF(IDT(KID,KG).EQ.0)THEN
         GO TO 30
      ENDIF
      JJ=IDT(KID,KG)
      T4(I) = TT1(JJ)
      GO TO 50
   30 CONTINUE
      II=IZADLOCALDI(KID,KG)
      T4(I) = ZADATA1(II)
   50 CONTINUE
  100 I = I - 1
      IF(I.NE.0) THEN
         WRITE(3,2002) (N4(J),T4(J),J=1,I)
      ENDIF
 2002 FORMAT(4(I8,4X,1P1D13.5))
   77 IF(KG.LT.NPT) GO TO 20
C
 6000 FORMAT(///'1'/' S T E P  NUMBER =',I6,25X,'  T I M E =',1PD12.5
     1)
 6003 FORMAT(' NUMBER OF ITERATIONS ....................... ITER =',I5)
 6011 FORMAT(/' CAPILARY DOMAIN   N O D A L   P R E S S U R E S'/ 
     1'    NODE      PRESSURE',9X,'NODE    PRESSURE',9X,'NODE',
     2'    PRESSURE',9X,'NODE    PRESSURE')
 6012 FORMAT(/' CAPILLARY DOMAIN  N O D A L  C O N C E N T R A T I O N S
     1'/
     1'      NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT',3X,
     2 '    NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT')
 6013 FORMAT(/' TISSUE DOMAIN    N O D A L  P R E S S U R E S'/
     1'   NODE       PRESSURE',9X,'NODE    PRESSURE',9X,'NODE',
     2'    PRESSURE',9X,'NODE    PRESSURE')
 6014 FORMAT(/' TISSUE DOMAIN    N O D A L   C O N C E N T R A T I O N S
     1'/
     1'      NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT',3X,
     2 '    NODE    CONCENTRAT',3X,'    NODE    CONCENTRAT')
     
      RETURN
      END
C ======================================================================
C    
C =======================================================================
      subroutine printidtcell(IDT,IDTVCELL,npt,ndimcell,multimol,
     1       NDIMID,iter) 
       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
       
      dimension idt(ndimid,npt),IDTVCELL(MULTIMOL,NDIMCELL,NPT)
      continue
      return
      end
c =======================================================================
