#define MUMPS_CLUSTER .FALSE.
C=======================================================================
C=======================================================================
      SUBROUTINE UL1DGL
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*130 ACOZ
CE    MAIN PROGRAM TO READ 1D ISOPARAM. ELEMENT INPUT DATA
      COMMON A(17000)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA1/ LNEL1D,LMAT1D,LNQ1D,LITG1D,LIP1CV,LNG1D,LNELG1,
     1LEL1,LHP1,LHK1,LSKE1,LDEL1,LDEHP1,LDEHK1,LHR1
      COMMON /EL1K03/NMAT1D,MAT1D,NE1D,NGAU1X,NP1DMX,NND1,IELX1,NLM1,
     1IPR1DC,IPTG1,N1DGU,MEL1D,IQE1,NBR1,NCV1,LM1(3),IDEL1(1),NOD1(1)
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
	COMMON/AREA1DEL/LAREA1D
      COMMON /SRPSKI/ ISRPS
	common/elemmodels/modelel(20),ngele
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ
      COMMON/DARCYEQ/ ELDARCYX,ELDARCYY,ELDARCYZ,VDARCY,PINLET,
     1       DARCYX,JEDNDARCY,ISOLVER,IDARCY,LDARCYD,LDARCYMI,
     2       LIDARCYMA,NPTINDARCY
     
      COMMON/MAINIDT/NDIMIDT 
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10) 
      COMMON/GAUSSNODE/GAUSS2(2,4),GAUSS3(3,8)
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
      COMMON/PIPEMIX/FLAMREF,IPIPEMIX,NETIP,LIDPRESS,LPRESS,LIDP,
     2               LLAMDAV,IDEFORMG,INDFLUXE,ILAMDA
      COMMON/DEFORMPIPE/IDEFORM
C
      DO I=1,4
         GAUSS2(1,I)=1.D0 
         GAUSS2(2,I)=1.D0 
         IF(I.EQ.2.OR.I.EQ.3)GAUSS2(1,I)=-1.D0
         IF(I.GE.3)GAUSS2(2,I)=-1.D0
      ENDDO 
      DO I=1,8
         IF(I.LE.4) THEN
            GAUSS3(3,I)=1.D0
         ELSE
            GAUSS3(3,I)=-1.D0
         ENDIF
         GAUSS3(1,I)=1.D0 
         GAUSS3(2,I)=1.D0 
         IF(I.EQ.2.OR.I.EQ.3.OR.I.EQ.6.OR.I.EQ.7)GAUSS3(1,I)=-1.D0
         IF(I.EQ.3.OR.I.EQ.4.OR.I.GE.7)GAUSS3(2,I)=-1.D0
      ENDDO 
           
CE    BASIC ELEMENT DATA
      CALL ISPITA(ACOZ)
      if(indiffus.eq.0.AND.IDARCY.EQ.0) then
         IF(INDFOR.EQ.1)
     1   READ(1,*) NMAT1D,MAT1D,NP1DMX,IPR1DC,IPTG1,NGAU1X
         IF(INDFOR.EQ.2)
     1   READ(ACOZ,1100) NMAT1D,MAT1D,NP1DMX,IPR1DC,IPTG1,NGAU1X
 1100    FORMAT(8I5)
      ELSE
        IF(INDFOR.EQ.1)
     1   READ(1,*) MAT1DD,NP1DMX,IPR1DC,IPTG1,NGAU1X
         IF(INDFOR.EQ.2)
     1   READ(ACOZ,1110) MAT1DD,NP1DMX,IPR1DC,IPTG1,NGAU1X,ICONECTIV,
     2                   IWALLD,IPARABOLIC,IDEFORM
 1110    FORMAT(I5,5X,10I5)
	ENDIF
	IF(IDEFORM.EQ.1)IDEFORMG=1
	if(MAT1Dd.eq.0) MAT1Dd=1
C	modelel(ngele)=MAT1Dd
	nmat1d=1
	mat1d=1
      IF (NMAT1D.GT.1.and.(indiffus.eq.0.and.iheat.eq.0)) MAT1D=0
      IF (NMATT.EQ.1.and.(indiffus.eq.0.and.iheat.eq.0)) MAT1D=1
      IF (NMATT.EQ.1.and.(indiffus.eq.0.and.iheat.eq.0)) NMAT1D = 1
	IF(INDIFFUS.EQ.1.OR.IDARCY.NE.0)NMAT1D=MAT1DD
      IF(NP1DMX.EQ.0) NP1DMX=2
	if(NMAT1D.gt.NMATT)then
	  write(3,6330)nmat1d,nmatt
 6330   format(/' E R R O R'/
     1  'MATERIAL NUMBER IS GREATER THAN THE TOTAL NUMBER OF MATERIALS'/
     2  '   MATERIAL NUMBER FOR 1D ELEMENTS, MAT1D=',I5/
	3  '   TOTAL NUMBER OF MATERIALS, NMATT=',I5/
	4  '   S T O P')
	  STOP
	endif
      IF(NGAU1X.EQ.0) NGAU1X=2
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      CALL WBROJK(KARTIC,0)
	if(indiffus.eq.0.AND.IDARCY.EQ.0) then
         IF(ISRPS.EQ.0)
     *   WRITE(3,2000)NMAT1D,MAT1D,NP1DMX
         IF(ISRPS.EQ.1)
     *   WRITE(3,6000)NMAT1D,MAT1D,NP1DMX
	 else
         IF(ISRPS.EQ.0)
     *   WRITE(3,2010) MAT1Dd,NP1DMX,ICONECTIV,IWALLD
         IF(ISRPS.EQ.1)
     *   WRITE(3,6010) MAT1Dd,NP1DMX,ICONECTIV,IWALLD,IPARABOLIC,IDEFORM
	endif
C 
 2000 FORMAT(6X,'ULAZNI PODACI ZA 1/D IZOPARAMETARSKI ELEMENT'/
     16X,44('-')///
     111X,'UKUPAN BROJ RAZLICITIH MATERIJALA ............. NMAT1D =',I5/
     116X,'EQ.1;(ZA NMATT.EQ.1)'/
     116X,'GT.1; ZA NMATT.GT.1'///
     211X,'MATERIJAL BROJ ................................. MAT1D =',I5/
     216X,'EQ.1; ZA NMATT.EQ.1'/
     216X,'EQ.0; ZA NMAT1D.GT.1'///
     311X,'MAKSIMALAN BROJ CVOROVA PO ELEMENTU ........... NP1DMX =',I5/
     316X,'EQ.0; POSTAJE "2" (ZA 2 CVORA PO ELEMENTU)'/
     316X,'GT.2; ZA ELEMENTE OD 3 CVORA')
 6000 FORMAT(6X,'DATA FOR 1/D ELEMENT'/
     16X,20('-')///
     111X,'TOTAL NUMBER OF MATERIALS FOR 1/D ELEMENT ..... NMAT1D =',I5/
     116X,'EQ.1;(FOR NMATT.EQ.1)'/
     116X,'GT.1; FOR NMATT.GT.1'///
     211X,'NUMBER OF MATERIALS ............................ MAT1D =',I5/
     216X,'EQ.1; FOR NMATT.EQ.1'/
     216X,'EQ.0; FOR NMAT1D.GT.1'///
     311X,'MAXIMUM NUMBER OF NODAL POINTS PER ELEMENT .... NP1DMX =',I5/
     316X,'EQ.0; DEFAULT SET "2" (FOR 2 NODES)'/
     316X,'GT.2; FOR ELEMENTS FROM 3 NODES')
      IF(ISRPS.EQ.0)
     *WRITE(3,2200) IPR1DC,IPTG1,NGAU1X
      IF(ISRPS.EQ.1)
     *WRITE(3,6200) IPR1DC,IPTG1,NGAU1X
 2010 FORMAT(6X,'ULAZNI PODACI ZA 1/D IZOPARAMETARSKI ELEMENT'/
     16X,44('-')///
     211X,'MATERIJAL BROJ GRUPE ELEMENATA................. MAT1DD =',I5/
     216X,'EQ.1; ZA MAT1DD.EQ.0'///
     311X,'MAKSIMALAN BROJ CVOROVA PO ELEMENTU ........... NP1DMX =',I5/
     316X,'EQ.0; POSTAJE "2" (ZA 2 CVORA PO ELEMENTU)'/
     316X,'GT.2; ZA ELEMENTE OD 3 CVORA')
 6010 FORMAT(6X,'INPUT DATA FOR ISOPARAMETRIC 1/D ELEMENTS'/
     16X,41('-')///
     211X,'MATERIAL NUMBER FOR THE ELEMENT GROUP......... MAT1DD =',I5/
     216X,'EQ.1; FOR MAT1DD.EQ.0'///
     311X,'MAXIMUM NUMBER OF NODAL POINTS PER ELEMENTS ... NP1DMX =',I5/
     316X,'EQ.0; DEFAULT SET "2" (FOR 2 NODES)'/
     316X,'GT.2; FOR ELEMENTS WITH 3 NODES'/
     411X,'FLAG FOR CONNECTIVITY (FICTITIOUS) OF 1D ELEMENTS,ICONCTIV=',
     5I5/
     616X,'1-USED FOR CONNECTION 1D-CONTINUUM (FICTITIOUS ELEM);0-NO)'/
     711X,'FLAG FOR WALL USE OF DIFFUSIVITY (0-NOT USED, 1-USED),',
     8 'IWALLD=',I5/
     911X,'FLAG FOR VELOCITY PROFILE (0-PARABOLIC,1-NONPARABOLIC',
     1    '.... IPARABOLIC=',I5/
     811X,'FLAG FOR PIPE WALL DEFORMATION (0-NO, 1-DEFORMABLE) FOR',
     9 ' NETIP=4......IDEFORM=',I5)
      ENDIF
 2200 FORMAT(///
     411X,'INDIKATOR STAMPE KOORDINATA GAUSOVIH TACAKA ... IPR1DC =',I5/
     416X,'EQ.0; NE STAMPAJU SE'/
     416X,'EQ.1; STAMPAJU SE U SVIM ELEMENTIMA'/
     416X,'EQ.2; STAMPAJU SE U ZELJENIM ELEMENTIMA'///
     511X,'INDIKATOR STAMPE TEMPERATURA U GAUS. TACKAMA ... IPTG1 =',I5/
     516X,'EQ.0; NE STAMPAJU SE'/
     516X,'EQ.1; STAMPAJU SE U SVIM ELEMENTIMA'/
     516X,'EQ.2; STAMPAJU SE U ZELJENIM ELEMENTIMA'///
     611X,'BROJ GAUSOVIH TACAKA U PRAVCU OSE KSI ......... NGAU1X =',I5/
     616X,'EQ.0; POSTAJE "2"')
 6200 FORMAT(///
     411X,'INDICATOR FOR PRINTOUT COORD. OF GAUSS POINTS . IPR1DC =',I5/
     416X,'EQ.0; NOT PRINTED'/
     416X,'EQ.1; PRINTED IN ALL ELEMENTS'/
     416X,'EQ.2; PRINTED IN PRESRIBED ELEMENTS'///
     511X,'INDICATOR FOR PRINTOUT CONCENTR. IN GAUSS POINTS IPTG1 =',I5/
     516X,'EQ.0; NOT PRINTED'/
     516X,'EQ.1; PRINTED IN ALL ELEMENTS'/
     516X,'EQ.2; PRINTED IN PRESCRIBED ELEMENTS'///
     611X,'NUMBER OF GAUSS POINTS IN DIRECTION KSI ....... NGAU1X =',I5/
     616X,'EQ.0; DEFAULT SET "2"')
CE    POINTERS IN INPUT DATA VECTOR
      NE1D=NET
      LNEL1D=LMAX
      NBR1=2
      IF(NP1DMX.GT.2) NBR1=3
      LMAT1D=LNEL1D+NE1D*NBR1
      LNQ1D=LMAT1D
      IF (NMAT1D.GT.1.OR.indiffus.EQ.1.OR.IHEAT.EQ.1) LNQ1D=LMAT1D+NE1D
      LITG1D= LNQ1D
      IF (IZIP.GT.0) LITG1D=LNQ1D+NE1D
      LIP1CV=LITG1D
      IF (IPTG1.GT.1) LIP1CV=LITG1D+NE1D
      LMAX=LIP1CV    
      IF (IPR1DC.GT.1) LMAX=LIP1CV+NE1D
      LAREA1D=LMAX

      IF (LMAX.LE.NTOTA) GO TO 30
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) LMAX,NTOTA
 2005 FORMAT(' NEDOVOLJNA DIMENZIJA U VEKTORU A-ZA PODATKE O 1D ELEMENTI
     1MA'/' POTREBNA DIMENZIJA , LMAX=',I10/' RASPOLOZIVA DIMENZIJA ,NTO
     2TA=',I10)
 6005 FORMAT(/1X,' UNSUFFICIENT DIMENSION OF WORKING VECTOR A FOR RE
     1AD IN INPUT DATA'/1X,' REQUIRED DIMENSION, LMAX =',I10/1X,
     2' AVAILABLE DIMENSION, NTOTA=',I10)
      STOP
CE    CALL PROGRAM TO READ INPUT DATA
   30 CONTINUE
C
C       DATA FOR CALCULATION OF DARCY'S COEFFICIENTS 
C
      LDARCYD   = LMAX
      LDARCYMI  = LMAX
      LPOROSITY = LMAX
      LICONNMA  = LMAX
      LPERMEA   = LMAX
      LSEFF1D   = LMAX
      LIEL2D3D  = LMAX
      LDIFFWALL = LMAX
      LELEAK    = LMAX 
      LDENSITY  = LMAX 
      LEMODULUS = LMAX 
      LDELTAE   = LMAX
      LELFLUX   = LMAX
      IIZLAZ = 3
      IF(IDARCY.NE.0) THEN
        IF(ICONECTIV.EQ.0) THEN
          call MEMORYT(LDARCYD,LMAX,NET*2,NTOTA,IIZLAZ)
          call MEMORYT(LDARCYMI,LMAX,NET,NTOTA,IIZLAZ)
          call MEMORYT(LDARCYDIFD,LMAX,NET,NTOTA,IIZLAZ)
          call MEMORYT(LPOROSITY,LMAX,NET,NTOTA,IIZLAZ)
          call MEMORYT(LPERMEA,LMAX,NET,NTOTA,IIZLAZ)
          call MEMORYT(LELEAK,LMAX,NET,NTOTA,IIZLAZ)
          call MEMORYT(LDENSITY,LMAX,NET,NTOTA,IIZLAZ)
          IF(NETIP.EQ.4) THEN
            call MEMORYT(LELFLUX,LMAX,4*NE1D,NTOTA,IIZLAZ)
            CALL CLEAR(A(LELFLUX),4*NE1D)
          ENDIF
          IF(IDEFORM.EQ.1) THEN
             call MEMORYT(LEMODULUS,LMAX,NET,NTOTA,IIZLAZ)
          ENDIF
          call MEMORYT(LDELTAE,LMAX,NET,NTOTA,IIZLAZ)
          
          IF(IWALLD.EQ.1)call MEMORYT(LDIFFWALL,LMAX,NE1D,NTOTA,
     1                                IIZLAZ) 
        ELSE
          call MEMORYT(LSEFF1D,LMAX,5*NE1D,NTOTA,IIZLAZ)          
        ENDIF
        call MEMORYT(LICONNMA,LMAX,NET*4,NTOTA,IIZLAZ) 
      ENDIF
        
      NELEDAT(NGELE,5)=MAT1DD
      NELEDAT(NGELE,6)=NP1DMX 
      NELEDAT(NGELE,7)=LNEL1D
      NELEDAT(NGELE,8)=LMAT1D
      NELEDAT(NGELE,9)=LNQ1D 
      NELEDAT(NGELE,10)=ICONECTIV 	
      NELEDAT(NGELE,11)=LITG1D   
     	NELEDAT(NGELE,12)=LIP1CV
      NELEDAT(NGELE,14)=LDARCYD
      NELEDAT(NGELE,15)=LDARCYMI 
      NELEDAT(NGELE,16)=LDARCYDIFD 
      NELEDAT(NGELE,17)=LPOROSITY
      NELEDAT(NGELE,18)=LICONNMA
      NELEDAT(NGELE,19)=LSEFF1D
      NELEDAT(NGELE,20)=LPERMEA  
      NELEDAT(NGELE,22)=LIEL2D3D
      NELEDAT(NGELE,25)=LELEAK
      NELEDAT(NGELE,26)=IWALLD
      NELEDAT(NGELE,27)=LDIFFWALL
      NELEDAT(NGELE,28)=LDENSITY
      NELEDAT(NGELE,29)=LEMODULUS
      NELEDAT(NGELE,30)=LDELTAE
      NELEDAT(NGELE,31)=IPARABOLIC
      NELEDAT(NGELE,32)=LELFLUX
      NELEDAT(NGELE,33)=IDEFORM
      CALL UL1DK2(A(LNEL1D),A(LMAT1D),A(LNQ1D),A(LITG1D),A(LIP1CV),
     1A(LMAXA),A(LMHT),A(LDARCYD),A(LDARCYMI),A(LDARCYDIFD),A(LPOROSITY)
     2 ,A(LICONNMA),A(LPERMEA),A(LELEAK),A(LDIFFWALL),A(LDENSITY),
     3 A(LEMODULUS),A(LDELTAE),ICONECTIV,IDARCY,
     4 NDIMIDT,IWALLD,IPIPEMIX,NETIP)
C     
      RETURN
C
C     COMMENTS:
C     MATRIX ICONNMA(4,NET)
C       ICONNMA(1,NLM) = CONNECTING 1D ELEMENT GROUP TO THE CURRENT GROUP            
C       ICONNMA(2,NLM) = CONNECTING 1D ELEMENT 1 
C       ICONNMA(3,NLM) = CONNECTING 1D ELEMENT 2            
C       ICONNMA(4,NLM) = CONNECTING 2D/3D ELEMENT GROUP (APPLICABLE TO FICTITIOUS ELEMENTS)      
      END

C=======================================================================
C
C=======================================================================
      SUBROUTINE UL1DK2(NEL,MATV,NQ,ITGAV,IP1CV,MAXA,MHT,
     1           DARCYD,DARCYMI,DARCYDIFD,POROSITY,ICONNMA,PERMEA,
     2           ELEAK,DIFFWALL,DENSITY,EMODULUS,DELTAE,
     3           ICONECTIV,IDARCY,NDIMIDT,IWALLD,IPIPEMIX,NETIP)
     
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*130 ACOZ
CE     PROGRAM TO READ DATA ABOUT 1D ELEMENTS
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA1/ LNEL1D,LMAT1D,LNQ1D,LITG1D,LIP1CV,LNG1D,LNELG1,
     1LEL1,LHP1,LHK1,LSKE1,LDEL1,LDEHP1,LDEHK1,LHR1
      COMMON /EL1K03/NMAT1D,MAT1D,NE1D,NGAU1X,NP1DMX,NND1,IELX1,NLM1,
     1IPR1DC,IPTG1,N1DGU,MEL1D,IQE1,NBR1,NCV1,LM1(3),IDEL1(1),NOD1(1)
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /SRPSKI/ ISRPS
	common/elemmodels/modelel(20),ngele
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ
	COMMON /MUMPS_PAK/IMUMPS,MUFILE,MUFILE2
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
      COMMON/DEFORMPIPE/IDEFORM
C              
      DIMENSION NEL(NE1D,*),MATV(*),NQ(*),ITGAV(*),IP1CV(*),
     1MAXA(*),MHT(*),DARCYD(2,NE1D),DARCYMI(NE1D),
     2      DARCYDIFD(NE1D),POROSITY(NE1D),ICONNMA(4,NE1D),PERMEA(NE1D),
     3      ELEAK(NE1D),DIFFWALL(NE1D),DENSITY(NE1D),EMODULUS(NE1D),
     4      DELTAE(NE1D)
      DIMENSION LMM1(6)
C
CE     ELEMENT DATA
C
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)THEN
        IF(ISRPS.EQ.0)
     *    WRITE(3,2000)
        IF(ISRPS.EQ.1) THEN
          IF(IDARCY.EQ.0) THEN
            WRITE(3,6000)
          ELSE
            IF(ICONECTIV.EQ.0) THEN
              IF(IWALLD.EQ.1) THEN
                  IF(NETIP.NE.4) THEN
                     WRITE(3,6010)
                  ELSE
                     WRITE(3,6015)
                  ENDIF
              ELSE
                  IF(NETIP.NE.4) THEN
                     WRITE(3,6013)
                  ELSE
                     WRITE(3,6016)
                  ENDIF
              ENDIF
            ELSE
              WRITE(3,6011)
            ENDIF
          ENDIF
        ENDIF
      ENDIF     
 6010 FORMAT(//'1'//6X,'DATA FOR EACH 1/D ELEMENT IN GROUP'/6X,34('-')
     3// 6X,'ELEMENT NUMBER     NODES'/ 
C       CONNECTIVITY:',
C     4   ' EL GROUP ELEMENT1 ELEMENT2 '/
     3  4X, ' DIAMETER1    DIAMETER2     VSCOSITY',
     4   '   DIFF COEFF W POROSITY W PERMEAB',
     4   '  HIDR CONDUC W DIFF COEFF, DENSITY,'
     5   '  EMODULUS  DELTAE'/)
 6015 FORMAT(//'1'//6X,'DATA FOR EACH 1/D ELEMENT IN GROUP'/6X,34('-')
     3// 6X,'ELEMENT NUMBER     NODES'/ 
C       CONNECTIVITY:',
C     4   ' EL GROUP ELEMENT1 ELEMENT2 '/
     3  4X, ' DIAMETER1    DIAMETER2     VSCOSITY',
     4   '   DIFF COEFF W POROSITY W PERMEAB',
     4   '  HIDR CONDUC W DIFF COEFF, DENSITY,'
     5   '  EMODULUS  DELTAE'/)
 6013 FORMAT(//'1'//6X,'DATA FOR EACH 1/D ELEMENT IN GROUP'/6X,34('-')
     3// 6X,'ELEMENT NUMBER     NODES'/ 
C       CONNECTIVITY:',
C     4   ' EL GROUP ELEMENT1 ELEMENT2 '/
     3  4X, ' DIAMETER1    DIAMETER2     VSCOSITY',
     4   '   DIFF COEFF W POROSITY    W PERMEAB',
     4   '    HIDR CONDUC  DENSITY      EMODULUS      DELTAE'/)
 6016 FORMAT(//'1'//6X,'DATA FOR EACH 1/D ELEMENT IN GROUP'/6X,34('-')
     3// 6X,'ELEMENT NUMBER     NODES'/ 
C       CONNECTIVITY:',
C     4   ' EL GROUP ELEMENT1 ELEMENT2 '/
     3  4X, ' DIAMETER1    DIAMETER2     VSCOSITY',
     4   '   DIFF COEFF W POROSITY    W PERMEAB',
     4   '    HIDR CONDUC  DENSITY      EMODULUS      DELTAE'/)
      
 6011 FORMAT(//6X,'DATA FOR EACH 1/D ELEMENT IN GROUP'//6X,34('-')/
     1    6X,' F I C T I I T I O U S   ELEMENTS:'/
     2  6X,' I M P O R T A N T: FRIST NODE BELONS TO 1D GROUP AND',
     3 ' SECOND NODE BELONGS TO CONTINUUM !!!'//
     3  6X,'ELEMENT NUMBER     NODES '/)
C        CONNECTIVITY:',
C     4   ' EL GROUP ELEMENT1 ELEMENT2  EL GROUP2D3D'/)
     
      NMATS=  1
      NQQS=  -1
      IPRCOS=-1
      IPGSS= -1
      KN = 0
  100 CALL ISPITA(ACOZ)
      IF(IDARCY.EQ.0) THEN
        READ(ACOZ,1000) NN,(NEL(NN,I),I=1,2),NMAT,NQQ,KORE,NBEG,IPRCO,
     2                IPGS
      ELSE
        READ(ACOZ,1010) NN,(NEL(NN,I),I=1,2),NMAT,NQQ,KORE,NBEG,IPRCO,
     2                IPGS
C
        IF(ICONECTIV.EQ.0) THEN
           CALL ISPITA(ACOZ)
           READ(ACOZ,1011)DIAM1,DIAM2,VISCOSITY,DDIF,POROSE,PERMEAS,
     1          ELEAKS,DIFFWE,DENSITYE,EMODULUSE,DELTAEE
           DARCYD(1,NN)  = DIAM1
           DARCYD(2,NN)  = DIAM2
           DARCYMI(NN)   = VISCOSITY
           DARCYDIFD(NN) = DDIF 
           POROSITY(NN)  = POROSE
           PERMEA(NN)    = PERMEAS
           ELEAK(NN)     = ELEAKS
           IF(IWALLD.EQ.1) DIFFWALL(NN)=DIFFWE 
           DENSITY(NN)   = DENSITYE
           IF(IDEFORM.EQ.1) THEN
              EMODULUS(NN) = EMODULUSE
           ENDIF
           DELTAE(NN)   = DELTAEE
        ENDIF
C        ICONNMA(1,NN)=IGROUP
C        ICONNMA(2,NN)=NEL1
C        ICONNMA(3,NN)=NEL2
C        ICONNMA(4,NN)=IGROUPE2D3D
      ENDIF
 1000 FORMAT(3I8,I6,5I5,4E10.4)
 1010 FORMAT(3I10,10I5)
 1011 FORMAT(11E10.4)
      KK = NN + NBEG
	if(nn.gt.NE1D) then
	   write(3,6350)nn,NE1D
 6350    format(/' ERROR IN INPUT DATA FOR 1D ELEMENT GROUP:'
     1   ' INPUT ELEMENT NUMBER IS GREATER THAN'/ 'THE TOTAL NUMBER'
     1   ' WITHIN THE GROUP'//
	2   ' INPUT ELEMENT NUMBER  NN=',I10/
	3   ' TOTAL NUMBER OF ELEMENTS WITHIN THE GROUP, NET=',I10/
	4   ' S T O P')
	  stop
	endif
  130 CONTINUE
        IF(indiffus.EQ.1.OR.IHEAT.EQ.1) THEN
	  IF(NMAT.EQ.0) NMAT=modelel(ngele)
	  MATV(NN)= NMAT
	  if(NMAT.gt.NMATT)then
	  write(3,6330)NN,nmat,nmatt
 6330   format(/' E R R O R'/
     1  'MATERIAL NUMBER IS GREATER THAN THE TOTAL NUMBER OF MATERIALS'/
	1  '   ELEMENT NUMBER, NN=',I8/
     2  '   MATERIAL NUMBER FOR 1D ELEMENT, NMAT=',I5/
	3  '   TOTAL NUMBER OF MATERIALS, NMATT=',I5/
	4  '   S T O P')
	  STOP
	  endif
	  GO TO 22
      ENDIF
      IF (NMATT.EQ.1) GO TO 20
      IF (NMAT1D.GT.1) GO TO 18
      NMAT=  MAT1D
      GO TO 22
   18 IF (NMAT.EQ.0) NMAT=NMATS
      NMATS=NMAT
      MATV(NN)= NMAT
      GO TO 22
   20 NMAT=  1
   22 IF(IZIP.EQ.0) GO TO 30
      IF (NQQ.EQ.0) NQQ=NQQS
      NQQS=NQQ
      NQ(NN)=NQQ
      IF(NQ(NN).LT.0) NQQ = 0
      IF(NQ(NN).LT.0) NQ(NN) = 0
      GO TO 32
   30 NQQ = 0
   32 IF (IPR1DC.LT.2) GO TO 40
      IF (IPRCO.EQ.0) IPRCO=IPRCOS
      IPRCOS=IPRCO
      IP1CV(NN)=IPRCO
      IF(IP1CV(NN).LT.0) IPRCO = 0
      IF(IP1CV(NN).LT.0) IP1CV(NN) = 0
      GO TO 42
   40 IF (IPR1DC.EQ.1) IPRCO= 1
      IF (IPR1DC.EQ.0) IPRCO= 0
   42 IF (IPTG1.LE.1) GO TO 50
      IF (IPGS.EQ.0) IPGS=IPGSS
      IPGSS=IPGS
      ITGAV(NN)=IPGS
      IF(ITGAV(NN).LT.0) IPGS = 0
      IF(ITGAV(NN).LT.0) ITGAV(NN) = 0
      GO TO 52
   50 IF (IPTG1.EQ.1) IPGS= 1
      IF (IPTG1.EQ.0) IPGS= 0
   52 CONTINUE

      IF(IDARCY.EQ.0) THEN
         IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)
     *   WRITE(3,5001) NN,(NEL(NN,I),I=1,2),NMAT,NQQ,IPRCO,IPGS
      ELSE
         IF(ICONECTIV.EQ.0) THEN
           IF(IWALLD.EQ.0) THEN
             IF(NETIP.NE.4) THEN 
                WRITE(3,1018)NN,(NEL(NN,I),I=1,2),
     1          DARCYD(1,NN),DARCYD(2,NN),DARCYMI(NN),DARCYDIFD(NN),
     2          POROSITY(NN),PERMEA(NN),ELEAK(NN),DENSITY(NN),EMODULUSE,
     3          DELTAEE
             ELSE
                WRITE(3,1020)NN,(NEL(NN,I),I=1,2),
     1          DARCYD(1,NN),DARCYD(2,NN),DARCYMI(NN),DARCYDIFD(NN),
     2          POROSITY(NN),PERMEA(NN),ELEAK(NN),DENSITY(NN),EMODULUSE,
     3          DELTAEE
             ENDIF
           ELSE
             IF(NETIP.NE.4) THEN 
                WRITE(3,1018)NN,(NEL(NN,I),I=1,2),
     1          DARCYD(1,NN),DARCYD(2,NN),DARCYMI(NN),DARCYDIFD(NN),
     2          POROSITY(NN),PERMEA(NN),ELEAK(NN),DIFFWALL(NN),
     3          DENSITY(NN),EMODULUSE,DELTAEE
             ELSE
                WRITE(3,1018)NN,(NEL(NN,I),I=1,2),
     1          DARCYD(1,NN),DARCYD(2,NN),DARCYMI(NN),DARCYDIFD(NN),
     2          POROSITY(NN),PERMEA(NN),ELEAK(NN),DIFFWALL(NN),
     3          DENSITY(NN),EMODULUSE,DELTAEE   
             ENDIF
           ENDIF        
         ELSE
           WRITE(3,1019)NN,(NEL(NN,I),I=1,2)
C          ,(ICONNMA(I,NN),I=1,4)
         ENDIF   
 1018    FORMAT(3I10/11D13.4,2I7)
 1020    FORMAT(3I10/10D13.4,2I7) 
 1019    FORMAT(3I10)
      ENDIF
      KN = KN + 1
      IF (NP1DMX.EQ.2) GO TO  90
      IF(NN.GT.KK-NBEG) GO TO 80
      CALL ISPITA(ACOZ)
      IF (INDFOR .EQ.1)
     1READ(1,*)   NEL(NN,3)
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000)   NEL(NN,3)
   80 IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)
     *WRITE(3,5002)   NEL(NN,3)
   90 IF(KN.EQ.NE1D) GO TO 110
      IF(KORE.EQ.0.AND.NBEG.EQ.0) GO TO 100
      NN = NN + 1
      IF(NN.GT.KK) GO TO 100
      DO 170 I=1,2
      NEL(NN,I)=NEL(NN-1,I)+KORE
  170 CONTINUE
      IF(NP1DMX.EQ.2) GO TO 130
      IF(NEL(NN-1,3).EQ.0) GO TO 129
      NEL(NN,3)=NEL(NN-1,3)+KORE
      GO TO 130
  129 NEL(NN,3)=0
      GO TO 130
 2000 FORMAT(///'1'//6X,'PODACI ZA SVAKI 1/D ELEMENT U GRUPI'/6X,35('-')
     3///6X,' ELEM.',5X,'CVOROVI',5X,'MAT.',2X,' IZVOR',2X,'KOORD.',2X,
     4'TEMP.'/9X,'BR.',18X,'BR.',4X,'BR.',4X,'G.T.',4X,'G.T.'
     5/17X,'1',5X,'2'/20X,'3')
 6000 FORMAT(///'1'//6X,'DATA FOR EACH 1/D ELEMENT IN GROUP'/6X,34('-')
     3///6X,' ELEM.',5X,' NODES ',5X,'MAT.',2X,'SOURCE',2X,'COORD.',2X,
     4'CONC.',5X,'AREA'/9X,'No.',13X,'No.',9X,'No.',22X,'G.P.',6X,'G.P.'
     5/24X,'1',5X,'2'/27X,'3')
 5001 FORMAT(6X,3I8,2X,I8,I11,I15,I13,5X,E10.4)
 5002 FORMAT(15X,I6)
CE    FORM VECTOR MAXA
  110 INDMA= 0
      IF(IMUMPS.EQ.1) RETURN
      IF (NGE.LT.NGET) GO TO 120
CE    AUXILARY SPACE FOR MAXA
      LMAXS=LMAX
      LMAXA=LMAX
      LMD=LMAXA+JEDN+1
      LMAX=LMD+3*NDIMIDT
      INDMA=1   
      IF (LMAX.LE.NTOTA) GO TO 120
      IF(ISRPS.EQ.0)
     1WRITE(3,2010) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     1WRITE(3,6110) LMAX,NTOTA
      STOP
 2010 FORMAT(' NEDOVOLJNA DIMENZIJA U VEKTORU A-ZA FORMIRANJE MAXA'/' PO
     1TREBNA DIMENZIJA , LMAX=',I9/' RASPOLOZIVA DIMENZIJA , NTOTA=',I9)
 6110 FORMAT(/1X,' UNSUFFICIENT DIMENSION OF WORKING VECTOR A FOR MAXA'/
     1 1X,' REQUIRED DIMENSION, LMAX =',I10/1X,
     2' AVAILABLE DIMENSION, NTOTA=',I10)
  120 CONTINUE
      IF(IDARCY.EQ.0) THEN
         CALL MAXATE(A(LMAXA),MHT,A(LIDT),NEL,LM1,NE1D,JEDN,INDMA,
     1               NBR1,NWK,NDIMIDT)
      ELSE
         CALL MAXAPIPET(A(LMAXA),A(LMHT),A(LIDT),NEL,LMM1,NE1D,NP1DMX,
     1              JEDN,NWK,NPT,NDIMIDT,INDMA)
      ENDIF 
      IF(NGE.LT.NGET)RETURN
      LMAX=LMAXS
      LMAXA=LMHT
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE GRAN1D(NG1D,NELG,NEL,N1DGUL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*130 ACOZ
CE PROGRAM TO READ BOUNDARY CONDITION INPUT DATA ON 3D ELEMENT SURFACES
CE PROGRAM READS ONLY CORNER NODES OF SURFACES GGGGGGGGGGGGGGGGGGGGG
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /EL1K03/NMAT1D,MAT1D,NE1D,NGAU1X,NP1DMX,NND1,IELX1,NLM1,
     1IPR1DC,IPTG1,N1DGU,MEL1D,IQE1,NBR1,NCV1,LM1(3),IDEL1(1),NOD1(1)
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /SRPSKI/ ISRPS
      DIMENSION NG1D(*),NELG(5,2,*),NEL(NE1D,*)
      DIMENSION NPOV(2,1),NPOVV(2),NPV(1),NPG(1)
      DATA NPOVV/1,2/
CE  NODES ON SURFACES
      KK=0
      DO 10 I=1,2
      KK=KK+1
   10 NPOV(I,1)=NPOVV(KK)
      DO 20 I=1,5
      DO 20 J=1,2
      DO 20 K=1,NE1D
   20 NELG(I,J,K)=0
      DO 25 I=1,NE1D
   25 NG1D(I)=0
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     *WRITE(3,2000)
      IF(ISRPS.EQ.1)
     *WRITE(3,6000)
      ENDIF
 2000 FORMAT(//'1'///6X,'PODACI O GRANICNIM POVRSINAMA 1/D ELEMENATA'/
     16X,43('-')//
     17X,'(UCITAVANJE SE ZAVRSAVA PRAZNOM LINIJOM)'//
     16X,' ELEM.',4X,'CVOR',5X,'FLUKS',2X,'KOEF.PREL.',
     22X,'TEMP.OKOL.',2X,'KOEF.EMIS.',2X,'FUNK.OBLIKA'/
     26X,'   BR.',15X,'BR.',6X,'BR.',9X,'BR.',9X,'BR.',9X,'BR.')
 6000 FORMAT(//'1'///6X,'BOUNDARY CONDITIONS FOR 1/D ELEMENTS'/
     16X,36('-')///
     16X,' ELEM.',4X,'NODE',6X,'FLUX',2X,'CONV.COEF.',
     22X,'ENVI.TEMP.',2X,'EMIS.COEF.',2X,'SHAPE FUNCT.'/
     26X,'   No.',15X,'No.',6X,'No.',9X,'No.',9X,'No.',9X,'No.')
      IFLS=0
      N1DGU=0
      IHPS=0
      IHRS=0
      ITOS=0
      IFOS=0
   30 CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(1,*)NN,NPV(1),IFL,IHP,ITO,IHR,IFO
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000)NN,NPV(1),IFL,IHP,ITO,IHR,IFO
 1000 FORMAT(10I5)
      IF(NN.EQ.0) GO TO 200
CE DETERMINATION ORDINAL NUMBER OF SURFACE IN ELEMENT
      DO 50 I=1,2
      JJ=NPOV(I,1)
      NPG(1)=NEL(NN,JJ)
      K = 0
      IF(NPV(1).EQ.NPG(1)) K = K + 1
      IF(K.EQ.1) GO TO 60
   50 CONTINUE
      IF(ISRPS.EQ.0)
     *WRITE(3,2001) NN,(NPV(1))
      IF(ISRPS.EQ.1)
     *WRITE(3,6001) NN,(NPV(1))
 2001 FORMAT(/1X,'GRESKA U ULAZNIM PODACIMA ZA GRANICNE USLOVE:'/
     11X,'ELEMENT No.',I5/1X,'UCITANI CVOR NA GRANICI :',I5/
     21X,'NE CINI JEDNU STRANU ELEMENTA')
 6001 FORMAT(/1X,'ERROR IN BOUNDARY CONDITION INPUT DATA:'/
     11X,'ELEMENT NO.',I5/1X,'READIN BOUNDARY NODES :',I5/
     21X,'DO NOT CONSTITUTE SIDE OF ELEMENT')
      STOP
   60 IF(NG1D(NN).EQ.0) GO TO 65
      IVR=NG1D(NN)
      GO TO 70
   65 N1DGU=N1DGU+1
      IVR=N1DGU
      NG1D(NN) = IVR
   70 IF(IFL.GT.0.OR.IHP.GT.0.OR.ITO.GT.0.OR.IHR.GT.0.OR.IFO.GT.0)
     1GO TO 75
      IFL=IFLS
      IHP=IHPS
      IHR=IHRS
      ITO=ITOS
      IFO=IFOS
      GO TO 80
   75 IFLS=IFL
      IHPS=IHP
      IHRS=IHR
      ITOS=ITO
      IFOS=IFO
   80 NELG(1,I,IVR)=IFL
      NELG(2,I,IVR)=IHP
      NELG(3,I,IVR)=ITO
      NELG(4,I,IVR)=IHR
      NELG(5,I,IVR)=IFO
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      WRITE(3,5002) NN,NPV(1),IFL,IHP,ITO,IHR,IFO
      ENDIF
 5002 FORMAT(6X,I5,3X,I5,3X,I7,I9,3I12)
      GO TO 30
  200 N1DGUL=N1DGU
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE TGRAF1(NEL,NBR2,NET,NGE,II,LAYER)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON /SRPSKI/ ISRPS
      DIMENSION NEL(NET,*)
      ITYPE=1
      IE1=11
      IE2=1
      IE3=LAYER !1
      ICOL=8
      IND=-1
      ITYP=71
      WRITE(II,1100) IND
      WRITE(II,1100) ITYP
      DO 10 I=1,NET
         WRITE(II,1000) I,ITYPE,IE1,IE2,IE3,ICOL,NBR2
         WRITE(II,1000) (NEL(I,J),J=1,2)
   10 CONTINUE
      WRITE(II,1100) IND
      RETURN
 1100 FORMAT(I6)
 1000 FORMAT(8I10)
      END  
C ======================================================================
C
C ======================================================================
      SUBROUTINE K03MGL
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
CE MAIN PROGRAM TO FORM MATRIXES AND VECTORS OF ELEMENT K03
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA1/ LNEL1D,LMAT1D,LNQ1D,LITG1D,LIP1CV,LNG1D,LNELG1,
     1LEL1,LHP1,LHK1,LSKE1,LDEL1,LDEHP1,LDEHK1,LHR1
      COMMON /EL1K03/NMAT1D,MAT1D,NE1D,NGAU1X,NP1DMX,NND1,IELX1,NLM1,
     1IPR1DC,IPTG1,N1DGU,MEL1D,IQE1,NBR1,NCV1,LM1(3),IDEL1(1),NOD1(1)
	COMMON/AREA1DEL/LAREA1D
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ 
	common/elemmodels/modelel(20),ngele
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON/DARCYEQ/ ELDARCYX,ELDARCYY,ELDARCYZ,VDARCY,PINLET,
     1       DARCYX,JEDNDARCY,ISOLVER,IDARCY,LDARCYD,LDARCYMI,
     2       LIDARCYMA,NPTINDARCY
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON/MAINIDT/NDIMIDT  
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10)
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
      COMMON/PIPEMIX/FLAMREF,IPIPEMIX,NETIP,LIDPRESS,LPRESS,LIDP,
     2               LLAMDAV,IDEFORMG,INDFLUXE,ILAMDA
      COMMON /SRPSKI/ ISRPS
      COMMON/UNSYMMETRIC/LALEVO,LDESNO,LSILE,ISYMM
      COMMON/CSMEARED/ISMEARED,VOLFRACT,POROSSME,LVOLFRACTV,LDWALLSME,
     1 LPWALLSMEV,LDIAMSME,LTHICKSME,IPARTSME,LVOLSME,IRAVSME,DRAVSME
      COMMON/CAPILLWALL/LCAPWTHICKV  
      COMMON/COMMPART/IPART,LNODEPART,LPARTV,LIPARTCAP,LIPARTCELL     
      COMMON/CSMEAREDG/ISMEAREDG,NDIMIDG,ICONVG,INDIFFUSG,LAMI,
     1     LDARCYCOEF,MATNEWUSE,LHYDRCOEF,LDPIPE,LDTISSUE,IPRINTVEL,
     2     IACTIVE(4),LZADATA1,LZADATA0,LZADAVXYZ,LWALLAREA,
     3     LWALLPOROSV,LIPIPENOD,ILARGEVES
      COMMON/CSMEARED2/IPASSME,JEDNPRES,JEDNCONC,LTT1P,LTT1C,LTT10P,
     1      LTT10C,LDIRCOEFF,LDPIPECA,LDARCYCA,I2D3D,IANIZS,NDIMTENSOR
      COMMON/CMULTITIS/MULTITIS,MULTIMOL,IACTIVECELL(4),NDIMCELL,LIDTV,
     1      LIDTVCELL,JEDNPV(10),JEDNCV(10),JEDNPMAX,JEDNCMAX,MM
      COMMON/CZADATMULT/NZADPV(10),NZADPMAX,LZADATM0,LZADATM1,LNZADNODF,
     1      LZADVALUE,NPTIMESYSV(10),NPTSYSMAX,LZADSYSV
      COMMON/MULTITISAD/LIPARTITV,LIACTIVEV,LIVSOURCEV,LIADHESIV,
     1 LVOLFRACT,LDARCYCOEFV,LHYDRCOEFPV,LHYDRCOEFCV,LAMIPV,LAMICV,
     2 LVOLSMEV,LDARTENSOR,LWALLAREAV,LVFMULTIT,LDIAMCELLV,
     3 LDPIPEEXV,LDCELLSV,LDPIPECAP,LIPARTNODEV,LPARTNODEV,
     4 LIACTIVENODEV,LACTIVENODEV,LISOURCENODEV,LSOURCENODEV,
     5 LADHESINODEV,LIADHESINODEV,LDWALLSMEV,LDWALLCELL,LDIAMSMEV,
     6 LTHICKSMEV,LDWALLV,LIPIPENODV,LICRITICALV,LCRITICALV,
     7 LTT1PM,LTT01PM,LTT1CM,LTT01CM,LFMULT

CE  POINTERS FOR MATRIXES OF ELEMENT
CE  NUMBER OF MEMBERS IN MATRIXES OF ELEMENT
      LMAXSAVE=LMAX
      IF(NP1DMX.EQ.2) MEL1D=3
      IF(NP1DMX.GT.2) MEL1D=6
      IDIFUSE=NELEDAT(NGELE,13)
      NDIMIDTT=NDIMIDT
      IF(indiffus.EQ.1.AND.IDIFUSE.EQ.0)NDIMIDTT=NDIMIDTT-1
      NDES=2*NDIMIDTT
      IF(ISMEARED.GE.2.OR.ISMEARED.EQ.0) THEN
         NDES=2  
         NDIMIDTT=2
      ENDIF
      IF(ILAMDA.EQ.1)NDES=6         
      IF(IDARCY.NE.0) THEN
         MEL1D=NDES*NDES
      ENDIF
      LEL1=LMAXM
      LHP1=LEL1
      IF(NSTAC.GT.0) LHP1=LEL1+MEL1D*NDIMIDTT
      LHR1=LHP1+MEL1D*NDIMIDTT
      LHK1=LHR1
      IF(LINTE.GT.0.OR.indiffus.EQ.1) LHK1=LHR1+MEL1D*NDIMIDTT
      LSKE1=LHK1+MEL1D*NDIMIDTT
      LMAX=LSKE1+NDES*NDES
      IF(INTEB.EQ.1) GO TO 30
      LDEL1= LMAX
      IF(KONC.EQ.1) LMAX = LMAX + MEL1D
      LDEHP1= LMAX
      IF(KONK.EQ.1) LMAX = LMAX + MEL1D
      LDEHK1= LMAX
      IF(MAXTHP.GT.1)LMAX = LMAX + MEL1D
   30 IF(LMAX.LE.NTOTA) GO TO 20
      IF(ISRPS.EQ.0)
     *   WRITE(3,2000) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *   WRITE(3,6000) LMAX,NTOTA
 2000 FORMAT(/1X,'NEDOVOLJNA DIMENZIJA U VEKTORU A - ZA SMESTANJE MATRIC
     1A ELEMENATA'/1X,'POTREBNA DIMENZIJA,LMAX=',I10/1X,'RASPOLOZIVA DIM
     2ENZIJA, NTOTA=',I10)
 6000 FORMAT(/1X,' UNSUFFICIENT DIMENSION OF WORKING VECTOR A FOR',
     1' ELEMENT MATRIX'/1X,' REQUIRED DIMENSION, LMAX =',I10/1X,
     2' AVAILABLE DIMENSION, NTOTA=',I10)
      STOP
   20 continue
c
      MAT1DD    =NELEDAT(NGELE,5)
      NP1DMX    =NELEDAT(NGELE,6)
      LNEL1D    =NELEDAT(NGELE,7)
      LMAT1D    =NELEDAT(NGELE,8)
      LNQ1D     =NELEDAT(NGELE,9)
      ICONECTIV =NELEDAT(NGELE,10)
      LITG1D    =NELEDAT(NGELE,11)
      LIP1CV    =NELEDAT(NGELE,12)
      LDARCYD   =NELEDAT(NGELE,14)
      LDARCYMI  =NELEDAT(NGELE,15)
      LDARCYDIFD=NELEDAT(NGELE,16)
      LPOROSITY =NELEDAT(NGELE,17)
      LICONNMA  =NELEDAT(NGELE,18)
      LSEFF1D   =NELEDAT(NGELE,19)
      LPERMEA   =NELEDAT(NGELE,20)
      LIEL2D3D  =NELEDAT(NGELE,22)
      IBOUND    =NELEDAT(NGELE,23)
      LDENSITY  =NELEDAT(NGELE,28)
      LEMODULUS =NELEDAT(NGELE,29)
      LDELTAE   =NELEDAT(NGELE,30)         
      IPARABOLIC=NELEDAT(NGELE,31)
      LELFLUX=   NELEDAT(NGELE,32)
      IDEFORM=   NELEDAT(NGELE,33)
      LELFLUX0 = LELFLUX+2*NE1D
      LNODEIN  = LMAX
      LNODEOUT = LMAX                      
C
      IF(MULTITIS.EQ.0) THEN
        LFORCE = LSILE
      ELSE
        LFORCE = LFMULT
      ENDIF
C
      IF(IDARCY.EQ.0) THEN
        CONTINUE
      ELSE
        IF(NETIP.EQ.1) THEN
           IF(ICONECTIV.EQ.1) THEN 
C             FICTITIOUS ELEMENTS CONNECTING PIPE (LARGE VESSEL) AND CAPILLARY SMEARED CONTINUUM
              DO NLM1=1,NE1D 
                IF(MULTITIS.EQ.0) THEN   
                   CALL CAP1DFICTSME3(A(LIDT),A(LF),A(LTT1P),A(LTT1C),
     1             A(LTT10P),A(LTT10C),A(LNODEPART),A(LPARTV),
     1             A(LTHICKSMEV),A(LDWALLSMEV),A(LPWALLSMEV),
     2             A(LWALLAREAV),A(LHYDRCOEFV),A(LNZADJ),A(LZADATA1),
     3             A(LZADATA0),IACTIVE,A(LNEL1D),KOR,ITER,JEDN,DT,NPT,
     4             NLM1,INDFLUX,NZADP,NE1D,ICONV,INDIFFUS,IPART,IPASSME,
     5             JEDNPRES,JEDNCONC,NDIMIDT)      
                ELSE
                   CALL CAP1DFICTSME3MULT(A(LIDT),A(LF),A(LTT1P),
     1             A(LTT1C),A(LTT10P),A(LTT10C),A(LTT1PM),A(LTT01PM),
     2             A(LTT1CM),A(LTT01CM),A(LIDTV),A(LNODEPART),A(LPARTV),
     1             A(LTHICKSMEV),A(LDWALLSMEV),A(LPWALLSMEV),
     2             A(LWALLAREAV),A(LHYDRCOEFV),A(LNZADJ),A(LZADATA1),
     3             A(LZADATA0),A(LZADATM0),A(LZADATM1),A(LNZADNODF),
     3             IACTIVE,A(LNEL1D),KOR,ITER,JEDN,DT,NPT,
     4             NLM1,INDFLUX,NZADP,NE1D,ICONV,INDIFFUS,IPART,IPASSME,
     5             JEDNPRES,JEDNCONC,NDIMIDT,MM) 
                ENDIF
              ENDDO 
           ELSE
             IF(MULTITIS.GT.0.OR.MULTIMOL.GT.1) GO TO 100  
              
             IPIPESOLV=1
C            SIMPLIFICATIONS FOR RIGID PIPE ELEMENT  (OCTOBER 2016)
             IF(IPIPESOLV.EQ.1) THEN
               CALL INTEB1DARCYS(A(LIDT),A(LCORD),A(LTCONS),A(LNTAKV),
     1          A(LNTACV),A(LTT1P),A(LTT1C),A(LTT10P),A(LTT10C),
     2          A(LNEL1D),A(LNQ1D),A(LMAT1D),A(LEL1),A(LHP1),A(LHK1),
     3          A(LSKE1),A(LIBFK),A(LFAKP),A(LHR1),A(LMATER),A(LMATFUN),
     4          A(LNZADJ),A(LZADFM),A(LDARCYD),A(LDARCYMI),
     5          A(LDARCYDIFD),A(LIDARCYMA), A(LNODEIN),A(LNODEOUT),
     7          A(LFLUXDX),A(LMATHEAT),A(LMATFUNHRO),A(LMATFUNHSH),
     8          A(LMATFUNHK),A(LDENSITY),A(LEMODULUS),A(LDELTAE),
     9          A(LZADATA1),A(LZADATA0),NDES,NDIMIDT,IDARCY,IBOUND,
     1          NZADIN,NZADOUT,MAT1DD,INDFLUXE,IDEFORM,A(LIDT),
     2          IACTIVE,IPASSME,JEDNPRES,JEDNCONC,ISMEAREDG,LFORCE)
             ELSE
               CALL INTEB1DARCY(A(LIDT),A(LCORD),A(LTCONS),A(LNTAKV),
     1          A(LNTACV),A(LTT1),A(LTT2),A(LNEL1D),A(LNQ1D),
     2          A(LMAT1D),A(LEL1),A(LHP1),A(LHK1),A(LSKE1),A(LTT0),
     3          A(LIBFK),A(LFAKP),A(LHR1),A(LMATER),A(LMATFUN),
     4          A(LNZADJ),A(LZADFM),A(LDARCYD),A(LDARCYMI),
     5          A(LDARCYDIFD),A(LIDARCYMA),A(LICONNMA),A(LSEFF1D),
     6          A(LPERMEA),A(LIEL2D3D),A(LNODEIN),A(LNODEOUT),
     7          A(LFLUXDX),A(LMATHEAT),A(LMATFUNHRO),A(LMATFUNHSH),
     8          A(LMATFUNHK),A(LDENSITY),A(LEMODULUS),A(LDELTAE),
     9          A(LLAMDAV),NDES,NDIMIDT,IDARCY,ICONECTIV,IBOUND,NZADIN,
     1          NZADOUT,MAT1DD,INDFLUXE,IDEFORM,ILAMDA,A(LIDT),
     2          IACTIVE,ISMEAREDG)
             ENDIF
            
  100        CONTINUE           
             CALL INTEB1DARCYSM(A(LIDT),A(LCORD),A(LTCONS),A(LNTAKV),
     1          A(LNTACV),A(LTT1P),A(LTT1C),A(LTT10P),A(LTT10C),
     2          A(LTT1PM),A(LTT01PM),A(LTT1CM),A(LTT01CM),A(LIDTV),
     2          A(LNEL1D),A(LNQ1D),A(LMAT1D),A(LEL1),A(LHP1),A(LHK1),
     3          A(LSKE1),A(LIBFK),A(LFAKP),A(LHR1),A(LMATER),A(LMATFUN),
     4          A(LNZADJ),A(LZADFM),A(LDARCYD),A(LDARCYMI),
     5          A(LDARCYDIFD),A(LIDARCYMA), A(LNODEIN),A(LNODEOUT),
     7          A(LFLUXDX),A(LMATHEAT),A(LMATFUNHRO),A(LMATFUNHSH),
     8          A(LMATFUNHK),A(LDENSITY),A(LEMODULUS),A(LDELTAE),
     9          A(LZADATA1),A(LZADATA0),A(LZADATM0),A(LZADATM1),
     9          A(LNZADNODF),NDES,NDIMIDT,IDARCY,IBOUND,
     1          NZADIN,NZADOUT,MAT1DD,INDFLUXE,IDEFORM,A(LIDT),
     2          IACTIVE,IPASSME,JEDNPRES,JEDNCONC,ISMEAREDG,LFORCE)
          ENDIF  
        ELSE
          CALL INTEB4DARCY(A(LIDT),A(LCORD),A(LTCONS),A(LNTAKV),
     1    A(LNTACV),A(LTT1),A(LTT2),A(LNEL1D),A(LNQ1D),
     2    A(LMAT1D),A(LEL1),A(LHP1),A(LHK1),A(LSKE1),A(LTT0),A(LIBFK),
     3    A(LFAKP),A(LHR1),A(LMATER),A(LMATFUN),A(LNZADJ),A(LZADFM),
     4    A(LDARCYD),A(LDARCYMI),A(LDARCYDIFD),A(LIDARCYMA),A(LICONNMA),
     5    A(LSEFF1D),A(LPERMEA),A(LIEL2D3D),A(LNODEIN),A(LNODEOUT),
     6    A(LFLUXDX),A(LMATHEAT),A(LMATFUNHRO),A(LMATFUNHSH),
     7    A(LMATFUNHK),A(LDENSITY),A(LEMODULUS),A(LDELTAE),A(LLAMDAV),
     8    A(LELFLUX),A(LELFLUX0),
     8    NDES,NDIMIDT,IDARCY,ICONECTIV,IBOUND,NZADIN,NZADOUT,MAT1DD,
     9    INDFLUXE,IDEFORM,ILAMDA,IPARABOLIC,A(LIDT))
        ENDIF
      ENDIF
      LMAX=LMAXSAVE
      RETURN
   21 WRITE(*,*) 'NIJE UGRADJENA ALFA INTEGRACIJA'
      STOP
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTEB1DARCYS(IDT,CORD,TCONS,NTAKV,NTACV,TT1P,TT1C,
     1 TT10P,TT10C,NEL,NQ,MATV,EL,HP,HK,SKE,IBFK,FAKP,HR,MATERP,
     2 AMATF,NZADJ,ZADFM,DARCYD,DARCYMI,DARCYDIFD,IDARCYMA,
     3 NODEIN,NODEOUT,FLUX,MATERH,AMATFRO,AMATFSH,AMATFK,
     4 DENSITY,EMODULUS,DELTAE,ZADATA1,ZADATA0,NDES,NDIMIDT,IDARCY,
     5 IBOUND,NZADIN,NZADOUT,MAT1DD,INDFLUXE,IDEFORM,IDTCD,
     6 IACTIVE,IPASSME,JEDNPRES,JEDNCONC,ISMEARED,LFORCE)    
C
C     1D PIPE ELEMENTS COUPLED WITH SMEARED CONTINUUM        
C                 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON A(1)
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA1/ LNEL1D,LMAT1D,LNQ1D,LITG1D,LIP1CV,LNG1D,LNELG1,
     1LEL1,LHP1,LHK1,LSKE1,LDEL1,LDEHP1,LDEHK1,LHR1
      COMMON /EL1K03/NMAT1D,MAT1D,NE1D,NGAU1X,NP1DMX,NND1,IELX1,NLM1,
     1IPR1DC,IPTG1,N1DGU,MEL1D,IQE1,NBR1,NCV1,LM1(3),IDEL1(1),NOD1(1)
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON/REAL1D/ CK1(3,3),P1(1,3),PJ1(1,3),XJ1(1,3),H1(3),
     1DET1,F3(6),TT3(6),TT32(6),TT30(6)  
      COMMON /SRPSKI/ ISRPS
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ          
	common/elemmodels/modelel(20),ngele                 
	COMMON/MESSAGES/MESSAGE
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON/UNSYMMETRIC/LALEVO,LDESNO,LSILE,ISYMM
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP, 
     3ITOR,INDVEL,INDFL
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10)
	COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
C
      DIMENSION IDT(NDIMIDT,NPT),CORD(NPT,3),TCONS(*),NTAKV(*),NTACV(*),
     1TT1P(JEDNPRES),TT1C(JEDNCONC),TT10P(JEDNPRES),TT10C(JEDNCONC),
     2 NEL(NE1D,2),MATV(*),EL(*),HP(*),HK(*),SKE(NDES,NDES),
     2NQ(*),IBFK(NMATT,*),FAKP(NMATT,*),TBK(1),HR(*)        
      DIMENSION XG(15),WGT(15),NREF(6)
      DIMENSION MATERP(NUMMAT),AMATF(NUMMAT,2,*),NZADJ(3,NZADP),
     1          ZADFM(NZADP),IDTCD(2,NPT),IACTIVE(4)
      DIMENSION DARCYD(2,NE1D),DARCYMI(NE1D),DARCYDIFD(NE1D),
     1          IDARCYMA(NPT),NODEIN(NZADIN),NODEOUT(NZADOUT),FLUX(NPT),
     2          DENSITY(NE1D),EMODULUS(NE1D),DELTAE(NE1D),
     3          ZADATA1(NZADP),ZADATA0(NZADP)
      DIMENSION MATERH(NMATTHEAT),AMATFRO(NMATTHEAT,2,*),
     2          AMATFSH(NMATTHEAT,2,*),AMATFK(NMATTHEAT,2,*)
      DIMENSION ZADLOCAL(6),ZADLOCAL0(6),ZADLOCAL32(6),LMZADA(6),LM1D(6)
     1          ,LMMINUS(6),VLOCAL(6),SKEM(2,2),SKEP(2,2),
     2          SKED(2,2),AMASSA(2,2),EM(2,2)
C
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
C
      IF(INDFLUXE.EQ.1) RETURN
C
      IF(IZIP.EQ.2) GO TO 15
      IF(NQE.NE.1) GO TO 15
      CALL TABF(A(LQEFN),A(LNTAQE),NQE,NQE,VREME,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 15
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) NQE,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) NQE,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPL. IZVOR-VREME,  BR.=',I3/
     11X,'ARGUMENT VREME= ',F10.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME = ',1PD12.4)
      STOP
   15 CONTINUE
C
      ICONVV = ICONV
      IDIFFHEAT = 0
      IF(IDIFUSE.NE.0.OR.IHEAT.NE.0) IDIFFHEAT = 1
C
      PI     = 4.*DATAN(1.D0)
      PI4    = PI/4.
      COEFF  = PI/128.
      DDARCY = 0.D0
      iizlaz = 3
      VBR    = 1.0D35
      CC1=1.D0
      AKTT = 1./DT
      ILAMDA=0
      IDPRESSE=1
      ICONECTIV=0
      IF(ICONV.EQ.0)IDPRESSE=0
      INDVEL=0
      IDCONCE=0    
      IF(INDIFFUS.EQ.1) THEN
        IDCONCE=2
        IF(ICONV.EQ.0)IDCONCE=1   
      ENDIF
C
C     LOOP OVER ELEMENTS
C
      DO 200 NLM1= 1,NE1D
      DO 20 I = 1,MEL1D
C      IF(INDSK.EQ.0) GO TO 21
      HP(I) = 0.
      HK(I) = 0.
      HR(I) = 0.
C   21 IF(NSTAC.EQ.0) GO TO 20
      EL(I) = 0.
   20 CONTINUE
      DO 17 I=1,6
      TT3(I) = 0.
      TT32(I) = 0.
      TT30(I) = 0.
      IF(I.LE.3)LM1(I)=0
   17 F3(I)=0.
      DO I=1,6
        ZADLOCAL(I)=0.D0
        ZADLOCAL0(I)=0.D0
        ZADLOCAL32(I)=0.D0
	  LMZADA(I)=0
	  LM1D(I)=0
	  LMMINUS(I)=0
      ENDDO
C     IF(NSTAC.EQ.0) GO TO 23
      CALL CLEAR(SKE,NDES*NDES)
      CALL CLEAR(SKEM,4)
      CALL CLEAR(SKEP,4)
      CALL CLEAR(SKED,4)
      CALL CLEAR(AMASSA,4)
C
   23 IF(NMAT1D.GT.1.OR.indiffus.EQ.1.OR.IHEAT.EQ.1) MAT1D=MATV(NLM1)
      IQE1=0
      IF(NQE.GT.0) IQE1=NQ(NLM1)
      ARG=0.
	IF(indiffus.EQ.1.OR.iDARCY.NE.0) THEN
	  CC1=1.D0
	  GO TO 30 
	ENDIF
      IF(NSTAC.EQ.0.OR.KONC.EQ.1) GO TO 25
      CALL TABF(A(LTABC),A(LNTACV),MAT1D,NMATT,ARG,CC1,NTA,IND)
   25 IF(IANIZ.EQ.0) GO TO 188
      FAX=FAKP(MAT1D,1)
  188 IBX=IBFK(MAT1D,1)
      IF(KONK.EQ.1) GO TO 30
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,ARG,AKX,NTA,IND)
      IF(IANIZ.EQ.0) GO TO 30
      AKX=AKX*FAX
   30 IF(IQE1.EQ.0.OR.NQE.EQ.1) GO TO 44
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,VREME,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 44
      WRITE(3,2000) IQE1,VREME
      STOP
   44 IF(IZIP.NE.2.OR.MAXTQE.GT.1) GO TO 40
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,ARG,QQ1,NTA,IND)
      
   40 NCV1   = 0
      NND1   = 0
	NELZAD = 0
	
      DIAM1  = DARCYD(1,NLM1)
      DIAM2  = DARCYD(2,NLM1)
      DIAM   = 0.5*(DIAM1+DIAM2)
      AREA   = PI4*DIAM*DIAM
      AMI    = DARCYMI(NLM1)
      DDIF   = DARCYDIFD(NLM1)
      EEE    = 0.D0
      DELTAE0= 0.D0
      IF(IDEFORM.EQ.1) THEN
         EEE = EMODULUS(NLM1)
         DELTAE0 = DELTAE(NLM1)
      ENDIF
C	
C     LOOP OVER NODES ---------------
C
      KKIN  = 0
      KKOUT = 0
      NBR1=2
      DO 50 I=1,NBR1
   41 J=NEL(NLM1,I)
      NODE1=NEL(NLM1,1)
      NODE2=NEL(NLM1,2)
  
      JJ1=0
      IF(IPASSME.EQ.1) THEN
         JJ1 = IDT(1,J)
      ELSE
         JJ1 = IDT(3,J)
      ENDIF   

      NCV1=I
      VLOCAL(NCV1)=0.D0
      LMMINUS(NCV1)=IDARCYMA(J)   
      NCV1DISP=2+NCV1  
C
C     PRESCRIBED VALUES
C      
      IF(NZADP.GT.0.AND.IBOUND.EQ.0) THEN
	  DO 76 KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
            IF(IDOF.EQ.1) THEN
               NELZAD=NELZAD+1
               IF(IPASSME.EQ.1) THEN
                   LMZADA(NCV1)=1
                   ZADLOCAL(NCV1)=ZADATA1(KK)
                   ZADLOCAL0(NCV1)=ZADATA0(KK)
               ELSE
                   IF(ICONV.EQ.1) THEN
                      LMZADA(NCV1DISP)=1
                      ZADLOCAL(NCV1DISP)=ZADATA1(KK)
                      ZADLOCAL0(NCV1DISP)=ZADATA0(KK)
                   ENDIF
               ENDIF
               GO TO 76
            ENDIF
            IF(IDOF.EQ.3.AND.IPASSME.EQ.2) THEN
               NELZAD=NELZAD+1
               LMZADA(NCV1)=1
               ZADLOCAL(NCV1)=ZADATA1(KK)
               ZADLOCAL0(NCV1)=ZADATA0(KK)
               GO TO 76
            ENDIF
            IF(ICONV.EQ.1.AND.IDOF.EQ.-1) THEN
               NELZAD=NELZAD+1
               LMZADA(NCV1)=-1
               LMMINUS(NCV1)=-1
               VLOCAL(NCV1)=ZADATA1(KK)
               GO TO 76
            ENDIF
	    ENDIF
   76    CONTINUE
	ENDIF
   37 CONTINUE	
C
      LM1D(NCV1)=JJ1
      IF(NTCONS.GT.0) THEN
          LM1D(NCV1)     = IDT(1,J)
          LM1D(NCV1DISP) = IDT(2,J)
      ENDIF

   45 CONTINUE
C
      IF (NSTAC.GT.0.OR.LINTE.GT.0.OR.NELZAD.GT.0) THEN
        IF(IDARCY.GE.0) THEN
            IF(ICONV.EQ.1.AND.IPASSME.EQ.2) THEN
               JJCONV=IDT(1,J)
               IF(JJCONV.GT.0) THEN
                  TT3(NCV1DISP)=TT1P(JJCONV)
               ENDIF
            ENDIF
            IF(JJ1.GT.0) THEN
               IF(IPASSME.EQ.1) THEN                
                  TT3(I)  = TT1P(JJ1)
                  TT30(I) = TT10P(JJ1)
               ELSE                 
                  TT3(I)  = TT1C(JJ1)
                  TT30(I) = TT10C(JJ1)
               ENDIF
	      ELSE IF(LMZADA(I).EQ.1) THEN
              TT3(I)  = ZADLOCAL(I)
              TT30(I) = ZADLOCAL0(I)
            ENDIF
           IF(IPASSME.EQ.2.AND.ICONV.EQ.1.AND.LMZADA(NCV1DISP).EQ.1)THEN
               TT3(NCV1DISP) = ZADLOCAL(NCV1DISP)
               TT30(NCV1DISP) = ZADLOCAL0(NCV1DISP)
            ENDIF
        ENDIF                
	ENDIF
   50 CONTINUE
C     END OF LOOP OVER ELEMENT NODES
C
300   IELX1=NCV1
c
CE  NODE COORDINATES OF ELEMENTS MATRIX
c
      IF(IBOUND.EQ.1) THEN
        SKE(1,2)=-1.D0
        SKE(2,1)=-1.D0
        SKE(1,1)=1.D0
        SKE(2,2)=1.D0 
        GO TO 149
      ENDIF
      K=0
      DO 60 I=1,NBR1
      IF(NEL(NLM1,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM1,I)
      DO 55 J=1,3
   55 CK1(K,J)=CORD(KK,J)
   60 CONTINUE
C
      IF(ICONV.EQ.0) GO TO 66
C
C     ELEMENT MATRIX AND RIGHT-HAND SIDE OF THE CONVECTIVE PART OF THE ELEMENT MATRIX
C     NO INTEGRATION OVER GAUSS POINDS
c
      ELL=0.D0
      DO J=1,3
          DX=CK1(2,J)-CK1(1,J)
          ELL= ELL+DX*DX
      ENDDO
      VIN=0.D0
      ELL=DSQRT(ELL)
      IF(IDEFORM.EQ.1) THEN
           CALL PIPEDIAMETER(TT3(1),TT3(2),EEE,DELTAE0,DIAM1,DIAM2,DIAM,
     1                       ITER,KOR,NLM1)
      ENDIF  
      DIAM22 = DIAM*DIAM
      AREA   = PI4*DIAM*DIAM
      AK     = COEFF*DIAM22*DIAM22/AMI
C    
      IF(IPASSME.EQ.1) THEN  
         SKE(1,1)=AK/ELL
         SKE(1,2)=-SKE(1,1)
         SKE(2,1)=SKE(1,2)
         SKE(2,2)=SKE(1,1)
c
        DO 420 I=1,NCV1
          IF(LM1D(I).EQ.0) GO TO 420
          DO J=1,2
            F3(I)=F3(I)-SKE(I,J)*TT3(J)
          ENDDO
          IF (LMMINUS(I).EQ.-1) THEN
            F3(I)=F3(I)-VLOCAL(I)*PI4*DIAM*DIAM
          ELSEIF (LMMINUS(I).EQ.-2) THEN
            SKE(I,I)=1.D0
            IF(I.EQ.1) THEN
              SKE(1,2)=-1.D0
              SKE(2,1)=0.D0
              SKE(2,2)=0.D0
            ELSE
              SKE(2,1)=-1.D0
              SKE(1,1)=0.D0
              SKE(1,2)=0.D0
            ENDIF   
          ENDIF
  420   CONTINUE 
        GO TO 149
      ENDIF
       
   66 CONTINUE       
C
C      IF(IDIFUSE.EQ.0.AND.IHEAT.EQ.0) GO TO 149
      DCDX = 0.D0
      AKX  = DARCYDIFD(NLM1)
      AKP  = 0.D0
      VELL = 0.D0
      IF(ICONV.EQ.0) THEN
        AKP=0.D0
      ELSE
        VELL=AK*(TT3(3)-TT3(4))/(ELL*AREA)
      ENDIF          
C     
CE    GAUSS POINTS  LOOP
C
      DO 100 NGX=1,NGAU1X
      JR=NREF(NGAU1X) + NGX
      R = XG(JR)
      WT=WGT(JR)
      CALL JACT1(R,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
      RAD=1.
      IF(INDAX.EQ.0) GO TO 281
      RAD=0.
      DO 282 I=1,NCV1
  282 RAD=RAD+H1(I)*CK1(I,1)
CE    VELOCITIES CALCULATION
  281 IF (INDVEL .EQ. 1) THEN
      VX = 0.0
      DO 304 NV=1,NCV1
      KK=NEL(NLM1,NV)
      KK = LF +KK-1
      VX=VX-PJ1(1,NV)*A(KK)
  304 CONTINUE
      WRITE (3,9990) NGX, VX
 9990 FORMAT ('   NG(',I1,')     VX = ',F12.6)
      GO TO 100
      ENDIF
C
CE  TEMPERATURE AT GAUSS POINT
C
      TEMP=0. 
      if(IDARCY.EQ.0.OR.IHEAT.EQ.1) THEN
         DO 65 I=1,NCV1
   65    TEMP=TEMP+H1(I)*TT3(NCV1+I)
      ENDIF
C
      IF(IDARCY.NE.0.AND.IHEAT.EQ.0) GO TO 81
      IF(IPASSME.EQ.2) GO TO 81
C
      IF(NSTAC.EQ.0.OR.KONC.EQ.0) GO TO 70
      IF(NTACV(MAT1D).EQ.0) GO TO 67
      CALL TABF(A(LTABC),A(LNTACV),MAT1D,NMATT,TEMP,CC1,NTA,IND)
      IF(IND.EQ.0) GO TO 70
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) MAT1D,TEMP
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) MAT1D,TEMP
 2005 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA SPEC. TOPLOTA - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6005 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SPECIFIC HEAT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
   67 CALL ANALCF(MAT1D,TEMP,CC1,A(LGUSM))
   70 CONTINUE
      IF(IHEAT.EQ.1) THEN
         call tabdiff(MATERH,AMATFRO,MAT1D,TEMPa,RRO,IND1)
         call tabdiff(MATERH,AMATFSH,MAT1D,TEMPa,CC1,IND2)
         call tabdiff(MATERH,AMATFK,MAT1D,TEMPa,AKX,IND3)
         IF(IND1.GT.0.OR.IND2.OR.IND3) GO TO 182
         CC1=RRO*CC1
         go to 80
      ENDIF
      if(indiffus.EQ.1) then
	  tempa=dabs(temp)
        call tabdiff(MATERP,AMATF,MAT1D,TEMPa,ddifus,IND)
	  akx=ddifus
	  IF(IND.GT.0) GO TO 182
	  IF(IANIZ.NE.0) AKX=AKX*FAX      
	  go to 80
	endif
      IF(KONK.EQ.0) GO TO 80
      IF(IBX.EQ.0) GO TO 77
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,TEMP,AKX,NTA,IND)
      IF(IANIZ.EQ.0) GO TO 182
      AKX=AKX*FAX
  182 IF(IND.EQ.0) GO TO 80
      IF(ISRPS.EQ.0)
     *WRITE(3,2001)  MAT1D,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6001)  MAT1D,TEMP
 2001 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. PROVODJENJA - TOPL.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6001 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'DIFFUSION COEFICIENT - CONCENTRATION,  NO. =',I5/
     11X,'CONCENTRARION,  CONC =',1PD12.4/
     21X,'S T O P'//' CHECK: INPUT DATA FOR DIFFUSION COEFFICIENT'/
     38X,'AND BOUNDARY CONDITIONS FOR INLET AND OUTLET RESERVOIRS')
C
      STOP
   77 CALL ANALKF(MAT1D,TEMP,AKX,AKY,AKZ,A(LTOPM),A(LTMNM))
      IF(IANIZ.EQ.0) GO TO 80
      AKX=AKX*FAX
   80 CONTINUE
      IF(IZIP.NE.2.OR.MAXTQE.EQ.1) GO TO 81
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,TEMP,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 81
      IF(ISRPS.EQ.0)
     *WRITE(3,2011) IQE1,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6011) IQE1,TEMP
 2011 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPLOTNOG IZVORA (PONORA)   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6011 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
CE  ELEMENT MATRICES
   81 WDT=WT*DET1*RAD*AREA
      IF(IDARCY.NE.0.OR.IPASSME.EQ.2) GO TO 400
      K=0
      DO 85 I=1,NCV1
      DO 83 J=I,NCV1
      K=K+1
      IF(NSTAC.EQ.0) GO TO 87
      HH1= H1(I)*H1(J)*WDT
      EL(K)=EL(K)+CC1*HH1
   87 IF(INDSK.EQ.0) GO TO 83
      PJX=PJ1(1,I)*PJ1(1,J)
      HP(K) = HP(K) +(AKX*PJX)*WDT   
   83 CONTINUE
      IF(IQE1.EQ.0) GO TO 85
CE  CALCULATION OF RIGHT-SIDE VECTOR
      F3(I)=F3(I)+H1(I)*WDT*QQ1
   85 CONTINUE
c     IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
      IF(LINTE.EQ.0) GO TO 100
C     IF(LINTE.EQ.0) GO TO 100
      TBK(1)=0.
      itestdarcy=0
      if(itestdarcy.eq.0) then
         DO 151 I=1,NCV1
  151    TBK(1)=TBK(1)+PJ1(1,I)*TT3(I)
      else
         DO I=1,NCV1
           TBK(1)=TBK(1)+PJ1(1,I)*TT3(I+ncv1)
         enddo
      endif
      TBK(1)=TBK(1)*AKX
      DO 152 I=1,NCV1
  152 F3(I)=F3(I)-PJ1(1,I)*TBK(1)*WDT
      GO TO 100
C
C     DEO KOJI URADJEN ZA ELEMENT CEVI (IDARCY.NE.0)
C
  400 CONTINUE
      AKTW = CC1*AKTT*WDT
      AKDW = AKX*WDT
      AKVW = VELL*WDT
      DO 405 I=1,NCV1
      DO 405 J=1,NCV1
        SKEM(I,J) = SKEM(I,J)+H1(I)*H1(J)*AKTW
        SKED(I,J) = SKED(I,J)+(PJ1(1,I)*AKDW+H1(I)*AKVW)*PJ1(1,J)
  405 CONTINUE
 
  100 CONTINUE
C---------------------------------------- KRAJ PETLJE PO GAUSOVIM TACKAMA
C
C -----  PAKOVANJE U SKE I DESNA STRANA ZA ELEMENT CEVI
C
      IF(IDARCY.EQ.0) GO TO 450 
C
      DO 430 I=1,2
      DO 430 J=1,2
         SKE(I,J)=SKE(I,J)+SKEM(I,J)+SKED(I,J)
C         SKE(II,J)=SKE(II,J)+SKEP(I,J)
         F3(I)=F3(I)-SKEM(I,J)*(TT3(J)-TT30(J))-SKED(I,J)*TT3(J)
c     1          -SKEP(I,J)*TT3(J)
  430 CONTINUE
      GO TO 149
C------------------   KRAJ ZA CEV  ------------------    
  450 CONTINUE
      IF (INDVEL .EQ. 1) GO TO 200
      IF(NSTAC.EQ.0) GO TO 253
      DO 105 I=1,MEL1D
  105 EL(I)=EL(I)/DT
  253 IF(INDSK.EQ.0) GO TO 140
      DO 115 I=1,MEL1D
  115 HP(I)=HP(I)+EL(I)
CE  CORECTION OF RIGHT-SIDE VECTOR AFTER FIRST PASS
  140 K=0
      DO 121 I=1,NCV1
      DO 121 J=I,NCV1
      K=K+1
      SKE(I,J)=EL(K)
  121 SKE(J,I)=SKE(I,J)
      IF(LINTE.EQ.0) GO TO 123
      DO 122 I=1,NCV1
      IF(LM1(I).EQ.0) GO TO 122
      DO 124 J=1,NCV1
      IF(LM1(J).EQ.0) GO TO 124
      F3(I)=F3(I)-SKE(I,J)*TT32(J)
  124 CONTINUE
  122 CONTINUE
  123 IF(LINTE.EQ.1) GO TO 141
      DO 132 I=1,NCV1
      IF(LM1(I).EQ.0) GO TO 132
      DO 134 J=1,NCV1
      IF(LM1(J).EQ.0) GO TO 134
      F3(I)=F3(I)+SKE(I,J)*TT30(J)
  134 CONTINUE
  132 CONTINUE
  141 CONTINUE

  149 CONTINUE
c
      IF(INDFLUX.EQ.1) GO TO 137
C
      IF(NHP.EQ.0.AND.NTOK.EQ.0.AND.NQP.EQ.0.AND.NHR.EQ.0) GO TO 135
CE    INTEGRALS OVER BORDER POINTS OF ELEMENT
      CALL INTAB1(A(LNG1D),A(LNELG1),A(LNEL1D),A(LNTAHP),A(LHP1),A(LHK1)
     1,A(LSKE1),A(LNTAHR),A(LHR1),A(LFOHR))
CE    INSERTING MATRIX HP AND VECTOR F3 INTO SYSTEM
  135 CONTINUE
c      write(3,2340) NLM1,NDES,JEDN,LM1D(1),LM1D(2)
 2340 FORMAT(/' PIPE ELEMENT:  NLM1,NDES,JEDN,LM1D(1),LM1D(2)=',
     1                 3I5,3X,2I5)
c      WRITE(3,2341)F3(1),F3(2)
 2341 FORMAT(' F3(1),F3(2)=',2D13.5/ ' SKE:')
c      WRITE(3,2342)((SKE(I,J),J=1,2),I=1,2) 
 2342 FORMAT(2D13.5)      
C
      NDIM=2
      IF(IMUMPS.EQ.0) THEN
        IF(ISYMM.EQ.1)THEN
           CALL MATSTE (A(LSK),A(LMAXA),A(LF),HP,F3,LM1,NDES,INDSK)
        ELSE
           CALL ADDSTF(A(LALEVO),A(LSILE),A(LDESNO),SKE,F3,A(LMAXA),
     1                   LM1D,NDES,1)
        ENDIF
      ELSE
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,LM1D,NDES)
#else
        CALL sparseassembler_addelemmatrix(NDES,LM1D,SKE)
#endif
        CALL SPAKDE (A(LFORCE),F3,LM1D,NDES,JEDN)  
      ENDIF    
C
  137 CONTINUE            
  200 CONTINUE
C	     
      RETURN
      END
C=======================================================================
c
C=======================================================================
      SUBROUTINE INTEB1DARCY(IDT,CORD,TCONS,NTAKV,NTACV,TT1,TT2,NEL,
     1 NQ,MATV,EL,HP,HK,SKE,TT0,IBFK,FAKP,HR,MATERP,AMATF,NZADJ,
     2 ZADFM,DARCYD,DARCYMI,DARCYDIFD,IDARCYMA,ICONNMA,SEFF1D,PERMEA,
     3 IEL2D3D,NODEIN,NODEOUT,FLUX,MATERH,AMATFRO,AMATFSH,AMATFK,
     4 DENSITY,EMODULUS,DELTAE,LAMDAV,NDES,NDIMIDT,IDARCY,ICONECTIV,
     5 IBOUND,NZADIN,NZADOUT,MAT1DD,INDFLUXE,IDEFORM,ILAMDA,IDTCD,
     6 IACTIVE,ISMEARED)          
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON A(1)
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA1/ LNEL1D,LMAT1D,LNQ1D,LITG1D,LIP1CV,LNG1D,LNELG1,
     1LEL1,LHP1,LHK1,LSKE1,LDEL1,LDEHP1,LDEHK1,LHR1
      COMMON /EL1K03/NMAT1D,MAT1D,NE1D,NGAU1X,NP1DMX,NND1,IELX1,NLM1,
     1IPR1DC,IPTG1,N1DGU,MEL1D,IQE1,NBR1,NCV1,LM1(3),IDEL1(1),NOD1(1)
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON/REAL1D/ CK1(3,3),P1(1,3),PJ1(1,3),XJ1(1,3),H1(3),
     1DET1,F3(6),TT3(6),TT32(6),TT30(6)
      COMMON /SRPSKI/ ISRPS
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ          
	common/elemmodels/modelel(20),ngele                 
	COMMON/MESSAGES/MESSAGE
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON/UNSYMMETRIC/LALEVO,LDESNO,LSILE,ISYMM
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP, 
     3ITOR,INDVEL,INDFL
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10)
	COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
C
      DIMENSION IDT(NDIMIDT,NPT),CORD(NPT,3),TCONS(*),NTAKV(*),NTACV(*),
     1TT1(JEDN),NEL(NE1D,2),MATV(*),EL(*),HP(*),HK(*),SKE(NDES,NDES),
     2NQ(*),TT2(*),TT0(*),IBFK(NMATT,*),FAKP(NMATT,*),
     3TBK(1),HR(*)        
      DIMENSION XG(15),WGT(15),NREF(6)
      DIMENSION MATERP(NUMMAT),AMATF(NUMMAT,2,*),NZADJ(3,NZADP),
     1          ZADFM(NZADP),IDTCD(2,NPT),IACTIVE(4)
      DIMENSION DARCYD(2,NE1D),DARCYMI(NE1D),DARCYDIFD(NE1D),
     1          IDARCYMA(NPT),ICONNMA(4,NE1D),SEFF1D(5,NE1D),
     2          PERMEA(NE1D),IEL2D3D(MAXCONNP2,NE1D),NODEIN(NZADIN),
     3          NODEOUT(NZADOUT),FLUX(NPT),DENSITY(NE1D),EMODULUS(NE1D),
     4          DELTAE(NE1D),LAMDAV(NPT)
      DIMENSION MATERH(NMATTHEAT),AMATFRO(NMATTHEAT,2,*),
     2          AMATFSH(NMATTHEAT,2,*),AMATFK(NMATTHEAT,2,*)
      DIMENSION ZADLOCAL(6),ZADLOCAL0(6),ZADLOCAL32(6),LMZADA(6),LM1D(6)
     1          ,LMMINUS(6),VLOCAL(6),SKEM(2,2),SKEP(2,2),
     2          SKED(2,2),AMASSA(2,2),EM(2,2)
C
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
C
      IF(INDFLUXE.EQ.1) RETURN
C
      IF(IZIP.EQ.2) GO TO 15
      IF(NQE.NE.1) GO TO 15
      CALL TABF(A(LQEFN),A(LNTAQE),NQE,NQE,VREME,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 15
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) NQE,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) NQE,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPL. IZVOR-VREME,  BR.=',I3/
     11X,'ARGUMENT VREME= ',F10.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME = ',1PD12.4)
      STOP
   15 CONTINUE
C
      ICONVV = ICONV
      IDIFFHEAT = 0
      IF(IDIFUSE.NE.0.OR.IHEAT.NE.0) IDIFFHEAT = 1
C
      PI     = 4.*DATAN(1.D0)
      PI4    = PI/4.
      COEFF  = PI/128.
      DDARCY = 0.D0
      iizlaz = 3
      VBR    = 1.0D35
      CC1=1.D0
      AKTT = 1./DT
      IDPRESSE=0
      IF(IACTIVE(3).EQ.1) THEN
        IDPRESSE=3
        IF(IACTIVE(4).EQ.0) IDPRESSE=2
      ENDIF
      IDCONCE=0    
      IF(IACTIVE(4).EQ.1) THEN
        IDCONCE=4
        IF(IACTIVE(3).EQ.0) IDCONCE=2
      ENDIF
C
C     LOOP OVER ELEMENTS
C
      DO 200 NLM1= 1,NE1D

      IF (ITOR .EQ. 3)  WRITE(3,5100) NLM1
 5100 FORMAT(' ELEMENT....................',I5)
      IF (INDVEL .EQ. 1) GO TO 300
      DO 20 I = 1,MEL1D
C      IF(INDSK.EQ.0) GO TO 21
      HP(I) = 0.
      HK(I) = 0.
      HR(I) = 0.
C   21 IF(NSTAC.EQ.0) GO TO 20
      EL(I) = 0.
   20 CONTINUE
      DO 17 I=1,6
      TT3(I) = 0.
      TT32(I) = 0.
      TT30(I) = 0.
      IF(I.LE.3)LM1(I)=0
   17 F3(I)=0.
      DO I=1,6
        ZADLOCAL(I)=0.D0
        ZADLOCAL0(I)=0.D0
        ZADLOCAL32(I)=0.D0
	  LMZADA(I)=0
	  LM1D(I)=0
	  LMMINUS(I)=0
      ENDDO
C     IF(NSTAC.EQ.0) GO TO 23
      CALL CLEAR(SKE,NDES*NDES)
      CALL CLEAR(SKEM,4)
      CALL CLEAR(SKEP,4)
      CALL CLEAR(SKED,4)
      CALL CLEAR(AMASSA,4)
C
   23 IF(NMAT1D.GT.1.OR.indiffus.EQ.1.OR.IHEAT.EQ.1) MAT1D=MATV(NLM1)
      IQE1=0
      IF(NQE.GT.0) IQE1=NQ(NLM1)
      ARG=0.
	IF(indiffus.EQ.1.OR.iDARCY.NE.0) THEN
	  CC1=1.D0
	  GO TO 30 
	ENDIF
      IF(NSTAC.EQ.0.OR.KONC.EQ.1) GO TO 25
      CALL TABF(A(LTABC),A(LNTACV),MAT1D,NMATT,ARG,CC1,NTA,IND)
   25 IF(IANIZ.EQ.0) GO TO 188
      FAX=FAKP(MAT1D,1)
  188 IBX=IBFK(MAT1D,1)
      IF(KONK.EQ.1) GO TO 30
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,ARG,AKX,NTA,IND)
      IF(IANIZ.EQ.0) GO TO 30
      AKX=AKX*FAX
   30 IF(IQE1.EQ.0.OR.NQE.EQ.1) GO TO 44
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,VREME,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 44
      WRITE(3,2000) IQE1,VREME
      STOP
   44 IF(IZIP.NE.2.OR.MAXTQE.GT.1) GO TO 40
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,ARG,QQ1,NTA,IND)
      
   40 NCV1   = 0
      NND1   = 0
	NELZAD = 0
	
	IF(ICONECTIV.EQ.0) THEN
        DIAM1  = DARCYD(1,NLM1)
        DIAM2  = DARCYD(2,NLM1)
        DIAM   = 0.5*(DIAM1+DIAM2)
        AREA   = PI4*DIAM*DIAM
        AMI    = DARCYMI(NLM1)
        DDIF   = DARCYDIFD(NLM1)
        EEE    = 0.D0
        DELTAE0= 0.D0
        IF(IDEFORM.EQ.1) THEN
          EEE = EMODULUS(NLM1)
          DELTAE0 = DELTAE(NLM1)
        ENDIF
      ENDIF
C	
C     LOOP OVER NODES ---------------
C
      KKIN  = 0
      KKOUT = 0
      DO 50 I=1,NBR1
      IF(I.LE.2) GO TO 41
      IDEL1(I-2)=0
      IF(NEL(NLM1,I).EQ.0) GO TO 50
      NND1=NND1+1
      NOD1(NND1)=I
      IDEL1(I-2)=1
   41 J=NEL(NLM1,I)
      NODE1=NEL(NLM1,1)
      NODE2=NEL(NLM1,2)

      IF(ISMEARED.LE.1) THEN
        JJ1 = IDT(1,J)
        JJ2 = IDT(2,J)
      ELSE
        JJ1=0
        IF(ICONV.EQ.1)JJ1=IDT(1,J)
        JJ2=0
        IF(INDIFFUS.EQ.1)JJ2=IDT(2,J)
      ENDIF
      
      NCV1=NCV1+1
      VLOCAL(NCV1)=0.D0
      LMMINUS(NCV1)=IDARCYMA(J)
      NCV1DISP=NBR1+NCV1
C
C     PRESCRIBED VALUES
C      
      IF(NZADP.GT.0.AND.IBOUND.EQ.0) THEN
	  DO 76 KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
	      IF(ISMEARED.GT.1) THEN
	         IF((IDOF.GT.0.AND.IDOF.GT.2).OR.
     1           (IDOF.LT.0.AND.IDOF.NE.-1))  GO TO 76
            ENDIF
            NELZAD=NELZAD+1
            NF=NZADJ(3,KK)
            FAK = ZADFM(KK)
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,IND)
            IF(IND.NE.0) THEN    
              WRITE(3,6015) NF,VREME
              STOP
            ENDIF
            TIMET=VREME-DT
            IF(TIMET.LT.0) TIMET=0.D0
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,TIMET,FTT,NTMX,
     1                IND)
            IF(IND.NE.0) THEN    
              WRITE(3,6016) NF,TIMET
              STOP
            ENDIF
            
            IF(IDOF.EQ.1) THEN              ! prescibed pressure
              LMZADA(NCV1)     = 1
              ZADLOCAL(NCV1)   = FT*FAK
              ZADLOCAL0(NCV1)  = FTT*FAK
              ZADLOCAL32(NCV1) = ZADLOCAL(NCV1)-ZADLOCAL0(NCV1)
            ELSEIF(IDOF.EQ.2) THEN  ! prescibed concentration OR HEAT
              FTFAK=FT*FAK
              FTTFAK=FTT*FAK
              LMZADA(NCV1DISP)     = 1
              ZADLOCAL(NCV1DISP)   = FTFAK
              ZADLOCAL0(NCV1DISP)  = FTTFAK
              ZADLOCAL32(NCV1DISP) = ZADLOCAL(NCV1DISP)-                
     1                              ZADLOCAL0(NCV1DISP)
              IF(IHEAT.EQ.1.AND.ICONECTIV.EQ.1) THEN
                 DO K=3,4
                   LMZADA(K)=1
                   ZADLOCAL(K)=FTFAK
                   ZADLOCAL0(K)=FTTFAK
                   ZADLOCAL32(K)=ZADLOCAL(K)-ZADLOCAL0(K)
                 ENDDO
              ENDIF
            ELSEIF((IDOF.EQ.3.AND.ISMEARED.LE.1).OR.
     1            (IDOF.EQ.-1.AND.ISMEARED.GT.1)) THEN          ! outlet velocity
                  VLOCAL(NCV1) = FT*FAK
            ENDIF
	    ENDIF
   76    CONTINUE
 6015   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  VREME =',1PD12.4)
 6016   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  TIMET=VREME-DT =',1PD12.4)
	ENDIF
   37 CONTINUE	
C
      LM1D(NCV1)=JJ1
      LM1D(NCV1DISP)=JJ2
      lm1(ncv1)=jj2
      IF(NTCONS.GT.0) THEN
        LM1D(NCV1)     = IDT(1,J)
        LM1D(NCV1DISP) = IDT(2,J)
      ENDIF
      IF(NTCONS.EQ.0) GO TO 45
      IF(IDT(1,J).LE.0.AND.IDT(2,J).LE.0) GO TO 42
      IF(NSTAC.EQ.0.AND.LINTE.EQ.0) GO TO 50
C
      DO KK=1,2
         K=IDT(KK,J)
         IF(K.GT.0) THEN
          KLOC = (KK-1)*NBR1+NCV1
          TT3(KLOC)  = TT1(K)
          TT32(KLOC) = TT2(K)
            TT30(KLOC) = TT0(K)
         ENDIF
      ENDDO
C
      GO TO 50
   42 TT3(NCV1)  = TCONS(J)
      TT32(NCV1) = TCONS(J)
      TT30(NCV1) = TCONS(J)
      GO TO 50
   45 CONTINUE
C
      IF (NSTAC.GT.0.OR.LINTE.GT.0.OR.NELZAD.GT.0) THEN
        IF(IDARCY.GE.0) THEN
          DO KK=1,2
            JJ=IDT(KK,J)
            KLOC=(KK-1)*NBR1+NCV1
            IF(JJ.GT.0) THEN
              TT3(KLOC)  = TT1(JJ)
              TT32(KLOC) = TT2(JJ)
              TT30(KLOC) = TT0(JJ)
              IF(ITER.EQ.0) TT32(KLOC)=0.D0
	      ELSE IF(LMZADA(KLOC).EQ.1) THEN
              TT3(KLOC)  = ZADLOCAL(KLOC)
              TT32(KLOC) = ZADLOCAL32(KLOC)
              TT30(KLOC) = ZADLOCAL0(KLOC)
            ENDIF
          ENDDO
        ENDIF                
	ENDIF
   50 CONTINUE
C     END OF LOOP OVER ELEMENT NODES
C
      IF(ILAMDA.EQ.1) THEN
         DO I=1,2
            NODE=NEL(NLM1,I)
            ILAM=LAMDAV(NODE)
            IF(ILAM.GT.0) THEN
               LM1D(4+I)=ILAM
               TT3(4+I)=TT1(ILAM)
            ENDIF
         ENDDO
      ENDIF
C
300   IELX1=NCV1
c
CE  NODE COORDINATES OF ELEMENTS MATRIX
c
      IF(IBOUND.EQ.1) THEN
        SKE(1,2)=-1.D0
        SKE(2,1)=-1.D0
        SKE(1,1)=1.D0
        SKE(2,2)=1.D0 
        IF(IDIFUSE.NE.0) THEN
          SKE(3,4)=-1.D0
          SKE(4,3)=-1.D0
          SKE(3,3)=1.D0
          SKE(4,4)=1.D0       
        ENDIF
        GO TO 149
      ENDIF
      K=0
      DO 60 I=1,NBR1
      IF(NEL(NLM1,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM1,I)
      DO 55 J=1,3
   55 CK1(K,J)=CORD(KK,J)
   60 CONTINUE
C
      IF(ICONV.EQ.0.AND.ICONECTIV.EQ.0) GO TO 66
C
C     ELEMENT MATRIX AND RIGHT-HAND SIDE OF THE CONVECTIVE PART OF THE ELEMENT MATRIX
C     NO INTEGRATION OVER GAUSS POINDS
c
      IF(ICONECTIV.EQ.0.AND.ICONV.NE.0) THEN
        ELL=0.D0
        DO J=1,3
          DX=CK1(2,J)-CK1(1,J)
          ELL= ELL+DX*DX
        ENDDO
        VIN=0.D0
        ELL=DSQRT(ELL)
        IF(IDEFORM.EQ.1) THEN
           CALL PIPEDIAMETER(TT3(1),TT3(2),EEE,DELTAE0,DIAM1,DIAM2,DIAM,
     1                       ITER,KOR,NLM1)
        ENDIF
        
        DIAM22 = DIAM*DIAM
        AREA   = PI4*DIAM*DIAM
        AK     = COEFF*DIAM22*DIAM22/AMI
C      
        SKE(1,1)=AK/ELL
        SKE(1,2)=-SKE(1,1)
        SKE(2,1)=SKE(1,2)
        SKE(2,2)=SKE(1,1)
      ENDIF
c
      IF(ICONECTIV.NE.0) THEN
        IGROUP  = ICONNMA(1,NLM1)
        NEL1    = ICONNMA(2,NLM1)
        NEL2    = ICONNMA(3,NLM1)
        NET11   = NELEDAT(IGROUP,2)
        LNEL1DA = NELEDAT(IGROUP,7)
        IWALLD  = NELEDAT(IGROUP,26)
C         CALL IDENTIFYNODE(A(LNEL1DA),NODE1,NODE2,NET11,NEL1,NEL2,II)
        ICONTIN = NEL(NLM1,2)            !NODE IN CONTINNUM
        II1=2
        ITOPIPE = NEL(NLM1,1) 
C        
        IF(ICONVV.NE.0) THEN
          JJCONTIN = IDT(1,ICONTIN)
 
          PRESSA     = dabs(TT1(JJCONTIN)) 
          IGROUP2D3D = ICONNMA(4,NLM1)
          MAT2DCONV = NELEDAT(IGROUP2D3D,5)      
          call tabdiff(A(LMATCONV),A(LMATFUNC),MAT2DCONV,PRESSA,
     1       DDARCY,IND)
          IF(IND.NE.0) THEN
            WRITE(3,6021)  MAT2DCONV,PRESSA
 6021       FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1      1X,'DARCY COEFFICINT-PRESSURE,  NO. =',I5/
     1      1X,'ABSOLUTE VALUE OF PRESSURE =',1PD12.4/
     2      1X,'S T O P IN INTEB1DARCY1')
            STOP
          ENDIF
          AKK = DDARCY*SEFF1D(1,NLM1)
          SKE(1,1) =  AKK
          SKE(1,2) = -SKE(1,1)
          SKE(2,1) = -SKE(1,1)
          SKE(2,2) =  SKE(1,1)
        ENDIF
c
        IF(IDIFFHEAT.NE.0) THEN
          JJCONTIN=IDT(2,ICONTIN)

          IGROUP2D3D=ICONNMA(4,NLM1)
          MAT2DdIF=NELEDAT(IGROUP2D3D,6)
          IF(JJCONTIN.GT.0) CONC1=TT1(JJCONTIN)
          IF(IHEAT.EQ.1)CONC1=TT3(3)
          CONCA=dabs(TT1(JJCONTIN))
          IF(IWALLD.EQ.0) THEN
             call tabdiff(A(LMATDIF),A(LMATFUND),MAT2DdIF,CONCA,DDIFUS,
     1       IND)
             IF(IND.NE.0) THEN      
               WRITE(3,6022)  MAT2DdIF,CONCA
 6022          FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1         1X,'DIFFUSION COEFFICINT-CONCENTRATION,  NO. =',I5/
     1         1X,'ABSOLUTE VALUE OF CONCENTRATION =',1PD12.4/
     2         1X,'S T O P IN INTEB1DARCY1')
               STOP
             ENDIF
             AKK=DDIFUS*SEFF1D(1,NLM1)
          ELSE
             AKK=SEFF1D(4,NLM1)
          ENDIF
          SKE(3,3)=AKK
          SKE(3,4)=-AKK
          SKE(4,3)=-AKK
          SKE(4,4)=AKK
          
          DT3 = 3.*DT
          DT6 = 6.*DT
          EMC = SEFF1D(5,NLM1)
          EM(1,1) = EMC/DT3
          EM(1,2) = EMC/DT6
          EM(2,2) = EM(1,1)
          EM(2,1) = EM(1,2)
          
          DO 2 I=1,2
            DO 2 J=1,2
             SKE(2+I,2+J)=SKE(2+I,2+J)+EM(I,J)
    2     CONTINUE
        
        ENDIF
      ENDIF
c
      IF(ICONVV.NE.0) THEN
        DO 420 I=1,NCV1
          IF(LM1D(I).EQ.0) GO TO 420
          DO J=1,2
            F3(I)=F3(I)-SKE(I,J)*TT3(J)
          ENDDO
          IF (LMMINUS(I).EQ.-1) THEN
            F3(I)=F3(I)-VLOCAL(I)*PI4*DIAM*DIAM
          ELSEIF (LMMINUS(I).EQ.-2) THEN
            SKE(I,I)=1.D0
            IF(I.EQ.1) THEN
              SKE(1,2)=-1.D0
              SKE(2,1)=0.D0
              SKE(2,2)=0.D0
            ELSE
              SKE(2,1)=-1.D0
              SKE(1,1)=0.D0
              SKE(1,2)=0.D0
            ENDIF   
          ENDIF
  420   CONTINUE
      ENDIF
        
      IF(ICONECTIV.NE.0) THEN
        IF(IDIFUSE.NE.0.AND.IHEAT.EQ.0) THEN
          DO 422 I=3,4  
            IF(LM1D(I).EQ.0) GO TO 422
            DO J=3,4
              F3(I)=F3(I)-SKE(I,J)*TT3(J)+EM(I,J)*TT30(J)
            ENDDO
  422     CONTINUE
        ENDIF 
C
C       CORRECTION OF F3 FOR FICTITIOUS ELEMENT DUE TO PERMEABILITY AND RADIAL CONVECTION
C     
        IF(ICONV.NE.0.OR.IDIFUSE.NE.0) THEN
          SEFF      = SEFF1D(1,NLM1) 
          CPERMEA   = SEFF1D(2,NLM1)
          CLEAK     = SEFF1D(3,NLM1) 
          NETIP2D3D = NELEDAT(IGROUP2D3D,1)
          NE2D3D    = NELEDAT(IGROUP2D3D,2)
          LNEL2D    = NELEDAT(IGROUP2D3D,7)
          NDIM=4
          IF(NETIP2D3D.EQ.3)NDIM=8
          LPERMEA    = NELEDAT(IGROUP,20)
          NET11D     = NELEDAT(IGROUP,2)
          LNEL11D    = NELEDAT(IGROUP,7)
          LELEAK     = NELEDAT(IGROUP,25)  
          CALL CORRECTDIFF3(SKE,F3,TT3,IDT,NEL,TT1,IEL2D3D,NZADJ,ZADFM,
     1       A(LNEL2D),A(LNEL11D),CORD,NE2D3D,NETIP2D3D,NDIM,NET11D,
     2       AKK,NZADP,VREME,JJCONTIN,NODE1,NODE2,NEL1,NEL2,ICONTIN,
     3       ITOPIPE,JEDN,NE1D,ICONV,NLM1,II1,SEFF,CPERMEA,CLEAK,NPT,
     4       DDARCY,IGROUP,MAXCONNP,MAXCONNP2,IIZLAZ,NDES,IHEAT,IWALLD,
     5       IDIFUSE,NDIMIDT)
        ENDIF
        IF(INDFLUX.EQ.1) GOTO 137 
        GOTO 135
      ENDIF
C
  66  CONTINUE
C
      IF(IDIFUSE.EQ.0.AND.IHEAT.EQ.0) GO TO 149
      DCDX = 0.D0
      AKX  = DARCYDIFD(NLM1)
      AKP  = 0.D0
      VELL = 0.D0
      IF(ICONV.EQ.0) THEN
        AKP=0.D0
      ELSE
        VELL=AK*(TT3(1)-TT3(2))/(ELL*AREA)
      ENDIF          
C     
CE    GAUSS POINTS  LOOP
C
      DO 100 NGX=1,NGAU1X
      JR=NREF(NGAU1X) + NGX
      R = XG(JR)
      WT=WGT(JR)
      CALL JACT1(R,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
      RAD=1.
      IF(INDAX.EQ.0) GO TO 281
      RAD=0.
      DO 282 I=1,NCV1
  282 RAD=RAD+H1(I)*CK1(I,1)
CE    VELOCITIES CALCULATION
  281 IF (INDVEL .EQ. 1) THEN
      VX = 0.0
      DO 304 NV=1,NCV1
      KK=NEL(NLM1,NV)
      KK = LF +KK-1
      VX=VX-PJ1(1,NV)*A(KK)
  304 CONTINUE
      WRITE (3,9990) NGX, VX
 9990 FORMAT ('   NG(',I1,')     VX = ',F12.6)
      GO TO 100
      ENDIF
C
CE  TEMPERATURE AT GAUSS POINT
C
      TEMP=0. 
      if(IDARCY.EQ.0.OR.IHEAT.EQ.1) THEN
         DO 65 I=1,NCV1
   65    TEMP=TEMP+H1(I)*TT3(NCV1+I)
      ENDIF
C
      IF(IDARCY.NE.0.AND.IHEAT.EQ.0) GO TO 81
C
      IF(NSTAC.EQ.0.OR.KONC.EQ.0) GO TO 70
      IF(NTACV(MAT1D).EQ.0) GO TO 67
      CALL TABF(A(LTABC),A(LNTACV),MAT1D,NMATT,TEMP,CC1,NTA,IND)
      IF(IND.EQ.0) GO TO 70
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) MAT1D,TEMP
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) MAT1D,TEMP
 2005 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA SPEC. TOPLOTA - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6005 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SPECIFIC HEAT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
   67 CALL ANALCF(MAT1D,TEMP,CC1,A(LGUSM))
   70 CONTINUE
      IF(IHEAT.EQ.1) THEN
         call tabdiff(MATERH,AMATFRO,MAT1D,TEMPa,RRO,IND1)
         call tabdiff(MATERH,AMATFSH,MAT1D,TEMPa,CC1,IND2)
         call tabdiff(MATERH,AMATFK,MAT1D,TEMPa,AKX,IND3)
         IF(IND1.GT.0.OR.IND2.OR.IND3) GO TO 182
         CC1=RRO*CC1
         go to 80
      ENDIF
      if(indiffus.EQ.1) then
	  tempa=dabs(temp)
        call tabdiff(MATERP,AMATF,MAT1D,TEMPa,ddifus,IND)
	  akx=ddifus
	  IF(IND.GT.0) GO TO 182
	  IF(IANIZ.NE.0) AKX=AKX*FAX      
	  go to 80
	endif
      IF(KONK.EQ.0) GO TO 80
      IF(IBX.EQ.0) GO TO 77
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,TEMP,AKX,NTA,IND)
      IF(IANIZ.EQ.0) GO TO 182
      AKX=AKX*FAX
  182 IF(IND.EQ.0) GO TO 80
      IF(ISRPS.EQ.0)
     *WRITE(3,2001)  MAT1D,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6001)  MAT1D,TEMP
 2001 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. PROVODJENJA - TOPL.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6001 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'DIFFUSION COEFICIENT - CONCENTRATION,  NO. =',I5/
     11X,'CONCENTRARION,  CONC =',1PD12.4/
     21X,'S T O P'//' CHECK: INPUT DATA FOR DIFFUSION COEFFICIENT'/
     38X,'AND BOUNDARY CONDITIONS FOR INLET AND OUTLET RESERVOIRS')
C
      STOP
   77 CALL ANALKF(MAT1D,TEMP,AKX,AKY,AKZ,A(LTOPM),A(LTMNM))
      IF(IANIZ.EQ.0) GO TO 80
      AKX=AKX*FAX
   80 CONTINUE
      IF(IZIP.NE.2.OR.MAXTQE.EQ.1) GO TO 81
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,TEMP,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 81
      IF(ISRPS.EQ.0)
     *WRITE(3,2011) IQE1,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6011) IQE1,TEMP
 2011 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPLOTNOG IZVORA (PONORA)   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6011 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
CE  ELEMENT MATRICES
   81 WDT=WT*DET1*RAD*AREA
      IF(IDARCY.NE.0) GO TO 400
      K=0
      DO 85 I=1,NCV1
      DO 83 J=I,NCV1
      K=K+1
      IF(NSTAC.EQ.0) GO TO 87
      HH1= H1(I)*H1(J)*WDT
      EL(K)=EL(K)+CC1*HH1
   87 IF(INDSK.EQ.0) GO TO 83
      PJX=PJ1(1,I)*PJ1(1,J)
      HP(K) = HP(K) +(AKX*PJX)*WDT   
   83 CONTINUE
      IF(IQE1.EQ.0) GO TO 85
CE  CALCULATION OF RIGHT-SIDE VECTOR
      F3(I)=F3(I)+H1(I)*WDT*QQ1
   85 CONTINUE
c     IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
      IF(LINTE.EQ.0) GO TO 100
C     IF(LINTE.EQ.0) GO TO 100
      TBK(1)=0.
      itestdarcy=0
      if(itestdarcy.eq.0) then
         DO 151 I=1,NCV1
  151    TBK(1)=TBK(1)+PJ1(1,I)*TT3(I)
      else
         DO I=1,NCV1
           TBK(1)=TBK(1)+PJ1(1,I)*TT3(I+ncv1)
         enddo
      endif
      TBK(1)=TBK(1)*AKX
      DO 152 I=1,NCV1
  152 F3(I)=F3(I)-PJ1(1,I)*TBK(1)*WDT
      GO TO 100
C
C     DEO KOJI URADJEN ZA ELEMENT CEVI (IDARCY.NE.0)
C
  400 CONTINUE
      AKTW = CC1*AKTT*WDT
      AKDW = AKX*WDT
      AKVW = VELL*WDT
      DO 405 I=1,NCV1
      DO 405 J=1,NCV1
        SKEM(I,J) = SKEM(I,J)+H1(I)*H1(J)*AKTW
        SKED(I,J) = SKED(I,J)+(PJ1(1,I)*AKDW+H1(I)*AKVW)*PJ1(1,J)
  405 CONTINUE
 
  100 CONTINUE
C---------------------------------------- KRAJ PETLJE PO GAUSOVIM TACKAMA
C
C -----  PAKOVANJE U SKE I DESNA STRANA ZA ELEMENT CEVI
C
      IF(IDARCY.EQ.0) GO TO 450 
C
      DO 430 I=1,2
         II=NCV1+I
      DO 430 J=1,2
         JJ=NCV1+J
         SKE(II,JJ)=SKE(II,JJ)+SKEM(I,J)+SKED(I,J)
C         SKE(II,J)=SKE(II,J)+SKEP(I,J)
         F3(II)=F3(II)-SKEM(I,J)*(TT3(JJ)-TT30(JJ))-SKED(I,J)*TT3(JJ)
c     1          -SKEP(I,J)*TT3(J)
  430 CONTINUE
      GO TO 149
C------------------   KRAJ ZA CEV      
  450 CONTINUE
      IF (INDVEL .EQ. 1) GO TO 200
      IF(NSTAC.EQ.0) GO TO 253
      DO 105 I=1,MEL1D
  105 EL(I)=EL(I)/DT
  253 IF(INDSK.EQ.0) GO TO 140
      DO 115 I=1,MEL1D
  115 HP(I)=HP(I)+EL(I)
CE  CORECTION OF RIGHT-SIDE VECTOR AFTER FIRST PASS
  140 K=0
      DO 121 I=1,NCV1
      DO 121 J=I,NCV1
      K=K+1
      SKE(I,J)=EL(K)
  121 SKE(J,I)=SKE(I,J)
      IF(LINTE.EQ.0) GO TO 123
      DO 122 I=1,NCV1
      IF(LM1(I).EQ.0) GO TO 122
      DO 124 J=1,NCV1
      IF(LM1(J).EQ.0) GO TO 124
      F3(I)=F3(I)-SKE(I,J)*TT32(J)
  124 CONTINUE
  122 CONTINUE
  123 IF(LINTE.EQ.1) GO TO 141
      DO 132 I=1,NCV1
      IF(LM1(I).EQ.0) GO TO 132
      DO 134 J=1,NCV1
      IF(LM1(J).EQ.0) GO TO 134
      F3(I)=F3(I)+SKE(I,J)*TT30(J)
  134 CONTINUE
  132 CONTINUE
  141 CONTINUE

  149 CONTINUE
c
      IF(INDFLUX.EQ.1) GO TO 137
C
      IF(NHP.EQ.0.AND.NTOK.EQ.0.AND.NQP.EQ.0.AND.NHR.EQ.0) GO TO 135
CE    INTEGRALS OVER BORDER POINTS OF ELEMENT
      CALL INTAB1(A(LNG1D),A(LNELG1),A(LNEL1D),A(LNTAHP),A(LHP1),A(LHK1)
     1,A(LSKE1),A(LNTAHR),A(LHR1),A(LFOHR))
CE    INSERTING MATRIX HP AND VECTOR F3 INTO SYSTEM
  135 CONTINUE
C
C     ADDITIONS FOR LAMDA, FOR ILAMDA=1
C
      IF(ILAMDA.EQ.1) THEN 
         COFFLAM= -SKE(1,1)
         IF(ICONECTIV.EQ.1)COFFLAM=-CLEAK
         SKE(1,5)=-COFFLAM
         SKE(1,6)=COFFLAM
         SKE(2,5)=COFFLAM
         SKE(2,6)=-COFFLAM
         SKE(5,1)=-COFFLAM
         SKE(5,2)=COFFLAM
         SKE(6,1)=COFFLAM
         SKE(6,2)=-COFFLAM     
         DO I=1,2
            DO J=1,2
               F3(I)=F3(I)-SKE(I,4+J)*TT3(4+J)
               F3(4+I)=F3(4+I)-SKE(4+I,J)*TT3(J)
            ENDDO
         ENDDO
      ENDIF
C
      NDIM=2
      IF(IMUMPS.EQ.0) THEN
        IF(ISYMM.EQ.1)THEN
           CALL MATSTE (A(LSK),A(LMAXA),A(LF),HP,F3,LM1,NDES,INDSK)
        ELSE
           CALL ADDSTF(A(LALEVO),A(LSILE),A(LDESNO),SKE,F3,A(LMAXA),
     1                   LM1D,NDES,1)
        ENDIF
      ELSE
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,LM1D,NDES)
#else
        CALL sparseassembler_addelemmatrix(NDES,LM1D,SKE)
#endif
        CALL SPAKDE (A(LSILE),F3,LM1D,NDES,JEDN)  
      ENDIF      
C
  137 CONTINUE         
  200 CONTINUE
C	     
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTEB4DARCY(IDT,CORD,TCONS,NTAKV,NTACV,TT1,TT2,NEL,
     1 NQ,MATV,EL,HP,HK,SKE,TT0,IBFK,FAKP,HR,MATERP,AMATF,NZADJ,
     2 ZADFM,DARCYD,DARCYMI,DARCYDIFD,IDARCYMA,ICONNMA,SEFF1D,PERMEA,
     3 IEL2D3D,NODEIN,NODEOUT,FLUX,MATERH,AMATFRO,AMATFSH,AMATFK,
     4 DENSITY,EMODULUS,DELTAE,LAMDAV,ELFLUX,ELFLUX0,NDES,NDIMIDT,
     5 IDARCY,ICONECTIV,IBOUND,NZADIN,NZADOUT,MAT1DD,INDFLUXE,
     6 IDEFORM,ILAMDA,IPARABOLIC,IDTCD)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON A(1)
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA1/ LNEL1D,LMAT1D,LNQ1D,LITG1D,LIP1CV,LNG1D,LNELG1,
     1LEL1,LHP1,LHK1,LSKE1,LDEL1,LDEHP1,LDEHK1,LHR1
      COMMON /EL1K03/NMAT1D,MAT1D,NE1D,NGAU1X,NP1DMX,NND1,IELX1,NLM1,
     1IPR1DC,IPTG1,N1DGU,MEL1D,IQE1,NBR1,NCV1,LM1(3),IDEL1(1),NOD1(1)
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON/REAL1D/ CK1(3,3),P1(1,3),PJ1(1,3),XJ1(1,3),H1(3),
     1DET1,F3(6),TT3(6),TT32(6),TT30(6)
      COMMON /SRPSKI/ ISRPS
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ          
	common/elemmodels/modelel(20),ngele                 
	COMMON/MESSAGES/MESSAGE
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON/UNSYMMETRIC/LALEVO,LDESNO,LSILE,ISYMM
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP, 
     3ITOR,INDVEL,INDFL
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10)
	COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
C
      DIMENSION IDT(NDIMIDT,NPT),CORD(NPT,3),TCONS(*),NTAKV(*),NTACV(*),
     1TT1(JEDN),NEL(NE1D,2),MATV(*),EL(*),HP(*),HK(*),SKE(NDES,NDES),
     2NQ(*),TT2(*),TT0(*),IBFK(NMATT,*),FAKP(NMATT,*),
     3TBK(1),HR(*),IDTCD(2,NPT)  
      DIMENSION XG(15),WGT(15),NREF(6)
      DIMENSION MATERP(NUMMAT),AMATF(NUMMAT,2,*),NZADJ(3,NZADP),
     1          ZADFM(NZADP)
      DIMENSION DARCYD(2,NE1D),DARCYMI(NE1D),DARCYDIFD(NE1D),
     1          IDARCYMA(NPT),ICONNMA(4,NE1D),SEFF1D(5,NE1D),
     2          PERMEA(NE1D),IEL2D3D(MAXCONNP2,NE1D),NODEIN(NZADIN),
     3          NODEOUT(NZADOUT),FLUX(NPT),DENSITY(NE1D),EMODULUS(NE1D),
     4          DELTAE(NE1D),ELFLUX(2,NE1D),ELFLUX0(2,NE1D),LAMDAV(NPT) 
      DIMENSION MATERH(NMATTHEAT),AMATFRO(NMATTHEAT,2,*),
     2          AMATFSH(NMATTHEAT,2,*),AMATFK(NMATTHEAT,2,*)
      DIMENSION ZADLOCAL(6),ZADLOCAL0(6),ZADLOCAL32(6),LMZADA(6),LM1D(6)
     1          ,LMMINUS(6),VLOCAL(6),SKEM(2,2),SKEP(2,2),
     2          SKED(2,2),AMASSA(2,2)
      DIMENSION AMASSAVV(2,2),SKEVV(2,2),SKEVP(2,2),AMASSAPP(2,2)
      DIMENSION SKVVBAR(2,2),SKINV(2,2),SKPPBAR(2,2),SKVVM(2,2),
     1          AEMPP(2,2),F3A(2),QQE(2),QQE0(2)
C
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
C
C     COMMENTS:
C     LM1D(1), LM1D(2); TT3(1),TT3(2) - NODAL PRESSURES;
C     LM1D(3), LM1D(4); TT3(3),TT3(4) - NODAL CONCENTRATIONS/TEMPERATURES;
C     LM1D(5), LM1D(6); TT3(5),TT3(6) - LAMDA  (LAGRANGE MULTIPLIERS)
C
      IF(IZIP.EQ.2) GO TO 15
      IF(NQE.NE.1) GO TO 15
      CALL TABF(A(LQEFN),A(LNTAQE),NQE,NQE,VREME,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 15
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) NQE,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) NQE,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPL. IZVOR-VREME,  BR.=',I3/
     11X,'ARGUMENT VREME= ',F10.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME = ',1PD12.4)
      STOP
   15 CONTINUE
C
      ICONVV = ICONV
      IDIFFHEAT = 0
      IF(IDIFUSE.NE.0.OR.IHEAT.NE.0) IDIFFHEAT = 1
C
      PI     = 4.*DATAN(1.D0)
      PI4    = PI/4.
      TWOPI  = 2. * PI

      COEFF  = PI/128.
      COEFFR = 0.125*PI
      IF(IPARABOLIC.EQ.0) THEN
         GAMA=2.D0
      ELSE
         GAMA=9.D0
      ENDIF
      ALFA=(GAMA+2.0)/(GAMA+1.0)
      DDARCY = 0.D0
      iizlaz = 3
      VBR    = 1.0D35
      CC1=1.D0
      AKTT = 1./DT
C
      IF(ITER.EQ.0) THEN
         DO I=1,NE1D
            ELFLUX0(1,I)=ELFLUX(1,I)
            ELFLUX0(2,I)=ELFLUX(2,I)
         ENDDO
      ENDIF
C
C     LOOP OVER ELEMENTS
C
      DO 200 NLM1= 1,NE1D

      IF (ITOR .EQ. 3)  WRITE(3,5100) NLM1
 5100 FORMAT(' ELEMENT....................',I5)
      IF (INDVEL .EQ. 1) GO TO 300
      DO 20 I = 1,MEL1D
C      IF(INDSK.EQ.0) GO TO 21
      HP(I) = 0.
      HK(I) = 0.
      HR(I) = 0.
C   21 IF(NSTAC.EQ.0) GO TO 20
      EL(I) = 0.
   20 CONTINUE
      DO 17 I=1,6
      TT3(I)  = 0.
      TT32(I) = 0.
      TT30(I) = 0.
      IF(I.LE.3)LM1(I)=0
   17 F3(I)=0.
      DO I=1,6
        ZADLOCAL(I)=0.D0
        ZADLOCAL0(I)=0.D0
        ZADLOCAL32(I)=0.D0
	  LMZADA(I)=0
	  LM1D(I)=0
	  LMMINUS(I)=0
      ENDDO
C     IF(NSTAC.EQ.0) GO TO 23
      CALL CLEAR(SKE,NDES*NDES)
      CALL CLEAR(SKEM,4)
      CALL CLEAR(SKEP,4)
      CALL CLEAR(SKED,4)
      CALL CLEAR(AMASSA,4)
      CALL CLEAR(AMASSAVV,4)
      CALL CLEAR(SKEVV,4)
      CALL CLEAR(SKEVP,4)
      CALL CLEAR(AMASSAPP,4)
      CALL CLEAR(AEMPP,4)
      CALL CLEAR(SKVVBAR,4)
      CALL CLEAR(SKINV,4)
      CALL CLEAR(SKPPBAR,4)
      CALL CLEAR(SKVVM,4)
C
   23 IF(NMAT1D.GT.1.OR.indiffus.EQ.1.OR.IHEAT.EQ.1) MAT1D=MATV(NLM1)
      IQE1=0
      IF(NQE.GT.0) IQE1=NQ(NLM1)
      ARG=0.
	IF(indiffus.EQ.1.OR.iDARCY.NE.0) THEN
	  CC1=1.D0
	  GO TO 30 
	ENDIF
      IF(NSTAC.EQ.0.OR.KONC.EQ.1) GO TO 25
      CALL TABF(A(LTABC),A(LNTACV),MAT1D,NMATT,ARG,CC1,NTA,IND)
   25 IF(IANIZ.EQ.0) GO TO 188
      FAX=FAKP(MAT1D,1)
  188 IBX=IBFK(MAT1D,1)
      IF(KONK.EQ.1) GO TO 30
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,ARG,AKX,NTA,IND)
      IF(IANIZ.EQ.0) GO TO 30
      AKX=AKX*FAX
   30 IF(IQE1.EQ.0.OR.NQE.EQ.1) GO TO 44
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,VREME,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 44
      WRITE(3,2000) IQE1,VREME
      STOP
   44 IF(IZIP.NE.2.OR.MAXTQE.GT.1) GO TO 40
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,ARG,QQ1,NTA,IND)
      
   40 NCV1   = 0
      NND1   = 0
	NELZAD = 0

      DIAM1   = DARCYD(1,NLM1)
      DIAM2   = DARCYD(2,NLM1)
      RR1     = 0.5*DIAM1
      RR2     = 0.5*DIAM2
      AMI     = DARCYMI(NLM1)
      COEFFRMI= COEFFR/AMI
      DDIF    = DARCYDIFD(NLM1)
      AKX     = DARCYDIFD(NLM1)
      EEE     = 0.D0
      DELTAE0 = 0.D0
      AKEE    = 0.D0
      TWOPIKE = 0.D0
      IF(IDEFORM.EQ.1) THEN
        EEE     = EMODULUS(NLM1)
        DELTAE0 = DELTAE(NLM1)
        AKEE    = 0.75/(DELTAE0*EEE)
        TWOPIKE = TWOPI*AKEE
      ENDIF
      DENSITYE = DENSITY(NLM1)
C	
C     LOOP OVER NODES ---------------
C
      KKIN  = 0
      KKOUT = 0
      DO 50 I=1,NBR1
      IF(I.LE.2) GO TO 41
      IDEL1(I-2)=0
      IF(NEL(NLM1,I).EQ.0) GO TO 50
      NND1=NND1+1
      NOD1(NND1)=I
      IDEL1(I-2)=1
   41 J=NEL(NLM1,I)
      NODE1=NEL(NLM1,1)
      NODE2=NEL(NLM1,2)

      JJ1 = IDT(1,J)
      JJ2 = IDT(2,J)

      NCV1=NCV1+1
      VLOCAL(NCV1)=0.D0
      LMMINUS(NCV1)=IDARCYMA(J)
      NCV1DISP=NBR1+NCV1
C
C     PRESCRIBED VALUES
C      
      IF(NZADP.GT.0.AND.IBOUND.EQ.0) THEN
	  DO KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
            NELZAD=NELZAD+1
            NF=NZADJ(3,KK)
            FAK = ZADFM(KK)
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,IND)
            IF(IND.NE.0) THEN    
              WRITE(3,6015) NF,VREME
              STOP
            ENDIF
            TIMET=VREME-DT
            IF(TIMET.LT.0) TIMET=0.D0
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,TIMET,FTT,NTMX,
     1                IND)
            IF(IND.NE.0) THEN    
              WRITE(3,6016) NF,TIMET
              STOP
            ENDIF
            
            IF(IDOF.EQ.1) THEN              ! prescibed pressure
              LMZADA(NCV1)     = 1
              ZADLOCAL(NCV1)   = FT*FAK
              ZADLOCAL0(NCV1)  = FTT*FAK
              ZADLOCAL32(NCV1) = ZADLOCAL(NCV1)-ZADLOCAL0(NCV1)
            ELSEIF(IDOF.EQ.2) THEN     ! prescibed concentration OR HEAT
              FTFAK=FT*FAK
              FTTFAK=FTT*FAK
              LMZADA(NCV1DISP)     = 1
              ZADLOCAL(NCV1DISP)   = FTFAK
              ZADLOCAL0(NCV1DISP)  = FTTFAK
              ZADLOCAL32(NCV1DISP) = ZADLOCAL(NCV1DISP)-                
     1                              ZADLOCAL0(NCV1DISP)
              IF(IHEAT.EQ.1.AND.ICONECTIV.EQ.1) THEN
                 DO K=3,4
                   LMZADA(K)=1
                   ZADLOCAL(K)=FTFAK
                   ZADLOCAL0(K)=FTTFAK
                   ZADLOCAL32(K)=ZADLOCAL(K)-ZADLOCAL0(K)
                 ENDDO
              ENDIF
            ELSEIF(IDOF.EQ.3) THEN          ! outlet velocity
              VLOCAL(NCV1) = FT*FAK
            ENDIF
	    ENDIF
	  ENDDO
 6015   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  VREME =',1PD12.4)
 6016   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  TIMET=VREME-DT =',1PD12.4)
	ENDIF
   37 CONTINUE	
C
      LM1D(NCV1)    =JJ1
      LM1D(NCV1DISP)=JJ2
      lm1(ncv1)=jj2
      IF(NTCONS.GT.0) THEN
        LM1D(NCV1)     = IDT(1,J)
        LM1D(NCV1DISP) = IDT(2,J)
      ENDIF
      IF(NTCONS.EQ.0) GO TO 45
      IF(IDT(1,J).LE.0.AND.IDT(2,J).LE.0) GO TO 42
      IF(NSTAC.EQ.0.AND.LINTE.EQ.0) GO TO 50
C
      DO KK=1,2
         K=IDT(KK,J)
         IF(K.GT.0) THEN
          KLOC = (KK-1)*NBR1+NCV1
           TT3(KLOC)  = TT1(K)
           TT32(KLOC) = TT2(K)
           TT30(KLOC) = TT0(K)
         ENDIF
      ENDDO
C
      GO TO 50
   42 TT3(NCV1)  = TCONS(J)
      TT32(NCV1) = TCONS(J)
      TT30(NCV1) = TCONS(J)
      GO TO 50
   45 CONTINUE
C
      IF (NSTAC.GT.0.OR.LINTE.GT.0.OR.NELZAD.GT.0) THEN
        IF(IDARCY.GE.0) THEN
          DO KK=1,2
            JJ=IDT(KK,J)
            KLOC=(KK-1)*NBR1+NCV1
            IF(JJ.GT.0) THEN
              TT3(KLOC)  = TT1(JJ)
              TT32(KLOC) = TT2(JJ)
              TT30(KLOC) = TT0(JJ)
              IF(ITER.EQ.0) TT32(KLOC)=0.D0
	      ELSE IF(LMZADA(KLOC).EQ.1) THEN
              TT3(KLOC)  = ZADLOCAL(KLOC)
              TT32(KLOC) = ZADLOCAL32(KLOC)
              TT30(KLOC) = ZADLOCAL0(KLOC)
            ENDIF
          ENDDO
        ENDIF                
	ENDIF
   50 CONTINUE
C
C     END OF LOOP OVER ELEMENT NODES
C
      IF(ILAMDA.EQ.1) THEN
         DO I=1,2
            NODE=NEL(NLM1,I)
            ILAM=LAMDAV(NODE)
            IF(ILAM.GT.0) THEN
               LM1D(4+I)=ILAM
               TT3(4+I)=TT1(ILAM)
            ENDIF
         ENDDO
      ENDIF
C
300   IELX1=NCV1
c
CE  NODE COORDINATES OF ELEMENTS MATRIX
c
      K=0
      DO 60 I=1,NBR1
      IF(NEL(NLM1,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM1,I)
      DO 55 J=1,3
   55 CK1(K,J)=CORD(KK,J)
   60 CONTINUE
C    
      AREA=1.D0  
      IF(IDEFORM.EQ.1) THEN
         RR1=RR1/(1.-RR1*AKEE*TT3(1))
         RR2=RR2/(1.-RR2*AKEE*TT3(2))
      ENDIF
      AREA1=RR1*RR1*PI
      AREA2=RR2*RR2*PI 
C
C     NODAL FLUXES
C
      DO I=1,2
        IF(LMMINUS(I).EQ.-1) THEN
          IF(I.EQ.1) THEN
            QQE(1)=VLOCAL(I)*AREA1
          ELSE
            QQE(2)=VLOCAL(I)*AREA2
          ENDIF 
          ELFLUX(I,NLM1) = QQE(I)  
        ELSE
          QQE(I)=ELFLUX(I,NLM1)
        ENDIF
        QQE0(I)=ELFLUX0(I,NLM1)
      ENDDO
C     
CE    GAUSS POINTS  LOOP
C
      DO 100 NGX=1,NGAU1X
      JR=NREF(NGAU1X) + NGX
      R = XG(JR)
      WT=WGT(JR)
      CALL JACT1(R,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
      RAD=1.
      IF(INDAX.EQ.0) GO TO 281
      RAD=0.
      DO 282 I=1,NCV1
  282 RAD=RAD+H1(I)*CK1(I,1)
CE    VELOCITIES CALCULATION
  281 IF (INDVEL .EQ. 1) THEN
      VX = 0.0
      DO 304 NV=1,NCV1
      KK=NEL(NLM1,NV)
      KK = LF +KK-1
      VX=VX-PJ1(1,NV)*A(KK)
  304 CONTINUE
      WRITE (3,9990) NGX, VX
 9990 FORMAT ('   NG(',I1,')     VX = ',F12.6)
      GO TO 100
      ENDIF
C
CE  TEMPERATURE AT GAUSS POINT
C
      TEMP=0. 
      if(IDARCY.EQ.0.OR.IHEAT.EQ.1) THEN
         DO 65 I=1,NCV1
   65    TEMP=TEMP+H1(I)*TT3(NCV1+I)
      ENDIF
C
      IF(IDARCY.NE.0.AND.IHEAT.EQ.0) GO TO 81
C
      IF(NSTAC.EQ.0.OR.KONC.EQ.0) GO TO 70
      IF(NTACV(MAT1D).EQ.0) GO TO 67
      CALL TABF(A(LTABC),A(LNTACV),MAT1D,NMATT,TEMP,CC1,NTA,IND)
      IF(IND.EQ.0) GO TO 70
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) MAT1D,TEMP
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) MAT1D,TEMP
 2005 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA SPEC. TOPLOTA - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6005 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SPECIFIC HEAT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
   67 CALL ANALCF(MAT1D,TEMP,CC1,A(LGUSM))
   70 CONTINUE
      IF(IHEAT.EQ.1) THEN
         call tabdiff(MATERH,AMATFRO,MAT1D,TEMPa,RRO,IND1)
         call tabdiff(MATERH,AMATFSH,MAT1D,TEMPa,CC1,IND2)
         call tabdiff(MATERH,AMATFK,MAT1D,TEMPa,AKX,IND3)
         IF(IND1.GT.0.OR.IND2.OR.IND3) GO TO 182
         CC1=RRO*CC1
         go to 80
      ENDIF
      if(indiffus.EQ.1) then  
	  tempa=dabs(temp)
        call tabdiff(MATERP,AMATF,MAT1D,TEMPa,ddifus,IND)
	  akx=ddifus
	  IF(IND.GT.0) GO TO 182
	  IF(IANIZ.NE.0) AKX=AKX*FAX      
	  go to 80
	endif
      IF(KONK.EQ.0) GO TO 80
      IF(IBX.EQ.0) GO TO 77
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,TEMP,AKX,NTA,IND)
      IF(IANIZ.EQ.0) GO TO 182
      AKX=AKX*FAX
  182 IF(IND.EQ.0) GO TO 80
      IF(ISRPS.EQ.0)
     *WRITE(3,2001)  MAT1D,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6001)  MAT1D,TEMP
 2001 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. PROVODJENJA - TOPL.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6001 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'DIFFUSION COEFICIENT - CONCENTRATION,  NO. =',I5/
     11X,'CONCENTRARION,  CONC =',1PD12.4/
     21X,'S T O P'//' CHECK: INPUT DATA FOR DIFFUSION COEFFICIENT'/
     38X,'AND BOUNDARY CONDITIONS FOR INLET AND OUTLET RESERVOIRS')
C
      STOP
   77 CALL ANALKF(MAT1D,TEMP,AKX,AKY,AKZ,A(LTOPM),A(LTMNM))
      IF(IANIZ.EQ.0) GO TO 80
      AKX=AKX*FAX
   80 CONTINUE
      IF(IZIP.NE.2.OR.MAXTQE.EQ.1) GO TO 81
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,TEMP,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 81
      IF(ISRPS.EQ.0)
     *WRITE(3,2011) IQE1,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6011) IQE1,TEMP
 2011 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPLOTNOG IZVORA (PONORA)   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6011 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
CE  ELEMENT MATRICES
   81 WDT=WT*DET1*RAD !*AREA
      IF(IDARCY.NE.0) GO TO 400
      K=0
      DO 85 I=1,NCV1
      DO 83 J=I,NCV1
      K=K+1
      IF(NSTAC.EQ.0) GO TO 87
      HH1= H1(I)*H1(J)*WDT
      EL(K)=EL(K)+CC1*HH1
   87 IF(INDSK.EQ.0) GO TO 83
      PJX=PJ1(1,I)*PJ1(1,J)
      HP(K) = HP(K) +(AKX*PJX)*WDT   
   83 CONTINUE
      IF(IQE1.EQ.0) GO TO 85
CE  CALCULATION OF RIGHT-SIDE VECTOR
      F3(I)=F3(I)+H1(I)*WDT*QQ1
   85 CONTINUE
c     IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
      IF(LINTE.EQ.0) GO TO 100
C     IF(LINTE.EQ.0) GO TO 100
      TBK(1)=0.
      itestdarcy=0
      if(itestdarcy.eq.0) then
         DO 151 I=1,NCV1
  151    TBK(1)=TBK(1)+PJ1(1,I)*TT3(I)
      else
         DO I=1,NCV1
           TBK(1)=TBK(1)+PJ1(1,I)*TT3(I+ncv1)
         enddo
      endif
      TBK(1)=TBK(1)*AKX
      DO 152 I=1,NCV1
  152 F3(I)=F3(I)-PJ1(1,I)*TBK(1)*WDT
      GO TO 100
C
C     DEO KOJI URADJEN ZA ELEMENT CEVI (IDARCY.NE.0)
C
  400 CONTINUE
C
      AKTWQ = DENSITYE*AKTT*WDT
      TWOPIKEW=TWOPIKE*WDT
      RRR=RR1*H1(1)+RR2*H1(2)
      IF(IDEFORM.EQ.1) THEN
         PPP=H1(1)*TT3(1)+H1(2)*TT3(2)
         RRR=RRR/(1.-RRR*AKEE*PPP)
      ENDIF
      AREA=RRR*RRR*PI
      RRR3=RRR*RRR*RRR
      AKK=COEFFRMI*RRR3*RRR      
      AKRBAR=TWOPIKE*RRR3
      AEMP1=AKK*AKRBAR*AKTWQ/AREA
      AREAW=AREA*WDT
      DERX=RR1*PJ1(1,1)+RR2*PJ1(1,2)
      DERX=DABS(DERX)
      QQ=H1(1)*QQE(1)+H1(2)*QQE(2) 
      WDT2=2.*WDT
      COEFF1=WDT2*ALFA*DENSITYE*QQ/AREA
      COEFF12=2.*COEFF1
      COEFFMI=WDT2*AMI*(GAMA+2.)/RRR
      !COEFF2=(-COEFF1*DERX+COEFFMI/RRR)/RRR    !miljan
      COEFF2=(-COEFF1*DERX+COEFFMI)/RRR
      AEMP2=AKK*AKRBAR/(RRR*AREA)*(-COEFF12*DERX+COEFFMI)
      ! AEMP2=AKK*AKRBAR/(RRR*AREA)*(DABS(COEFF12)*DERX+COEFFMI)    
      DO 405 I=1,NCV1
         AENI=AREAW*H1(I)
         !AENIP=TWOPIKEW*AENI*RRR3              !miljan
         AENIP=TWOPIKE*AENI*RRR3
      DO 405 J=1,NCV1
         AMASSAVV(I,J) = AMASSAVV(I,J)+H1(I)*H1(J)*AKTWQ
         SKEVV(I,J) = SKEVV(I,J)+H1(I)*(COEFF1*PJ1(1,J)+COEFF2*H1(J))
         SKEVP(I,J) = SKEVP(I,J)+AENI*PJ1(1,J)
         AMASSAPP(I,J) = AMASSAPP(I,J)+AENIP*H1(J)
  405 CONTINUE
C
C     MATRICE MASA I K ZA PRITISAK
C
      AEMP1PLUS2=AEMP1+AEMP2
      AKKW=AKK*WDT
      DO I=1,2
         DO J=1,2
            AEMPP(I,J)=AEMP1PLUS2*H1(I)*H1(J)
            SKE(I,J)=SKE(I,J)+AKKW*PJ1(1,I)*PJ1(1,J)
         ENDDO
      ENDDO

      if(indiffus.EQ.1.OR.IHEAT.EQ.1) THEN
         AKTW = CC1*AKTT*WDT
         AKDW = AKX*WDT
         AKVW = (QQ/AREA)*WDT   
         DO I=1,NCV1
            DO J=1,NCV1
              SKEM(I,J) = SKEM(I,J)+H1(I)*H1(J)*AKTW
              SKED(I,J) = SKED(I,J)+(PJ1(1,I)*AKDW+H1(I)*AKVW)*PJ1(1,J)
            ENDDO
         ENDDO 
      ENDIF     
 
  100 CONTINUE
C---------------------------------------- KRAJ PETLJE PO GAUSOVIM TACKAMA
C
C -----  PAKOVANJE U SKE I DESNA STRANA ZA ELEMENT CEVI
C
      IF(IDARCY.EQ.0) GO TO 450 
C
      DO I=1,2
         DO J=1,2
           SKVVBAR(I,J)=SKEVV(I,J)+AMASSAVV(I,J)
         ENDDO
      ENDDO      
      DETT=SKVVBAR(1,1)*SKVVBAR(2,2)-SKVVBAR(1,2)*SKVVBAR(2,1)
      if(DABS(DETT).LT.1e-12) DETT = 1.e-12
      SKINV(1,1)=SKVVBAR(2,2)/DETT
      SKINV(2,2)=SKVVBAR(1,1)/DETT
      SKINV(1,2)=-SKVVBAR(1,2)/DETT
      SKINV(2,1)=-SKVVBAR(2,1)/DETT   
       
      SKPPBAR(1,1)=SKINV(1,1)*SKEVP(1,1)+SKINV(1,2)*SKEVP(2,1)
      SKPPBAR(1,2)=SKINV(1,1)*SKEVP(1,2)+SKINV(1,2)*SKEVP(2,2)
C      SKPPBAR(2,1)=SKINV(2,1)*SKEVP(1,1)+SKINV(2,2)*SKEVP(2,1)
C      SKPPBAR(2,2)=SKINV(2,1)*SKEVP(1,2)+SKINV(2,2)*SKEVP(2,2) 
      SKPPBAR(2,1)=SKPPBAR(1,2)
      SKPPBAR(2,2)=SKPPBAR(1,1)

      SKVVM(1,1)=SKINV(1,1)*AMASSAVV(1,1)+SKINV(1,2)*AMASSAVV(2,1)
      SKVVM(1,2)=SKINV(1,1)*AMASSAVV(1,2)+SKINV(1,2)*AMASSAVV(2,2)
      SKVVM(2,1)=SKINV(2,1)*AMASSAVV(1,1)+SKINV(2,2)*AMASSAVV(2,1)
      SKVVM(2,2)=SKINV(2,1)*AMASSAVV(1,2)+SKINV(2,2)*AMASSAVV(2,2) 
C
C     UPDATE ELFLUX(1,NLM1), ELFLUX(2,NLM1)    
C
      DO I=1,2
        F3A(I)=0.D0
         DO J=1,2
           F3A(I)=F3A(I)-SKPPBAR(I,J)*TT3(J)+SKVVM(I,J)*QQE0(J) 
         ENDDO 
         IF(LMMINUS(I).EQ.-1)F3A(I)=QQE(I) 
         IF(TT3(1).GE.TT3(2)) THEN
            F3A(I)=DABS(F3A(I))
         ELSE 
            F3A(I)=-DABS(F3A(I))       
         ENDIF
         ELFLUX(I,NLM1)=F3A(I)
      ENDDO
C
      IF(INDFLUXE.EQ.1) THEN
c        write(3,6220) NLM1
c 6220   format(' INDFLUXE=1 NLM1=',I5/' ELFLUX(i,nlm1),ELFLUX0(i,nlm1)')
c        write(3,6211)(ELFLUX(i,nlm1),i=1,2),(ELFLUX0(i,nlm1),i=1,2)     
        GO TO 200
      ENDIF
C      
C     ELEMENT MATRIX AND NODAL VECTOR     
      DO I=1,2
         DO J=1,2
            AEMPP(I,J)=AKTT*AEMPP(I,J)
            SKE(I,J)=SKE(I,J)+AEMPP(I,J)
            IF(ILAMDA.EQ.1)THEN
               SKE(I,4+J)=-SKPPBAR(I,J)
               SKE(4+I,J)=-SKPPBAR(I,J)
c               IF(I.EQ.1) THEN
c                   IF(F3A(1).GE.0.D0) THEN
c                      SKE(1,4+J)=SKPPBAR(1,J)
c                      SKE(5,J)=SKPPBAR(1,J)
c                   ELSE
c                      SKE(1,4+J)=-SKPPBAR(1,J)
c                      SKE(5,J)=-SKPPBAR(1,J)
c                  ENDIF
c               ELSE
c                  IF(F3A(2).GE.0.D0) THEN
c                      SKE(2,4+J)=-SKPPBAR(2,J)
c                      SKE(6,J)=-SKPPBAR(2,J)
c                   ELSE
c                      SKE(2,4+J)=SKPPBAR(2,J)
c                      SKE(6,J)=SKPPBAR(2,J)
c                  ENDIF
c               ENDIF
            ENDIF
         ENDDO
      ENDDO
      DO I=1,2
         DO J=1,2
            F3(I)=F3(I)-SKE(I,J)*TT3(J)+AEMPP(I,J)*TT30(J)-
     1            SKPPBAR(I,J)*TT3(4+J)
C            F3(4+I) = F3(4+I)-SKPPBAR(I,J)*TT3(J)+SKVVM(I,J)*QQE0(J)
         ENDDO
         IF(ILAMDA.EQ.1) THEN
c           IF(I.EQ.1) THEN
c              IF(F3A(1).GE.0) THEN
c                 F3(1)=F3(1)-F3A(1)
c                 F3(5)=F3(5)-F3A(1)+SKVVM(1,1)*QQE0(1)+
c     1                       SKVVM(1,2)*QQE0(2)
c              ELSE
c                 F3(1)=F3(1)+F3A(1)
c                 F3(5)=F3(5)+F3A(1)-SKVVM(1,1)*QQE0(1)-
c     1                       SKVVM(1,2)*QQE0(2)
c              ENDIF
c           ELSE
c              IF(F3A(2).GE.0) THEN
c                 F3(2)=F3(2)+F3A(2)
c                 F3(6)=F3(6)+F3A(2)-SKVVM(2,1)*QQE0(1)-
c     1                      SKVVM(2,2)*QQE0(2)
c              ELSE
c                 F3(2)=F3(2)-F3A(2)
c                 F3(6)=F3(6)-F3A(2)+SKVVM(1,1)*QQE0(1)+
c     1                         SKVVM(1,2)*QQE0(2)
c              ENDIF
c           ENDIF
           IF(I.EQ.1) THEN
             F3(4+I)=+F3A(I)      
           ELSE
             F3(4+I)=-F3A(I) 
           ENDIF
         ENDIF
         IF(LMMINUS(I).EQ.-1) F3(I)=F3(I)-QQE(I)        
      ENDDO
C
      if(indiffus.EQ.1.OR.IHEAT.EQ.1) THEN
         DO 430 I=1,2
         II=NCV1+I
         DO 430 J=1,2
         JJ=NCV1+J
            SKE(II,JJ)=SKE(II,JJ)+SKEM(I,J)+SKED(I,J)
            F3(II)=F3(II)-SKEM(I,J)*(TT3(JJ)-TT30(JJ))-SKED(I,J)*TT3(JJ)
  430    CONTINUE
      ENDIF
C
c      write(3,6208)(F3(I),i=1,6),(tt3(I),i=1,6)
 6208 format(' f3(i):', 6d13.4,/
     1       ' tt3(i):', 6d13.4)
c      write(3,6205)((SKPPBAR(I,J),i=1,2),j=1,2)
 6205 format(' SKPPBAR(I,J):', 2d13.4)
c      write(3,6210) 
 6210 format(' ELFLUX(i,nlm1)')
c      write(3,6211)(ELFLUX(i,nlm1),i=1,2) 
 6211 format(2d13.5,5x,2d13.5)
c      write(3,6207)((SKE(I,J),i=1,6),j=1,6)
 6207 format(' SKEsumm(I,J):', 6d13.4)
c      write(3,6209)((AEMPP(I,J),i=1,2),j=1,2)
 6209 format(' AEMPP/dt(I,J):', 2d13.4) 
  
      GO TO 149
C
C------------------   KRAJ ZA CEV      
  450 CONTINUE
      IF (INDVEL .EQ. 1) GO TO 200
      IF(NSTAC.EQ.0) GO TO 253
      DO 105 I=1,MEL1D
  105 EL(I)=EL(I)/DT
  253 IF(INDSK.EQ.0) GO TO 140
      DO 115 I=1,MEL1D
  115 HP(I)=HP(I)+EL(I)
CE  CORECTION OF RIGHT-SIDE VECTOR AFTER FIRST PASS
  140 K=0
      DO 121 I=1,NCV1
      DO 121 J=I,NCV1
      K=K+1
      SKE(I,J)=EL(K)
  121 SKE(J,I)=SKE(I,J)
      IF(LINTE.EQ.0) GO TO 123
      DO 122 I=1,NCV1
      IF(LM1(I).EQ.0) GO TO 122
      DO 124 J=1,NCV1
      IF(LM1(J).EQ.0) GO TO 124
      F3(I)=F3(I)-SKE(I,J)*TT32(J)
  124 CONTINUE
  122 CONTINUE
  123 IF(LINTE.EQ.1) GO TO 141
      DO 132 I=1,NCV1
      IF(LM1(I).EQ.0) GO TO 132
      DO 134 J=1,NCV1
      IF(LM1(J).EQ.0) GO TO 134
      F3(I)=F3(I)+SKE(I,J)*TT30(J)
  134 CONTINUE
  132 CONTINUE
  141 CONTINUE

  149 CONTINUE
      IF(INDFLUX.EQ.1) GO TO 137
C
      IF(NHP.EQ.0.AND.NTOK.EQ.0.AND.NQP.EQ.0.AND.NHR.EQ.0) GO TO 135
CE    INTEGRALS OVER BORDER POINTS OF ELEMENT
      CALL INTAB1(A(LNG1D),A(LNELG1),A(LNEL1D),A(LNTAHP),A(LHP1),A(LHK1)
     1,A(LSKE1),A(LNTAHR),A(LHR1),A(LFOHR))
CE    INSERTING MATRIX HP AND VECTOR F3 INTO SYSTEM 
  135 CONTINUE
      
      NDIM=2
      IF(IMUMPS.EQ.0) THEN
        IF(ISYMM.EQ.1)THEN
          CALL MATSTE (A(LSK),A(LMAXA),A(LF),HP,F3,LM1,NDES,INDSK)
        ELSE
           CALL ADDSTF(A(LALEVO),A(LSILE),A(LDESNO),SKE,F3,A(LMAXA),
     1                   LM1D,NDES,1)
        ENDIF
      ELSE
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,LM1D,NDES)
#else
        CALL sparseassembler_addelemmatrix(NDES,LM1D,SKE)
#endif
        CALL SPAKDE (A(LSILE),F3,LM1D,NDES,JEDN)
      ENDIF      
C
  137 CONTINUE             
  200 CONTINUE
C  
      RETURN
      END
C=======================================================================
C
C=======================================================================    
      SUBROUTINE CORRECTDIFF3(SKE,F3,TT3,IDT,NEL,TT1,IEL2D3D,NZADJ,
     1     ZADFM,NEL2D,NEL11D,CORD,NE2D3D,NETIP2D3D,NDIM,NET11D,AKK,
     2     NZADP,VREME,JJCONTIN,NODE1,NODE2,NEL1,NEL2,ICONTIN,ITOPIPE,
     3     JEDN,NE1D,ICONV,NLM1,II1,SEFF,CPERMEA,CLEAK,NPT,DDARCY,
     4     IGROUP,MAXCONNP,MAXCONNP2,IIZLAZ,NDES,IHEAT,IWALLD,IDIFFUSE,
     5     NDIMIDT)
C
C     CORRECTION OF 1D FICTITIOUS ELEMENT NODAL VECTOR IN CASE OF DIFFUSION  
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON A(1)
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10)
      COMMON /EL2K09/NMAT2D,MAT2D,NE2D,NGAU2X,NGAU2Y,NP2DMX,
     1IPR2DC,IPTG2,N2DGU,MEL2D,IQE2,NBR2,NCV2,LM2(9),IDEL2(5),
     2NOD5(5),NND5,IELX2,NLM2,NTHIC,THIC
       COMMON/REAL2D/ CK2(9,3),P2(2,9),PJ2(2,9),XJ2(2,2),H2(9),
     1AK2,CC2,HH2,QQ2,HHP2,DET2,DET21,F9(9),TT21(9),TT212(9),TT210(9)
      COMMON/REAL3D/ CK(21,3),P(3,21),PJ(3,21),XJ(3,3),H(21),T21(21),
     1AK,CC,HH,QQ,DET,DET1,F21(21),T212(21),T210(21),HHP
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON/GAUSSNODE/GAUSS2(2,4),GAUSS3(3,8)
      
      DIMENSION SKE(NDES,NDES),F3(6),TT3(6),IDT(NDIMIDT,NPT),
     1  NEL(NE1D,2),TT1(JEDN),SEFF1D(5,NE1D),IEL2D3D(MAXCONNP2,NE1D),
     2  CORD(NPT,3),NZADJ(3,NZADP),ZADFM(NZADP),NEL2D(NE2D3D,NDIM),
     3  NEL11D(NET11D,2)
     
      DIMENSION PLOCAL(8),VLOCAL(2,2),NODEEL(100,8),VX(100),VY(100),
     1  VZ(100)
C
      IF(MAXCONNP.GT.100) THEN
         WRITE(IIZLAZ,2000) MAXCONNP
 2000    FORMAT(' ERROR IN SUBROUTINE CORRECTDIFF3'/
     1   ' NUMBER OF CONTINUUM ELEMENTS CONNECTED TO FICTTIOUS ELEMENT',
     2   ' IS EQUAL TO MAXCONNP=',I5/
     3   ' IT IS ASSUMED TO BE MAXIMUM = 20'/
     4   ' ICREASE DIMENSIONS IN: NODEEL(100,8),VX(100),VY(100)'/'STOP')
         STOP
      ENDIF
C
      IF((IDIFFUSE.EQ.1.OR.IHEAT.EQ.1).AND.IWALLD.EQ.0) THEN
        CONC1 = TT3(3)
        CONC2 = TT3(4)
        IF(IHEAT.EQ.0) THEN
          QFLUX = CPERMEA*(CONC1-CONC2)
          F3(3) = F3(3)-QFLUX
          F3(4) = F3(4)+QFLUX 
        ENDIF
        SKE(3,3) = SKE(3,3)+CPERMEA
        SKE(3,4) = SKE(3,4)-CPERMEA
        SKE(4,3) = SKE(4,3)-CPERMEA
        SKE(4,4) = SKE(4,4)+CPERMEA
      ENDIF
C
      IF(ICONV.EQ.0) RETURN
      IF(IDIFFUSE.EQ.0.OR.IHEAT.EQ.1) GO TO 352
C
C     CONVECTIVE FLUX
C     VELOCITY
C
      IF(NDIM.EQ.4) THEN
        NBR2  = 4
        NCV2  = 4
        NE2D  = NE2D3D
        IELX2 = 4
      ELSE
        NCV   = 8
        NE3D  = NE2D3D
        IELX  = 8
      ENDIF
      KEL=1
C
      DO 100 II=1,MAXCONNP
C
C     LOOP OVER CONNECTED 2D/3D ELEMENTS
C
      NLM=IEL2D3D(KEL,NLM1)
      IF(NLM.EQ.0) GO TO 111    
      
      DO 50 NN=1,NDIM
        NODE=NEL2D(NLM,NN)   
        NODEEL(II,NN)=NODE      
          
        IF(NDIM.EQ.4) THEN    
          DO J=1,2
            CK2(NN,J)=CORD(NODE,J)
          ENDDO
        ELSE
          DO J=1,3
            CK(NN,J)=CORD(NODE,J)
          ENDDO
        ENDIF
        
        I12=IDT(1,NODE)
        IF(I12.GT.0) THEN
          PLOCAL(NN)=TT1(I12)
        ELSE
       	  DO KK=1,NZADP
	      NJ=NZADJ(1,KK)
	      IDOF=NZADJ(2,KK)
	      IF(NJ.EQ.NODE.AND.IDOF.EQ.1) THEN
              NF=NZADJ(3,KK)
              FAK = ZADFM(KK)
              CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,
     1                  NTMX,IND)
              IF(IND.NE.0) THEN    
                WRITE(3,6015) NF,VREME
                STOP
              ENDIF
              PLOCAL(NN)=FAK*FT
              GO TO 50
            ENDIF
          ENDDO        
        ENDIF 
   50 CONTINUE 
C
 6015   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  VREME =',1PD12.4)     
C
      VXX=0.D0
      VYY=0.D0
      VZZ=0.D0
C
      I12=IEL2D3D(KEL+1,NLM1)
      IF(NDIM.EQ.4) THEN            ! 2D
        R=GAUSS2(1,I12)
        S=GAUSS2(2,I12)
        CALL JACT2 (R,S,NEL2D,0)
        
        DO I=1,4
          VXX=VXX-PJ2(1,I)*PLOCAL(I)
          VYY=VYY-PJ2(2,I)*PLOCAL(I)
        ENDDO
        VX(II) = DDARCY*VXX
        VY(II) = DDARCY*VYY
      ELSE                          ! 3D
        R=GAUSS3(1,I12)
        S=GAUSS3(2,I12)
        T=GAUSS3(3,I12)
        CALL JACT(R,S,T,NEL2D,0)
        
        DO I=1,8
          VXX = VXX-PJ(1,I)*PLOCAL(I)
          VYY = VYY-PJ(2,I)*PLOCAL(I)
          VZZ = VZZ-PJ(3,I)*PLOCAL(I)
        ENDDO
        VX(II)=DDARCY*VXX
        VY(II)=DDARCY*VYY
        VZ(II)=DDARCY*VZZ
      ENDIF
      KEL=KEL+2    
  100 CONTINUE 
  111 CONTINUE
C
C     3D USING AVERAGE OF VELOCITY MODULES
C
  300 CONTINUE     
      KK    = 0
      KEL   = 1
      VNTOT =0.D0
      
      DO II=1,MAXCONNP
C     LOOP OVER CONNECTED 2D/3D ELEMENTS
        NLM=IEL2D3D(KEL,NLM1)
        IF(NLM.EQ.0) GO TO 350 
        KK=KK+1
        IF(NDIM.EQ.2) THEN
          VNTOT=VNTOT+DSQRT(VX(II)*VX(II)+VY(II)*VY(II))
        ELSE
          VNTOT=VNTOT+DSQRT(VX(II)*VX(II)+VY(II)*VY(II)+VZ(II)*VZ(II))
        ENDIF  
        KEL=KEL+2
      ENDDO
C
  350 CONTINUE  
C
      VNTOT = VNTOT/KK 
      AKKV  = 0.5*SEFF*VNTOT 
      QFLUX = AKKV*(CONC1+CONC2)
C      FLUXVEL=CLEAK*SEFFVEL*VNTOT
      IF(TT3(1).GE.TT3(2)) THEN
         F3(3)=F3(3)-QFLUX
         F3(4)=F3(4)+QFLUX
      ELSE
         F3(3)=F3(3)+QFLUX
         F3(4)=F3(4)-QFLUX
      ENDIF 
      SKE(3,3)=SKE(3,3)+AKKV
      SKE(3,4)=SKE(3,4)+AKKV
      SKE(4,4)=SKE(4,3)+AKKV
      SKE(4,4)=SKE(4,4)+AKKV
C
C     CONVECTIVE FLUID FLUX 
C     CORRECTED ACORING TO REF JAIN,BAXTER (1998)
C
  352 CONTINUE 
      FLUXVEL = DABS(CLEAK*(TT3(1)-TT3(2)))
C
      IF((TT3(1)-TT3(2)).GE.0) THEN     
        F3(1)    = F3(1)-FLUXVEL   
        F3(2)    = F3(2)+FLUXVEL 
        SKE(1,1) = SKE(1,1)+CLEAK
        SKE(1,2) = SKE(1,2)-CLEAK
        SKE(2,1) = SKE(2,1)-CLEAK
        SKE(2,2) = SKE(2,2)+CLEAK
      ELSE
        F3(1)    = F3(1)+FLUXVEL   
        F3(2)    = F3(2)-FLUXVEL 
        SKE(1,1) = SKE(1,1)+CLEAK
        SKE(1,2) = SKE(1,2)-CLEAK
        SKE(2,1) = SKE(2,1)-CLEAK
        SKE(2,2) = SKE(2,2)+CLEAK
      ENDIF
C      
      RETURN
      END
C ====================================================================
C
C=======================================================================
      SUBROUTINE INTEB1(IDT,CORD,TCONS,NTAKV,NTACV,TT1,TT2,NEL,NQ,MATV,
     1EL,HP,HK,SKE,TT0,IBFK,FAKP,HR,MATERP,AMATF,AREA1DV,
     1     ZADATV0,ZADATV1,ZADATV2,NZADJ)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA1/ LNEL1D,LMAT1D,LNQ1D,LITG1D,LIP1CV,LNG1D,LNELG1,
     1LEL1,LHP1,LHK1,LSKE1,LDEL1,LDEHP1,LDEHK1,LHR1
      COMMON /EL1K03/NMAT1D,MAT1D,NE1D,NGAU1X,NP1DMX,NND1,IELX1,NLM1,
     1IPR1DC,IPTG1,N1DGU,MEL1D,IQE1,NBR1,NCV1,LM1(3),IDEL1(1),NOD1(1)
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON/REAL1D/ CK1(3,3),P1(1,3),PJ1(1,3),XJ1(1,3),H1(3),
     1DET1,F3(6),TT3(6),TT32(6),TT30(6)
      COMMON /SRPSKI/ ISRPS
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX, 
     1                  LFLUXDY,LFLUXDZ          
	common/elemmodels/modelel(20),ngele  
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP               
      COMMON/DIFINOUT/VOLIN,VOLOUT,CINLET0,COUTLET0,CINLET,COUTLET,
     1                WEIGHTMOL,Nzadin,NZADELIN,Nzadout,Lnodin,Lelnelin,
     2                Lnodout,IINLET	     
      COMMON/NDSPARAM2/ELMAC,WMAC,ELIN,DIN,WIN,ELOUT,DOUT,WOUT,ELNA,DNA,
	1                 WNA,VOLOUT2,KLINIS,NINLET,NOUT,NMAC,NXIN,NYIN,
     1                 NXOUT,NYOUT,NNA,NOD1MAC,NOD2MAC,LNODOUT2,
     2                 LINMAMI,LOUTMAMI,NUMINMAMI,NUMOUTMAMI
	COMMON/NDS2CONST/THICK1,THICK2,THICK3,THICK4,THICK5,NMACROCH
	COMMON/MESSAGES/MESSAGE
C
      DIMENSION IDT(*),CORD(NPT,*),TCONS(*),NTAKV(*),NTACV(*),
     1TT1(*),NEL(NE1D,*),MATV(*),EL(*),HP(*),HK(*),SKE(NBR1,*),
     2NQ(*),TT2(*),TT0(*),IBFK(NMATT,*),FAKP(NMATT,*),TBK(1),HR(*)
      DIMENSION XG(15),WGT(15),NREF(6)
      DIMENSION MATERP(NUMMAT),AMATF(NUMMAT,2,*),AREA1DV(*)
	DIMENSION ZADATV0(NZADP),ZADATV1(NZADP),ZADATV2(NZADP),
	1          NZADJ(NZADP),ZADLOCAL(3),LMZADA(3) 

C
C
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
CE LOOP OVER ELEMENTS 
C
      IF(IZIP.EQ.2) GO TO 15
      IF(NQE.NE.1) GO TO 15
      CALL TABF(A(LQEFN),A(LNTAQE),NQE,NQE,VREME,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 15
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) NQE,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) NQE,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPL. IZVOR-VREME,  BR.=',I3/
     11X,'ARGUMENT VREME= ',F10.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME = ',1PD12.4)
      STOP
   15 CONTINUE
      AREA=1.D0
C
C     SET AREA FOR NDS2 DEVICE
C
      DO 200 NLM1= 1,NE1D

	IF(NGET.GT.1.AND.NDS.NE.2)AREA=AREA1DV(NLM1)
      IF (ITOR .EQ. 3)  WRITE(3,5100) NLM1
 5100 FORMAT(' ELEMENT....................',I5)
      IF (INDVEL .EQ. 1) GO TO 300
      DO 20 I = 1,MEL1D
C      IF(INDSK.EQ.0) GO TO 21
      HP(I) = 0.
      HK(I) = 0.
      HR(I) = 0.
C   21 IF(NSTAC.EQ.0) GO TO 20
      EL(I) = 0.
   20 CONTINUE
      DO 17 I=1,3
      TT3(I) = 0.
      TT32(I) = 0.
      TT30(I) = 0.
      LM1(I)=0
      ZADLOCAL(I)=0.D0
	LMZADA(I)=0
   17 F3(I)=0.
C     IF(NSTAC.EQ.0) GO TO 23
      DO 19 I=1,NBR1
      DO 19 J=1,NBR1
   19 SKE(I,J)=0.
   23 IF(NMAT1D.GT.1.OR.indiffus.EQ.1) MAT1D=MATV(NLM1)
      IQE1=0
      IF(NQE.GT.0) IQE1=NQ(NLM1)
      ARG=0.
	IF(indiffus.EQ.1) THEN
	  CC1=1.D0
	  GO TO 30 
	ENDIF
      IF(NSTAC.EQ.0.OR.KONC.EQ.1) GO TO 25
      CALL TABF(A(LTABC),A(LNTACV),MAT1D,NMATT,ARG,CC1,NTA,IND)
   25 IF(IANIZ.EQ.0) GO TO 188
      FAX=FAKP(MAT1D,1)
  188 IBX=IBFK(MAT1D,1)
      IF(KONK.EQ.1) GO TO 30
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,ARG,AKX,NTA,IND)
      IF(IANIZ.EQ.0) GO TO 30
      AKX=AKX*FAX
   30 IF(IQE1.EQ.0.OR.NQE.EQ.1) GO TO 44
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,VREME,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 44
      WRITE(3,2000) IQE1,VREME
      STOP
   44 IF(IZIP.NE.2.OR.MAXTQE.GT.1) GO TO 40
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,ARG,QQ1,NTA,IND)
CE  TEMPERATURE AT NODES  VECTOR
   40 NCV1=0
      NND1=0
	NELZAD=0
      DO 50 I=1,NBR1
      IF(I.LE.2) GO TO 41
      IDEL1(I-2)=0
      IF(NEL(NLM1,I).EQ.0) GO TO 50
      NND1=NND1+1
      NOD1(NND1)=I
      IDEL1(I-2)=1
   41 J=NEL(NLM1,I)
      JJ=IDT(J)
      NCV1=NCV1+1
      IF(NZADP.GT.0) THEN
	  DO KK=1,NZADP
	    IF(NZADJ(KK).EQ.J) THEN
             NELZAD=NELZAD+1
             LMZADA(NCV1)=1
	       ZADLOCAL(NCV1)=ZADATV1(KK)
	       GO TO 244
	    ENDIF
	  ENDDO
	ENDIF
c      LM1(NCV1)=J
  244 LM1(NCV1)=JJ
      IF(NTCONS.GT.0) LM1(NCV1)=IDT(J)
      IF(NTCONS.EQ.0) GO TO 45
      IF(IDT(J).LE.0) GO TO 42
      IF(NSTAC.EQ.0.AND.LINTE.EQ.0) GO TO 50
      K=IDT(J)
      TT3(NCV1)=TT1(K)
      TT32(NCV1)=TT2(K)
      TT30(NCV1) = TT0(K)
      GO TO 50
   42 TT3(NCV1)=TCONS(J)
      TT32(NCV1)=TCONS(J)
      TT30(NCV1) =TCONS(J)
      GO TO 50
   45 CONTINUE
      IF (NSTAC.GT.0.OR.LINTE.GT.0.OR.NELZAD.GT.0) THEN
         IF(JJ.GT.0) THEN
           TT3(NCV1)=TT1(JJ)
           TT32(NCV1)=TT2(JJ)
           TT30(NCV1)=TT0(JJ)
           IF(ITER.EQ.0) TT32(NCV1)=0.D0
	   ELSE
	   IF(LMZADA(NCV1).EQ.1) THEN
           TT3(NCV1)=ZADATV1(KK)
           TT32(NCV1)=ZADATV2(KK)
           TT30(NCV1)=ZADATV0(KK)
         ENDIF
	   ENDIF
	ENDIF
C
C   45 IF(NSTAC.GT.0.OR.LINTE.GT.0)TT3(NCV1)=TT1(J)
C      IF(NSTAC.GT.0.OR.LINTE.GT.0)TT32(NCV1)=TT2(J)
C      IF(NSTAC.GT.0.OR.LINTE.GT.0)TT30(NCV1)=TT0(J)
   50 CONTINUE
300   IELX1=NCV1
CE  NODE COORDINATES OF ELEMENTS MATRIX
      K=0
      DO 60 I=1,NBR1
      IF(NEL(NLM1,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM1,I)
      DO 55 J=1,3
   55 CK1(K,J)=CORD(KK,J)
   60 CONTINUE
CE GAUSS POINTS  LOOP
      DO 100 NGX=1,NGAU1X
      JR=NREF(NGAU1X) + NGX
      R = XG(JR)
      WT=WGT(JR)
      CALL JACT1(R,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
      RAD=1.
      IF(INDAX.EQ.0) GO TO 281
      RAD=0.
      DO 282 I=1,NCV1
  282 RAD=RAD+H1(I)*CK1(I,1)
CE    VELOCITIES CALCULATION
  281 IF (INDVEL .EQ. 1) THEN
      VX = 0.0
      DO 304 NV=1,NCV1
      KK=NEL(NLM1,NV)
      KK = LF +KK-1
      VX=VX-PJ1(1,NV)*A(KK)
  304 CONTINUE
      WRITE (3,9990) NGX, VX
 9990 FORMAT ('   NG(',I1,')     VX = ',F12.6)
      GO TO 100
      ENDIF
C      IF(LINTE.EQ.0) GO TO 81
CE  TEMPERATURE AT GAUSS POINT
      TEMP=0.
      DO 65 I=1,NCV1
   65 TEMP=TEMP+H1(I)*TT3(I)
      if(indiffus.EQ.1) go to 70
      IF(NSTAC.EQ.0.OR.KONC.EQ.0) GO TO 70
      IF(NTACV(MAT1D).EQ.0) GO TO 67
      CALL TABF(A(LTABC),A(LNTACV),MAT1D,NMATT,TEMP,CC1,NTA,IND)
      IF(IND.EQ.0) GO TO 70
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) MAT1D,TEMP
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) MAT1D,TEMP
 2005 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA SPEC. TOPLOTA - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6005 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SPECIFIC HEAT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
   67 CALL ANALCF(MAT1D,TEMP,CC1,A(LGUSM))
   70 CONTINUE
      if(indiffus.EQ.1) then
	   tempa=dabs(temp)
         call tabdiff(MATERP,AMATF,MAT1D,TEMPa,ddifus,IND)
	   akx=ddifus
	   IF(IND.GT.0) GO TO 182
	   IF(IANIZ.NE.0) AKX=AKX*FAX      
	   go to 80
	endif
      IF(KONK.EQ.0) GO TO 80
      IF(IBX.EQ.0) GO TO 77
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,TEMP,AKX,NTA,IND)
      IF(IANIZ.EQ.0) GO TO 182
      AKX=AKX*FAX
  182 IF(IND.EQ.0) GO TO 80
      IF(ISRPS.EQ.0)
     *WRITE(3,2001)  MAT1D,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6001)  MAT1D,TEMP
 2001 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. PROVODJENJA - TOPL.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6001 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'DIFFUSION COEFICIENT - CONCENTRATION,  NO. =',I5/
     11X,'CONCENTRARION,  CONC =',1PD12.4/
     21X,'S T O P'//' CHECK: INPUT DATA FOR DIFFUSION COEFFICIENT'/
     38X,'AND BOUNDARY CONDITIONS FOR INLET AND OUTLET RESERVOIRS')
C
      STOP
   77 CALL ANALKF(MAT1D,TEMP,AKX,AKY,AKZ,A(LTOPM),A(LTMNM))
      IF(IANIZ.EQ.0) GO TO 80
      AKX=AKX*FAX
   80 CONTINUE
      IF(IZIP.NE.2.OR.MAXTQE.EQ.1) GO TO 81
      CALL TABF(A(LQEFN),A(LNTAQE),IQE1,NQE,TEMP,QQ1,NTA,IND)
      IF(IND.EQ.0) GO TO 81
      IF(ISRPS.EQ.0)
     *WRITE(3,2011) IQE1,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6011) IQE1,TEMP
 2011 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPLOTNOG IZVORA (PONORA)   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6011 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
CE  ELEMENT MATRICES
   81 WDT=WT*DET1*RAD*AREA
      K=0
      DO 85 I=1,NCV1
      DO 83 J=I,NCV1
      K=K+1
      IF(NSTAC.EQ.0) GO TO 87
      HH1= H1(I)*H1(J)*WDT
      EL(K)=EL(K)+CC1*HH1
   87 IF(INDSK.EQ.0) GO TO 83
      PJX=PJ1(1,I)*PJ1(1,J)
      HP(K) = HP(K) +(AKX*PJX)*WDT
   83 CONTINUE
      IF(IQE1.EQ.0) GO TO 85
CE  CALCULATION OF RIGHT-SIDE VECTOR
      F3(I)=F3(I)+H1(I)*WDT*QQ1
   85 CONTINUE
c     IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
      IF(LINTE.EQ.0) GO TO 100
C     IF(LINTE.EQ.0) GO TO 100
      TBK(1)=0.
      DO 151 I=1,NCV1
  151 TBK(1)=TBK(1)+PJ1(1,I)*TT3(I)
      TBK(1)=TBK(1)*AKX
      DO 152 I=1,NCV1
  152 F3(I)=F3(I)-PJ1(1,I)*TBK(1)*WDT
c      IF(NLM1.EQ.NE1D) THEN
c	   if(ngx.eq.1) write(3,6499)
c 6499    format(/)
c	   write(3,6500)kor,iter,NGELE,nlm1,NGX,AREA,temp
c 6500    format(' kor,iter,NGELE,nlm1,NGX,AREA,temp=',5i5,2d13.6)
c         write(3,6501)ddifus,akx,wdt
c 6501    format(' ddifus,akx,wdt=',3d13.6)
c         write(3,6502)(hp(i),i=1,3)
c 6502    format(' hp(i):',3d13.6)
c         write(3,6503)(el(i),i=1,3)
c 6503    format(' el(i):',3d13.6)
c         write(3,6504)(f3(i),i=1,2)
c 6504    format(' f3(i):',3d13.6)
c      ENDIF
  100 CONTINUE
C
      IF (INDVEL .EQ. 1) GO TO 200
      IF(NSTAC.EQ.0) GO TO 253
      DO 105 I=1,MEL1D
  105 EL(I)=EL(I)/DT
  253 IF(INDSK.EQ.0) GO TO 140
      DO 115 I=1,MEL1D
  115 HP(I)=HP(I)+EL(I)
CE  CORECTION OF RIGHT-SIDE VECTOR AFTER FIRST PASS
  140 K=0
      DO 121 I=1,NCV1
      DO 121 J=I,NCV1
      K=K+1
      SKE(I,J)=EL(K)
  121 SKE(J,I)=SKE(I,J)
      IF(LINTE.EQ.0) GO TO 123
      DO 122 I=1,NCV1
      IF(LM1(I).EQ.0) GO TO 122
      DO 124 J=1,NCV1
      IF(LM1(J).EQ.0) GO TO 124
      F3(I)=F3(I)-SKE(I,J)*TT32(J)
  124 CONTINUE
  122 CONTINUE
  123 IF(LINTE.EQ.1) GO TO 141
      DO 132 I=1,NCV1
      IF(LM1(I).EQ.0) GO TO 132
      DO 134 J=1,NCV1
      IF(LM1(J).EQ.0) GO TO 134
      F3(I)=F3(I)+SKE(I,J)*TT30(J)
  134 CONTINUE
  132 CONTINUE
  141 CONTINUE
C     CORRECT RIGHT-HAND SIDE FOR PRESCRIBED VALUES AT NODES
      MILOS=1
	IF(MILOS.EQ.1) GO TO 149
      IF(NELZAD.EQ.0) GO TO 149
	  DO 148 I=1,NCV1
	  IF(LM1(I).EQ.0) GO TO 148
	  DO J=1,NCV1
          IF(LMZADA(J).EQ.1)F3(I)=F3(I)-SKE(I,J)*ZADLOCAL(J)
	  ENDDO
  148 CONTINUE
  149 IF(NHP.EQ.0.AND.NTOK.EQ.0.AND.NQP.EQ.0.AND.NHR.EQ.0) GO TO 135
CE    INTEGRALS OVER BORDER POINTS OF ELEMENT
      CALL INTAB1(A(LNG1D),A(LNELG1),A(LNEL1D),A(LNTAHP),A(LHP1),A(LHK1)
     1,A(LSKE1),A(LNTAHR),A(LHR1),A(LFOHR))
CE    INSERTING MATRIX HP AND VECTOR F3 INTO SYSTEM
  135 CALL MATSTE (A(LSK),A(LMAXA),A(LF),HP,F3,LM1,NCV1,INDSK)
c      IF(NLM1.EQ.NE1D) THEN
c	  write(3,6510)HP(1),HP(2),HP(3)
c 6510   FORMAT(' hp(i) final:',3d13.6)
c      endif
  200 CONTINUE
      RETURN
      END
C=======================================================================

C=======================================================================
      SUBROUTINE INTAB1(NG1D,NELG,NEL,NTAHP,HP,HK,SKE,NTAHR,HR,FOHR)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
CE  PROGRAM TO PERFORM INTEGRATION OVER 1D ELEMENT POINTS
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA1/ LNEL1D,LMAT1D,LNQ1D,LITG1D,LIP1CV,LNG1D,LNELG1,
     1LEL1,LHP1,LHK1,LSKE1,LDEL1,LDEHP1,LDEHK1,LHR1
      COMMON /EL1K03/NMAT1D,MAT1D,NE1D,NGAU1X,NP1DMX,NND1,IELX1,NLM1,
     1IPR1DC,IPTG1,N1DGU,MEL1D,IQE1,NBR1,NCV1,LM1(3),IDEL1(1),NOD1(1)
      COMMON/REAL1D/ CK1(3,3),P1(1,3),PJ1(1,3),XJ1(1,3),H1(3),
     1DET1,F3(6),TT3(6),TT32(6),TT30(6)
      COMMON /SRPSKI/ ISRPS
      DIMENSION NG1D(*),NELG(5,2,*),NEL(NE1D,*),NTAHP(*),
     1HP(*),HK(*),SKE(NBR1,*),HR(*),NTAHR(*),FOHR(*)
      IVR=NG1D(NLM1)
      IF(IVR.EQ.0) RETURN
CE  CE LOOP OVER BORDER ELEMENT POINTS
      IHPS = 0
      IHRS = 0
      DO 200 NPOV=1,2
      IFL=NELG(1,NPOV,IVR)
      IHP=NELG(2,NPOV,IVR)
      IHR=NELG(4,NPOV,IVR)
      IF(IFL.EQ.0.AND.IHP.EQ.0.AND.IHR.EQ.0) GO TO 200
      ITOK=NELG(3,NPOV,IVR)
      IFO=NELG(5,NPOV,IVR)
      IF(IHP.EQ.0) GO TO 5
      IHPS = 1
      IF(NTAHP(IHP).GT.1) GO TO 5
      CALL TABF(A(LHPFN),A(LNTAHP),IHP,NHP,TEMP,HHP1,NTA,IND)
    5 IF(IHR.EQ.0) GO TO 6
      IHRS = 1
      IF(NTAHR(IHR).GT.1) GO TO 6
      CALL TABF(A(LHRFN),A(LNTAHR),IHR,NHR,TEMP,HHR1,NTA,IND)
    6 IF(IFL.EQ.0) GO TO 20
      CALL TABF(A(LQPFN),A(LNTAQP),IFL,NQP,VREME,QQP,NTA,IND)
      IF(IND.EQ.0) GO TO 20
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) IFL,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) IFL,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA FLUKS-VREME BR.=',I3/
     11X,'ARGUMENT VREME ',D12.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SURFACE FLUX - TIME,  No. =',I5/
     11X,'ARGUMENT TIME, TIME =',1PD12.4)
      STOP
   20 IF(ITOK.EQ.0) GO TO 40
      CALL TABF(A(LTOKFN),A(LNTAOK),ITOK,NTOK,VREME,TT,NTA,IND)
      IF(IND.EQ.0) GO TO 40
      IF(ISRPS.EQ.0)
     *WRITE(3,2001) ITOK,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6001) ITOK,VREME
 2001 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TEMP. OKOLINE-VREME BR.=',I3/
     11X,'ARGUMENT VREME ',D12.4)
 6001 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE ENVIRONMENT TEMPERATURE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME, TIME =',1PD12.4)
      STOP
CE  GAUSS POINTS LOOP
   40 R=1.
      IF(NPOV.EQ.2) R=-1.
      CALL JACT1(R,NEL,1)
      RADS=1.
      IF(INDAX.EQ.0) GO TO 281
      RADS=0.
      DO 282 I=1,NCV1
  282 RADS=RADS+H1(I)*CK1(I,1)
  281 WDT=RADS
      IF(LINTE.EQ.0) GO TO 81
      TEMP=0.
      DO 65 I=1,NCV1
   65 TEMP=TEMP+H1(I)*TT3(I)
      IF(IHP.EQ.0) GO TO 80
      IF((NHP.EQ.1.AND.MAXTHP.EQ.1).OR.NTAHP(IHP).EQ.1) GO TO 80
      CALL TABF(A(LHPFN),A(LNTAHP),IHP,NHP,TEMP,HHP1,NTA,IND)
      IF(IND.EQ.0) GO TO 80
      IF(ISRPS.EQ.0)
     *WRITE(3,2002) IHP,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6002) IHP,TEMP
 2002 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. PRELAZA TOPL. BR.=',I3/
     11X,'ARGUMENT TEMP= ',D12.4)
 6002 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE CONVECTION COEFICIENT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE, TEMP =',1PD12.4)
      STOP
   80 IF(IHR.EQ.0) GO TO 81
      IF((NHR.EQ.1.AND.MAXTHR.EQ.1).OR.NTAHR(IHR).EQ.1) GO TO 81
      CALL TABF(A(LHRFN),A(LNTAHR),IHR,NHR,TEMP,HHR1,NTA,IND)
      IF(IND.EQ.0) GO TO 81
      IF(ISRPS.EQ.0)
     *WRITE(3,2003) IHR,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6003) IHR,TEMP
 2003 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. EMISIVNOSTI BR.=',I3/
     11X,'ARGUMENT TEMP= ',D12.4)
 6003 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE RADIATION COEFICIENT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE, TEMP =',1PD12.4)
      STOP
   81 K=0
      IF(IFL.GT.0) WQP=WDT*QQP
      IF(IHP.GT.0) WHP=WDT*HHP1
      IF(ITOK.EQ.0) GO TO 97
      IF(IHR.EQ.0) GO TO 82
      FOR=1.
      IF(NFO.EQ.0) GO TO 79
      FOR=FOHR(IHR)
   79 HRR=HHR1*FOR*SBC
      HKR=HRR*(TT**2+TEMP**2)*(TT+TEMP)
      WHR=WDT*HKR
CE CALCULATION OF TEMPERATURE DIFERENCE AT BORDER CONVECTION LINE
   82 TTT = 0.
      IF(LINTE.EQ.0) GO TO 98
      DO 88 I=1,NCV1
   88 TTT=TTT+H1(I)*(TT-TT3(I))
   98 IF(LINTE.EQ.1) GO TO 97
      DO 87 I=1,NCV1
   87 TTT=TTT+H1(I)* TT
   97 K=0
      KK=0
      DO 86 I=1,NCV1
      IF(LINTE.EQ.0) GO TO 83
      IF(IHR.EQ.0) GO TO 83
      IF(INDSK.EQ.0) GO TO 91
      DO 92 J=I,NCV1
      KK=KK+1
      HR(KK)=HR(KK) + H1(I)*H1(J)*WHR
   92 CONTINUE
   91 F3(I)=F3(I) + H1(I)*WHR*TTT
   83 IF(IHP.EQ.0) GO TO 85
      IF(INDSK.EQ.0) GO TO 89
      DO 84 J=I,NCV1
      K=K+1
   84 HK(K)=HK(K) + H1(I)*H1(J)*WHP
   89 F3(I)=F3(I) + H1(I)*WHP*TTT
   85 IF(IFL.EQ.0) GO TO 86
      F3(I)=F3(I) + H1(I)*WQP
   86 CONTINUE
  200 CONTINUE
CE  CORECTION OF LEFT-SIDE MATRIX
      IF(INDSK.EQ.0) GO TO 300
      IF(IHPS.EQ.0) GO TO 250
      DO 105 I=1,MEL1D
  105 HP(I) = HP(I) + HK(I)
  250 IF(IHRS.EQ.0) GO TO 300
      DO 115 I=1,MEL1D
  115 HP(I) = HP(I) + HR(I)
  300 RETURN
      END

C=======================================================================
C
C=======================================================================
      SUBROUTINE JACT1 (R,NEL,KFIX)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
CE    PROGRAM TO FORM JACOBIAN AND JACOBIAN DETERMINANT AT POINT R
      COMMON /EL1K03/NMAT1D,MAT1D,NE1D,NGAU1X,NP1DMX,NND1,IELX1,NLM1,
     1IPR1DC,IPTG1,N1DGU,MEL1D,IQE1,NBR1,NCV1,LM1(3),IDEL1(1),NOD1(1)
      COMMON/REAL1D/ CK1(3,3),P1(1,3),PJ1(1,3),XJ1(1,3),H1(3),
     1DET1,F3(6),TT3(6),TT32(6),TT30(6)
      COMMON /SRPSKI/ ISRPS
      DIMENSION NEL(NE1D,*)
      RP=1.0+R
      RM=1.0-R
      RR=1.0-R*R
      DO 82 I=1,3
      H1(I)=0.
   82 P1(1,I)=0.
CE     INTERPOLATION FUNCTIONS AND DERIVATIVES
      H1(1)=0.5*RP
      H1(2)=0.5*RM
      P1(1,1)=0.5
      P1(1,2)=-P1(1,1)
      IF (IELX1.EQ.2) GO TO 50
CE     DEGREES OF FREADOM FOR NODES OVER 2
      I=0
    2 I=I+1
      IF (I.GT.NND1) GO TO 40
      NN=NOD1(I)-2
      GO TO (3),NN
    3 H1(3)= RR
      P1(1,3)=-2.0*R
      GO TO 2
CE    CORECTION OF FIRST 2 FUNCTIONS IF NODE 3 EXISTS
   40 DO 36 I=1,2
      H1(I)=H1(I)-0.5*H1(3)
   36 P1(1,I)=P1(1,I)-0.5*P1(1,3)
CE    JACOBIAN AT POINT R
   50 DO 61 J=1,3
      XJ1(1,J)=0.
      DO 61 KK=1,NCV1
      XJ1(1,J)=XJ1(1,J)+P1(1,KK)*CK1(KK,J)
   61 CONTINUE
      IF(KFIX.EQ.1) RETURN
CE     JACOBIAN DETERMINANT AT POINT R
      DET1=DSQRT(XJ1(1,1)**2+XJ1(1,2)**2+XJ1(1,3)**2)
      XJ1(1,1)=1./DET1
      IF (DET1.GT.1.D-15) GO TO 77
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) NLM1,R,DET1
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) NLM1,R,DET1
      STOP
   77 DO 85 JJ=1,NCV1
      PJ1(1,JJ)=0.
      PJ1(1,JJ)=PJ1(1,JJ) + XJ1(1,1)*P1(1,JJ)
   85 CONTINUE
 6000 FORMAT(' ** ERROR **:'/' JACOBIAN EQUAL OR LESS THEN ZERO',
     1' FOR ELENMENT No. =',I5/
     2       12X,'R=',F10.5/
     4       9X,'DET1=',D10.3)
 2000 FORMAT(' ** GRESKA **: JAKOBIJAN JEDNAK ILI MANJI OD NULE',
     1       ' ZA ELEMENT No.',I5/
     2       12X,'R=',F10.5/
     4       9X,'DET1=',D10.3)
      RETURN
      END
C ======================================================================
C
C ======================================================================
      SUBROUTINE MAXAPIPET(MAXA,MHT,ID,NEL,LM,NET,NTE,JEDN,NWK,NPT,
     1           NDOF,INDMA)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CE Subroutine MAXAPIPE is used 
CE for determination of column heights vector and maxa FOR PIPE (1-D) FINITE ELEMENT
C

      DIMENSION MAXA(JEDN),MHT(JEDN),ID(2,NPT),NEL(NET,NTE),LM(6)
      COMMON /CDEBUG/ IDEBUG

      IF(IDEBUG.GT.0) WRITE(*,*) 'MAXATE'
C
CS    PETLJA PO ELEMENTIMA
CE    ELEMENT LOOP    
      DO 100 NLM=1,NET
         KK=0
         DO 1 I=1,NTE
            N=NEL(NLM,I)
            DO 1 J=1,NDOF
               IF(ID(J,N).LE.0) GO TO 1
               KK=KK+1
               LM(KK)=ID(J,N)
    1   CONTINUE
C         CALL IWRR(LM,KK,'   LM')
C
         LS=JEDN+1
         DO 10 I=1,KK
            IF (LM(I).LT.LS) LS=LM(I)
   10    CONTINUE

C         WRITE(IIZLAZ,*)'LS=',LS
C
         DO 20 I=1,KK
            II=LM(I)
            ME=II-LS
            IF(ME.GT.MHT(II)) MHT(II)=ME
C         WRITE(IIZLAZ,*)'MHT(II),II',MHT(II),II
   20    CONTINUE
C
  100 CONTINUE
C
      IF(INDMA.EQ.0) RETURN
CE    VECTOR MAXA
C
      itestdarcy=0
      if(itestdarcy.eq.1) then
         MAXA(1)=1
         MAXA(2)=2
         DO  I=2,JEDN
            MAXA(I+1)=MAXA(I)+MHT(I)+1
         enddo
         NWK=MAXA(JEDN+1)-1
         LS = JEDN+1
         DO I=1,LS
           MHT(I)=MAXA(I)
         enddo           
         return 
      endif
      MAXA(1)=1
      DO 200 I=2,JEDN
          MAXA(I+1)=MAXA(I)+MHT(I)+1
  200 CONTINUE
      DO 300 I=2,JEDN
          MAXA(I)=MAXA(I-1)+MAXA(I+1)-MAXA(I)
  300 CONTINUE
C
      NWK=MAXA(JEDN)
      DO 210 I=1,JEDN
  210 MHT(I)=MAXA(I)
      RETURN
      END
C ======================================================================
C
C ======================================================================
      SUBROUTINE IDENTIFYNODE(NEL,NODE1,NODE2,NET11,NEL1,NEL2,II)
C     IDENTIFICATION NODE AT CONTINUUM FOR 1D CONNECTING ELEMENTS
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      DIMENSION NEL(NET11,2),NELE(2) 
      NELE(1)=NEL1
      NELE(2)=NEL2   
      DO I=1,2
         IF(NELE(I).NE.0) THEN
           IF(NEL(NELE(I),1).EQ.NODE1.OR.NEL(NELE(I),2).EQ.NODE1) THEN  
             II=2 
             GO TO 10
          ELSEIF(NEL(NELE(I),1).EQ.NODE2.OR.NEL(NELE(I),2).EQ.NODE2)THEN
             II=1
             GO TO 10
           ENDIF
         ENDIF    
      ENDDO
   10 RETURN
      END	
C==========================================================================
C
C==========================================================================
	SUBROUTINE VELOCITIES1D(IDT,IDARCYMA,TT1,NZADJ,ZADFM,CORD,NEL,DARCYD,
     1           DARCYMI,EMODULUS,DELTAE,ELFLUX,VELOC,INODE,NPT,NET,
     2           JEDN,NZADP,VREME,NETIP,IDEFORM,NDIMIDT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      COMMON A(1) 
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT   
      DIMENSION IDT(NDIMIDT,NPT),IDARCYMA(NPT),TT1(JEDN),NZADJ(3,NZADP),
     1          ZADFM(NZADP),CORD(NPT,3),NEL(NET,2),DARCYD(2,NET),
     2          DARCYMI(NET),EMODULUS(NET),DELTAE(NET),ELFLUX(2,NET)
      DIMENSION CORDL(3,2),TT(2),EL0(3),VELOC(3,NPT),INODE(NPT)
      DIMENSION VELE1(3),VELE2(3)
      
      PI    = 4.*DATAN(1.D0)
      PI4   = PI/4.
      COEFF = PI/128.
C
      DO 200 NLM=1,NET
        N1=NEL(NLM,1)
        N2=NEL(NLM,2)
        DO I=1,3
          CORDL(I,1)=CORD(N1,I)
          CORDL(I,2)=CORD(N2,I)
        ENDDO  
        ELL=0.D0
        DO I=1,3
          DX=CORDL(I,2)-CORDL(I,1)
          EL0(I)=DX
          ELL= ELL+DX*DX
        ENDDO
        ELL=DSQRT(ELL)
        DO I=1,3
          EL0(I)=EL0(I)/ELL
        ENDDO
      
        DO 100 I=1,2
          TT(I)=0.D0
          NODE=NEL(NLM,I)
          II=IDT(1,NODE)
          IF(II.GT.0) THEN
            TT(I)=TT1(II)
          ELSEIF (IDARCYMA(NODE).EQ.1) THEN
            IF(NZADP.EQ.0) GO TO 100
	      DO KK=1,NZADP
	        NJ=NZADJ(1,KK)
	        IF(NJ.EQ.NODE) THEN
	          IDOF=NZADJ(2,KK)
                IF(IDOF.EQ.1) THEN
                  NF=NZADJ(3,KK)
                  FAK = ZADFM(KK)
                  CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,
     1                      IND)
                  IF(IND.NE.0) THEN    
                    STOP
                  ENDIF
                  TT(I)=FT*FAK
                  GO TO 100
                ENDIF
	        ENDIF
	      ENDDO
	    ENDIF
  100   CONTINUE 
C
        RR1   = 0.5 * DARCYD(1,NLM)
        RR2   = 0.5 * DARCYD(2,NLM)
        IF(IDEFORM.EQ.1) THEN
          EEE     = EMODULUS(NLM)
          DELTAE0 = DELTAE(NLM)
          AKEE    = 0.75/(DELTAE0*EEE)
          RR1     = RR1/(1.-RR1*AKEE*TT(1))
          RR2     = RR2/(1.-RR2*AKEE*TT(2))
        ENDIF
        AREA1 = PI*RR1*RR1
        AREA2 = PI*RR2*RR2
          
        IF(NETIP.EQ.1) THEN    
          DIAM = RR1 + RR2
          AREA = PI4*DIAM*DIAM
          AMI  = DARCYMI(NLM)
          AK   = COEFF*DIAM**4/AMI        
          QQ   = (TT(1)-TT(2))*AK/ELL
          VEL1 = QQ/AREA1
          VEL2 = QQ/AREA2
        ELSE IF (NETIP.EQ.4) THEN
                
          QQ1   = ELFLUX(1,NLM)
          QQ2   = ELFLUX(2,NLM)
          VEL1  = QQ1/AREA1
          VEL2  = QQ1/AREA2
        ENDIF
        
        DO I=1,3
          VELE1(I)    = VEL1 * EL0(I)
          VELE2(I)    = VEL2 * EL0(I)
          VELOC(I,N1) = VELOC(I,N1) + VELE1(I)
          VELOC(I,N2) = VELOC(I,N2) + VELE2(I)
        ENDDO
        
        INODE(N1) = INODE(N1) + 1
        INODE(N2) = INODE(N2) + 1
  200 CONTINUE
C      
      RETURN
      END
C ======================================================================
C
C ======================================================================
      SUBROUTINE PIPEDIAMETER(P1,P2,EEE,DELTAE0,DIAM1,DIAM2,DIAM,ITER,
     1                        KOR,NLM)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     DETERMINATION OF PIPE DIAMETER IN CASE OF DEFORMABLE WALL
      
C
C     RR0=0.5*DIAM0
C     SOLUTION ON R ONLY:
C
      RR0=0.5*DIAM1
      DEN=1.-0.75*(RR0/DELTAE0)*P1/EEE
      IF(DEN.GT.0.D0)R1=RR0/DEN
      RR0=0.5*DIAM2
      DEN=1.-0.75*(RR0/DELTAE0)*P2/EEE
      IF(DEN.GT.0.D0)R2=RR0/DEN
C     DIAMETER    
      DIAM=R1+R2
C
      RETURN
      END      
C=====================================================================
C           
C=====================================================================
      SUBROUTINE CELL1DFICTSME(IDT,IDTV,IDTVCELL,IPIPENODV,F,TT1P,TT10P,
     1  TT1C,TT10C,TT1PM,TT01PM,TT1CM,TT01CM,VOLFRACTV,VFMULTIT,
     2  DIAMSMEV,THICKSMEV,DWALLSMEV,DWALLCELLV,VOLSMEV,DIAMCELLV,
     3  WALLAREAV,HYDRCOEFV,IPARTNODEV,PARTNODEV,IACTIVENODEV,
     4  ACTIVENODEV,IADHESINODEV,ADHESINODEV,ADHICONCV,NZADJ,ZADATA1,
     5  ZADATA0,NZADNODF,ZADATM1,ZADATM0,IACTIVE,ICMTABLEC,IDVS,
     2  NZADNODVS,ZADATAVSV0,ZADATAVSV,IDLYMPHH,IDLYMPHC,RVLYMPH,
     3  HCOEFLYNODW,CCOEFLYNODW,DCOEFLYNOD,INPUTLY,ZADALYMH1,ZADALYMH0,
     4  NZADLY,HYDROCOEFC,KOR,ITER,JEDNPRES,JEDNCONC,JEDN,DT,NPT,NC,
     5  INDFLUX,ICONV,INDIFFUS,NZADP,NDIMIDT,NDIMCELL,NDIMPMAX,
     6  NDIMWCAPMAX,IWALLCAPCC,WALLCAPCC,NDIMWCELLMAX,NDIMAMAX,
     7  NDIMADHMAX,IADHIMAX,NZADPMAX,IDD1,IDD2,IPASSME,MULTITIS,
     8  MULTIMOL,MM)
                     
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)    
C
C     FICTITIOUS 1D ELEMENTS CONNECTING CAPILLARY AND TISSUE
C
      COMMON/CSMEARED/ISMEARED,VOLFRACT,POROSSME,LVOLFRACTV,LDWALLSMEV,
     1 LPWALLSMEV,LDIAMSMEV,LTHICKSMEV,IPARTSME,LVOLSMEV,IRAVSME,DRAVSME
     
      COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
       COMMON/CCELLIN/INDCELLIN,INDCELLINV(10),VFVS(10,5),DIAMVS(10,5),
     1 RAVVS(10,5),DDIFFICY(10,10),DDIFFIVS(10,10,5),DDIFFICM(10,10,5)
     2 ,IPARTIVS(10,10,5),PARTIVS(10,10,5),NDIMVS,NVSMAX,LIDVS,NZADVS,
     3 LNZADNODVS,LNZADNFVS,LNZADFVS,LZADVALUEVS,LZADATAVS0,LZADATAVS
      COMMON/CLYMPH/INDLYMPH,INDLYMPHH,INDLYMPHC,LRVLYMPH,LPLYMHV,
     1 LCLYMHV,TABLYHW(10),TABLYCW(10,10),TABLYD(10),TENSORLYP(10,6),
     2 TENSORLYC(10,10,6),ITABLYP,ITABLYC,ITABLYD,LHCOEFLYNOD,
     3 LHCOEFLYNODW,LCCOEFLYNOD,LCCOEFLYNODW,LDCOEFLYNOD,LIDLYMPHH,
     4 LIDLYMPHC
      COMMON/CLYMHZADA/NZADLYMPH,LINPUTLY,LZADVALUELY,LZADALYMH1,
     1 LZADALYMH0,NZADPLYV(10),NZADLYMPHMX
C
      DIMENSION IDT(NDIMIDT,NPT),IDTV(MULTIMOL,NDIMIDT,NPT),
     1  IDTVCELL(MULTIMOL,NDIMCELL,NPT),IPIPENODV(NPT),F(JEDN),
     2  TT1P(JEDNPRES),TT10P(JEDNPRES),TT1C(JEDNCONC),TT10C(JEDNCONC),
     2  TT1PM(MULTIMOL,JEDNPRES),TT01PM(MULTIMOL,JEDNPRES),
     3  TT1CM(MULTIMOL,JEDNCONC),TT01CM(MULTIMOL,JEDNCONC),
     4  VOLFRACTV(NPT),VFMULTIT(NDIMCELL,NPT),DIAMSMEV(NPT),
     5  THICKSMEV(NPT),DWALLSMEV(MULTIMOL,NPT),
     6  DWALLCELLV(MULTIMOL,NDIMCELL,NPT),VOLSMEV(NPT),
     7  DIAMCELLV(NDIMCELL,NPT),WALLAREAV(NPT),HYDRCOEFV(NPT),
     7  IPARTNODEV(MULTIMOL,NDIMPMAX,NPT),
     8  PARTNODEV(MULTIMOL,NDIMPMAX,NPT),
     8  IACTIVENODEV(MULTIMOL,NDIMAMAX,NPT),
     9  ACTIVENODEV(MULTIMOL,NDIMAMAX,NPT),
     1  IADHESINODEV(MULTIMOL,NDIMADHMAX,NPT),   
     1  ADHESINODEV(MULTIMOL,NDIMADHMAX,NPT),
     2  ADHICONCV(MULTIMOL,IADHIMAX,NPT),
     1  NZADJ(3,NZADP),ZADATA1(NZADP),ZADATA0(NZADP),
     2  NZADNODF(MULTIMOL,3,NZADPMAX),ZADATM1(MULTIMOL,NZADPMAX),
     3  ZADATM0(MULTIMOL,NZADPMAX),IACTIVE(4) 
      DIMENSION IDVS(MULTIMOL,NDIMVS,NVSMAX,NPT),NZADNODVS(4,NZADVS),
     1  ZADATAVSV0(NZADVS),ZADATAVSV(NZADVS) 
      DIMENSION IDLYMPHH(NPT),IDLYMPHC(MULTIMOL,NPT),RVLYMPH(NPT),
     1          HCOEFLYNODW(NPT),CCOEFLYNODW(MULTIMOL,NPT),
     2          DCOEFLYNOD(NPT)
      DIMENSION INPUTLY(MULTIMOL,3,NZADLYMPHMX),
     1          ZADALYMH1(MULTIMOL,NZADLYMPHMX),
     2          ZADALYMH0(MULTIMOL,NZADLYMPHMX)
     
      DIMENSION SKE(2,2),F3(2),T11(2),EM(2,2),T110(2),PV(2),
     1          LM(2)
       
C     PIPE NODE
      IF(IPIPENODV(NC).EQ.1) RETURN
C
C     CONTINUUM NODE - CONNECTING CAPILLARY AND TISSUE DOMAINS
C
      NN1=2
      ZADPEX=0.D0
      ZADCEX=0.D0
C
      DMASS=0.D0
      DT3=3.*DT
      DT6=6.*DT
      IF(MULTIMOL.EQ.1) THEN
         JJ1=IDT(IDD1,NC)
         JJ2=IDT(IDD2,NC)
      ELSE
         JJ1=IDTV(MM,IDD1,NC)
         JJ2=IDTV(MM,IDD2,NC)
      ENDIF
      LM(1)=JJ1
      LM(2)=JJ2
      IF(IPASSME.EQ.2.AND.ICONV.EQ.1) THEN
         IF(MULTIMOL.EQ.1) THEN
            IP1=IDT(1,NC)
            IP2=IDT(2,NC)
            IF(IP1.GT.0)PV(1)=TT1P(IP1)
            IF(IP2.GT.0) PV(2)=TT1P(IP2)
        ELSE
            IP1=IDTV(MM,1,NC)
            IP2=IDTV(MM,2,NC)
            IF(IP1.GT.0)PV(1)=TT1PM(MM,IP1)
            IF(IP2.GT.0)PV(2)=TT1PM(MM,IP2)     
        ENDIF
      ENDIF
      IF(INDLYMPH.EQ.1) THEN
         ID1LY=JJ2
      ENDIF
      IF(JJ1.EQ.0.AND.JJ2.EQ.0) GO TO 200
C
      DO 20 I = 1,2
         F3(I)=0.D0
         T11(I)=0.D0
         T110(I)=0.D0
   20 CONTINUE
      DO 23 I=1,2
         JPP=IP1
         IF(I.EQ.2) JPP=IP2
         IF(LM(I).GT.0) THEN
            IF(IPASSME.EQ.1) THEN
               IF(MULTIMOL.EQ.1) THEN
                  T11(I)=TT1P(LM(I))
                  T110(I)=TT10P(LM(I))
               ELSE
                  T11(I)=TT1PM(MM,LM(I))
                  T110(I)=TT01PM(MM,LM(I))
               ENDIF
            ELSE
               IF(MULTIMOL.EQ.1) THEN
                   T11(I)=TT1C(LM(I))
                   T110(I)=TT10C(LM(I))
               ELSE
                  T11(I)=TT1CM(MM,LM(I))
                  T110(I)=TT01CM(MM,LM(I))
               ENDIF
            ENDIF     
         ELSE IF(LM(I).EQ.0) THEN
            IF(MULTIMOL.GT.1) GO TO 24
            DO J=1,NZADP
              IF(NZADJ(1,J).EQ.NC) THEN
                  IF(IPASSME.EQ.1.AND.(NZADJ(2,J).EQ.1.OR.
     1                                NZADJ(2,J).EQ.2)) THEN
                    T11(I)=ZADATA1(J)
                    T110(I)=ZADATA0(J)
                    IF(I.EQ.2)ZADPEX=T11(I)
                    GO TO 23
                  ELSEIF (IPASSME.EQ.2) THEN
                     IF((NZADJ(2,J).EQ.3.OR.NZADJ(2,J).EQ.4)) THEN 
                        T11(I) =ZADATA1(J)
                        T110(I)=ZADATA0(J)
                        IF(I.EQ.2)ZADCEX=T11(I)
                        GO TO 22
                     ENDIF
                  ENDIF                      
               ENDIF        
           ENDDO
   22    CONTINUE
         GO TO 25
   24    CONTINUE
C
C        MULTIMOLAR CASE
C
         DO J=1,NZADP  
            IF(NZADNODF(MM,1,J).EQ.NC) THEN
               IF(IPASSME.EQ.1.AND.(NZADNODF(MM,2,J).EQ.1.OR.
     1                              NZADNODF(MM,2,J).EQ.2)) THEN
                  T11(I)=ZADATM1(MM,J)
                  T110(I)=ZADATM0(MM,J)
                  IF(I.EQ.2)ZADPEX=T11(I)
                  GO TO 23
               ELSEIF (IPASSME.EQ.2) THEN
                IF((NZADNODF(MM,2,J).EQ.3.OR.NZADNODF(MM,2,J).EQ.4))THEN
                        T11(I) =ZADATM1(MM,J)
                        T110(I)=ZADATM0(MM,J)
                        IF(I.EQ.2)ZADCEX=T11(I)
                        GO TO 26
                     ENDIF
                  ENDIF                      
               ENDIF        
           ENDDO
   26    CONTINUE
       ENDIF
   25  CONTINUE
         IF(IPASSME.EQ.1) GO TO 23
         IF(ICONV.EQ.0.OR.JPP.GT.0) GO TO 23
C
C        PRESCRIBED PRESSURES FOR CONVECTION IN DIFFUSION  
C
         IF(MULTIMOL.EQ.1) THEN
            DO J=1,NZADP
               IF(NZADJ(1,J).EQ.NC) THEN
                  IF(NZADJ(2,J).EQ.I) THEN
                     PV(I)=ZADATA1(J)
                     GO TO 23
                  ENDIF
               ENDIF    
            ENDDO 
         ELSE
            DO J=1,NZADP
               IF(NZADNODF(MM,1,J).EQ.NC) THEN
                  IF(NZADNODF(MM,1,J).EQ.I) THEN
                     PV(I)=ZADATM1(MM,J)
                     GO TO 23
                  ENDIF
               ENDIF    
            ENDDO         
         ENDIF  
   23  CONTINUE
C
      NNPART=0
      IP1=0
      IP2=0
      PP1=0.D0
      PP2=0.D0
      IF(IPASSME.EQ.2.AND.IPARTC(2,MM).GT.0) THEN
         IF(NDIMPMAX.EQ.0) THEN
            NNPART=1
            IP1=1
            PP1=PARTC(2,MM)
         ELSE 
            KK=2
            IF(IPARTNODEV(MM,1,NC).EQ.0)KK=1
            IF(IPARTNODEV(MM,KK,NC).EQ.1) THEN
                NNPART=1
                IP1=1
                PP1=PARTNODEV(MM,KK,NC)
             ENDIF
         ENDIF
         IF(NNPART.EQ.1)T11(1)=T11(1)*PP1    
      ENDIF
C     
      IF(IPASSME.EQ.1) THEN
         IF(ICMTABLEC.EQ.3) THEN
            HHH=HYDRCOEFV(NC)
         ELSE
            HHH=HYDROCOEFC
         ENDIF
         AK=WALLAREAV(NC)*HHH
         AKV=0.D0
      ELSE
         IF(NDIMWCAPMAX.EQ.0. AND.IWALLCAPCC.NE.3) THEN
            DDWALLC=WALLCAPCC
         ELSE
            DDWALLC=DWALLSMEV(MM,NC)
         ENDIF
         AK=WALLAREAV(NC)*DDWALLC 
         EMC=WALLAREAV(NC)*THICKSMEV(NPT)
         EMC=0.D0
         EM(1,1)=EMC/DT3
         EM(1,2)=EMC/DT6
         EM(2,2)=EM(1,1)
         EM(2,1)=EM(1,2) 
         AKV=0.D0
         IF(ICONV.EQ.1) THEN
            IF(ICMTABLEC.EQ.3) THEN
               HHH=HYDRCOEFV(NC)
            ELSE
               HHH=HYDROCOEFC
            ENDIF
            AKV=WALLAREAV(NC)*HHH
            AKV=0.5*AKV*(PV(1)-PV(2))       
         ENDIF
      ENDIF       
      SKE(1,1)=AK-AKV
      SKE(2,2)=AK+AKV
      SKE(1,2)=-AK+AKV
      SKE(2,1)=-AK-AKV
      DO 2 I=1,2
         DO 2 J=1,2  
         SKE(I,J)=SKE(I,J)+EM(I,J)
    2 CONTINUE
C
C     CORRECTION DUE TO ADHESION
C
      AADHES11DT=0.D0
      IF(IADHISEC(2,MM).GT.0.AND.IPASSME.EQ.2) THEN
         AADHES11=0.D0
         AADHES22=0.D0
         IF(NDIMADHMAX.EQ.0.OR.IADHISEC(2,MM).NE.3) THEN
            IF(IADHISEC(2,MM).GT.0) THEN
               AADHES11=ADHISEC(1,2,MM)
               AADHES22=ADHISEC(2,2,MM)
            ENDIF 
         ELSE
            KK=1
            IF(IADHISEC(1,MM).EQ.3)KK=2
            NADHIS1=IADHESINODEV(MM,KK,NC)
            IF(NADHIS1.GT.0) THEN
               AADHES11=ADHESINODEV(MM,KK,NC)
               AADHES22=ADHESINODEV(MM,KK+1,NC)
            ENDIF
         ENDIF
         KK=1
         IF(IADHISEC(1,MM).GT.0)KK=2
         AADHES11DT=AADHES11*DT
         AADHES22DT=AADHES22*DT
         ADHDTT=ADHICONCV(MM,KK,NC)
         DADHESC=AADHES11DT*T11(1)-AADHES22DT*ADHICONCV(MM,KK,NC)
         ADHICONCV(MM,KK,NC)=ADHICONCV(MM,KK,NC)+DADHESC
         IF(ADHICONCV(MM,KK,NC).LT.0.D0) THEN
            DADHESC=-ADHDTT
            ADHICONCV(MM,KK,NC)=0.D0
         ENDIF 
         T11(1)=T11(1)-DADHESC
      ENDIF  
      DO 5 I=1,2
         DO 5 J=1,2
           F3(I)=F3(I)-SKE(I,J)*T11(J)+EM(I,J)*T110(J)
    5 CONTINUE
      SKE(1,1)=SKE(1,1)+AADHES11DT
C      SKE(2,2)=SKE(2,2)+AADHES11DT 
      IF(NNPART.EQ.1.AND.INDFLUX.EQ.0) THEN
        IF(IP1.EQ.1) THEN
           SKE(1,1)=SKE(1,1)*PP1
           SKE(2,1)=SKE(2,1)*PP1
        ENDIF
        IF(IP2.EQ.1) THEN
           SKE(1,2)=SKE(1,2)*PP2
           SKE(2,2)=SKE(2,2)*PP2
        ENDIF
      ENDIF

C
      IF(INDFLUX.EQ.1.AND.IPASSME.EQ.2) THEN
         DMASS=DMASS+F3(2)
         GO TO 200
      ENDIF
C
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
          CALL sparseassembler_addelemmatrix(NN1,LM,SKE)
#endif
          CALL SPAKDE(F,F3,LM,NN1,JEDN)
C     
  200 CONTINUE
C
      IF(INDFLUX.EQ.1) THEN
         AMASSCAP=AMASSCAP+DMASS*DT
      ENDIF
C      
      IF(IPASSME.EQ.1.OR.NDIMCELL.EQ.0) THEN
         IF(INDLYMPH.EQ.0)RETURN
         GO TO 500
      ENDIF
C----------------------------------------------------------
C     CONNECTIVITY ELEMENTS FOR CELLS
C------------------------------------------------------------ 
      IF(MULTIMOL.EQ.1) THEN                     
         JJ1=IDT(4,NC)
      ELSE
         JJ1=IDTV(MM,4,NC)
      ENDIF  
      LM(1)=JJ1        
      DO 300 ID=1,NDIMCELL 
      JJ2=IDTVCELL(MM,ID,NC)
      LM(2)=JJ2
      IF(JJ1.EQ.0.AND.JJ2.EQ.0) GO TO 300
C
      DO I = 1,2
         F3(I)=0.D0
         T11(I)=0.D0
         T110(I)=0.D0
      ENDDO
      DO 223 I=1,2
         IF(LM(I).GT.0) THEN
             IF(MULTIMOL.EQ.1) THEN
                 T11(I)=TT1C(LM(I))
                 T110(I)=TT10C(LM(I))
             ELSE
                T11(I)=TT1CM(MM,LM(I))
                T110(I)=TT01CM(MM,LM(I))
             ENDIF    
         ELSE IF(LM(I).EQ.0) THEN
            IF(MULTIMOL.GT.1) GO TO 224
            DO J=1,NZADP
              IF(NZADJ(1,J).EQ.NC) THEN
                 IF(NZADJ(2,J).EQ.ID) THEN 
                     T11(I) =ZADATA1(J)
                     T110(I)=ZADATA0(J)
                     GO TO 223
                 ENDIF                      
              ENDIF        
           ENDDO
           GO TO 223
  224      CONTINUE
C
C          MULTIMOLAR CASE
C
           DO J=1,NZADP  
             IF(NZADNODF(MM,1,J).EQ.NC) THEN
                IF(NZADNODF(MM,2,J).EQ.ID)THEN
                   T11(I) =ZADATM1(MM,J)
                   T110(I)=ZADATM0(MM,J)
                   GO TO 223
                ENDIF                      
            ENDIF        
          ENDDO
        ENDIF
  223 CONTINUE
 
      NNPART=0
      IP1=0
      IP2=0
      PP1=0.D0
      PP2=0.D0
      IF(IPARTC(2+ID,MM).GT.0) THEN
         IF(NDIMPMAX.EQ.0) THEN 
             NNPART=1
             IP1=1
             PP1=PARTC(2+ID,MM)
         ELSE
             KK=0
             DO I=3,2+ID 
                IF(IPARTC(I,MM).EQ.3)KK=KK+1                 
             ENDDO
             IF(KK.GT.0) THEN
                NPARTN=IPARTNODEV(MM,KK,NC)   
                IF(NPARTN.EQ.1) THEN
                   NNPART=1
                   IP1=1
                   PP1=PARTNODEV(MM,KK,NC) 
                ENDIF        
             ENDIF 
          ENDIF
          IF(NNPART.EQ.1)T11(1)=T11(1)*PP1
      ENDIF   
      IF(NDIMWCELLMAX.EQ.0) THEN
         DDIFUS=WALLCELLC(ID,MM)
      ELSE 
         KK=0
         DO I=1,ID
            IF(IWALLCELLC(I,MM).EQ.3)KK=KK+1
         ENDDO 
         DDIFUS=DWALLCELLV(MM,KK,NC)
      ENDIF 
      SKE(1,1)=0.D0
      SKE(1,2)=0.D0
      SKE(2,1)=0.D0
      SKE(2,2)=0.D0 
      AREACOEF=6./DIAMCELLV(ID,NC)              
      AREA=AREACOEF*VFMULTIT(ID,NC)*VOLSMEV(NC)
      IF(IACTIVEC(ID,MM).GT.0) THEN 
         AAIN=0.D0
         AAOUT=0.D0    
         IF(IACTIVEC(ID,MM).NE.3) THEN
            AAIN=ACTIVEC(1,ID,MM)
            AAOUT=ACTIVEC(2,ID,MM)
         ELSE
            KK=0
            DO I=1,ID
              IF(IACTIVEC(I,MM).EQ.3)KK=KK+1    
            ENDDO
            IF(KK.GT.0) THEN
                 IF(IACTIVENODEV(MM,KK,NC).GT.0) THEN
                    AAIN=ACTIVENODEV(MM,KK,NC)
                    AAOUT=ACTIVENODEV(MM,KK+1,NC)
                 ENDIF  
            ENDIF          
         ENDIF
         SKE(1,1)=AAIN*AREA
         SKE(2,2)=AAOUT*AREA
         SKE(1,2)=-SKE(2,2) 
         SKE(2,1)=-SKE(1,1)     
      ENDIF
      AK=AREA*DDIFUS
      EMC=WALLAREAV(NC)*THICKSMEV(NPT)
      EMC=0.D0
      EM(1,1)=EMC/DT3
      EM(1,2)=EMC/DT6     
      EM(2,2)=EM(1,1)
      EM(2,1)=EM(1,2) 
      AKV=0.D0      
      SKE(1,1)=SKE(1,1)+AK-AKV
      SKE(2,2)=SKE(2,2)+AK+AKV
      SKE(1,2)=SKE(1,2)-AK+AKV
      SKE(2,1)=SKE(2,1)-AK-AKV
      DO I=1,2
         DO  J=1,2  
           SKE(I,J)=SKE(I,J)+EM(I,J)
         ENDDO
      ENDDO
C
C     CORRECTION DUE TO ADHESION
C
      AADHES11DT=0.D0
      IF(IADHIMAX.GT.0.AND.IPASSME.EQ.2) THEN
         AADHES11=0.D0
         AADHES22=0.D0
         ID2=2+ID
         IF(NDIMADHMAX.EQ.0.OR.IADHISEC(ID2,MM).NE.3) THEN
            IF(IADHISEC(ID2,MM).GT.0) THEN
               AADHES11=ADHISEC(1,ID2,MM)
               AADHES22=ADHISEC(2,ID2,MM)
            ENDIF 
         ELSE
            KK=0
            DO I=1,ID2
               IF(IADHISEC(I,MM).EQ.3)KK=KK+1
            ENDDO
            NADHIS1=IADHESINODEV(MM,KK,NC)
            IF(NADHIS1.GT.0) THEN
               AADHES11=ADHESINODEV(MM,KK,NC)
               AADHES22=ADHESINODEV(MM,KK+1,NC)
            ENDIF
         ENDIF
         KK=0
         DO K=1,ID2
            IF(IADHISEC(K,MM).GT.0)KK=KK+1
         ENDDO
         AADHES11DT=AADHES11*DT
         AADHES22DT=AADHES22*DT
         ADHDTT=ADHICONCV(MM,KK,NC)
         DADHESC=AADHES11DT*T11(1)-AADHES22DT*ADHICONCV(MM,KK,NC)
         ADHICONCV(MM,KK,NC)=ADHICONCV(MM,KK,NC)+DADHESC
         IF(ADHICONCV(MM,KK,NC).LT.0.D0) THEN
            DADHESC=-ADHDTT
            ADHICONCV(MM,KK,NC)=0.D0
         ENDIF          
         T11(1)=T11(1)-DADHESC
      ENDIF 
      DO I=1,2
         DO J=1,2
           F3(I)=F3(I)-SKE(I,J)*T11(J)+EM(I,J)*T110(J)
         ENDDO
      ENDDO 
      
      SKE(1,1)=SKE(1,1)+AADHES11DT
C      SKE(2,2)=SKE(2,2)+AADHES11DT     
C 
      IF(NNPART.EQ.1.AND.INDFLUX.EQ.0) THEN
        IF(IP1.EQ.1) THEN
           SKE(1,1)=SKE(1,1)*PP1
           SKE(2,1)=SKE(2,1)*PP1
        ENDIF
        IF(IP2.EQ.1) THEN
           SKE(1,2)=SKE(1,2)*PP2
           SKE(2,2)=SKE(2,2)*PP2
        ENDIF
      ENDIF
C
      IF(INDFLUX.EQ.1.AND.IPASSME.EQ.2) THEN
         DMASS=DMASS+F3(2)
         GO TO 300
      ENDIF
C
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
          CALL sparseassembler_addelemmatrix(NN1,LM,SKE)
#endif
          CALL SPAKDE(F,F3,LM,NN1,JEDN)
  300 CONTINUE  
C
      IF(INDCELLIN.EQ.0) THEN
         IF(INDLYMPH.EQ.0)RETURN
         GO TO 500
      ENDIF
C -------------------------------------------------------------
C     CONNECTIVITY ELEMENTS FOR VESICLES WITHIN CELLS
C--------------------------------------------------------------
C     LOOP OVER CELLS  
      KIN=0     
      DO 400 ID=1,NDIMCELL 
      NVSE=INDCELLINV(ID)
      IF(NVSE.EQ.0) GO TO 400 
      KIN=KIN+1  
      JJ1=IDTVCELL(MM,ID,NC)
      LM(1)=JJ1
C     LOOP OVER VESICLES
      AREAC=VFMULTIT(ID,NC)*VOLSMEV(NC)
      DO 350 NN=1,NVSE
      JJ2=IDVS(MM,KIN,NN,NC)
      LM(2)=JJ2
      IF(JJ1.EQ.0.AND.JJ2.EQ.0) GO TO 350
      DO I = 1,2
         F3(I)=0.D0
         T11(I)=0.D0
         T110(I)=0.D0
      ENDDO
      DO 323 I=1,2
         IF(LM(I).GT.0) THEN
             IF(MULTIMOL.EQ.1) THEN
                 T11(I)=TT1C(LM(I))
                 T110(I)=TT10C(LM(I))
             ELSE
                T11(I)=TT1CM(MM,LM(I))
                T110(I)=TT01CM(MM,LM(I))
             ENDIF    
         ELSE IF(LM(I).EQ.0) THEN
            IF(I.EQ.2) GO TO 360
            IF(MULTIMOL.GT.1) GO TO 324
            DO J=1,NZADP
              IF(NZADJ(1,J).EQ.NC) THEN
                 IF(NZADJ(2,J).EQ.ID) THEN 
                     T11(I) =ZADATA1(J)
                     T110(I)=ZADATA0(J)
                     GO TO 323
                 ENDIF                      
              ENDIF        
           ENDDO
           GO TO 323
  324      CONTINUE
C          MULTIMOLAR CASE
           DO J=1,NZADP  
             IF(NZADNODF(MM,1,J).EQ.NC) THEN
                IF(NZADNODF(MM,2,J).EQ.ID)THEN
                   T11(I) =ZADATM1(MM,J)
                   T110(I)=ZADATM0(MM,J)
                   GO TO 323
                ENDIF                      
            ENDIF        
          ENDDO
        ENDIF
      GO TO 323
  360 CONTINUE
C     VESICLE PRESCRIBED VALUE
      IF(NZADVS.GT.0) THEN
	  DO KK=1,NZADVS
	     NODE=NZADNODVS(1,KK)
           IMM=NZADNODVS(2,KK)
           ICC=NZADNODVS(3,KK)
           IDOF=NZADNODVS(4,KK)
           IF(NODE.EQ.NC.AND.IMM.EQ.MM.AND.ICC.EQ.ID.AND.
     1        IDOF.EQ.NN) THEN                      
                 T11(I)= ZADATAVSV(KK) 
                 T110(I)= ZADATAVSV0(KK)
                 GO TO 323
           ENDIF
        ENDDO   
	ENDIF    
  323 CONTINUE	  
      NNPART=0
      IP1=0
      IP2=0
      PP1=0.D0
      PP2=0.D0
      IF(IPARTIVS(ID,MM,NN).GT.0) THEN
         NNPART=1
         IP1=1
         PP1=PARTIVS(ID,MM,NN)
         T11(1)=T11(1)*PP1
      ENDIF   
      DDIFUS=DDIFFICM(ID,MM,NN)
      SKE(1,1)=0.D0
      SKE(1,2)=0.D0
      SKE(2,1)=0.D0
      SKE(2,2)=0.D0 
      AREACOEF=RAVVS(ID,NN)           
      AREA=AREAC*AREACOEF*VFVS(ID,NN)
      AK=AREA*DDIFUS
      EMC=0.D0
      EM(1,1)=EMC/DT3
      EM(1,2)=EMC/DT6     
      EM(2,2)=EM(1,1)
      EM(2,1)=EM(1,2) 
      AKV=0.D0      
      SKE(1,1)=SKE(1,1)+AK-AKV
      SKE(2,2)=SKE(2,2)+AK+AKV
      SKE(1,2)=SKE(1,2)-AK+AKV
      SKE(2,1)=SKE(2,1)-AK-AKV
      DO I=1,2
         DO  J=1,2  
           SKE(I,J)=SKE(I,J)+EM(I,J)
         ENDDO
      ENDDO
C 
      DO I=1,2
         DO J=1,2
           F3(I)=F3(I)-SKE(I,J)*T11(J)+EM(I,J)*T110(J)
         ENDDO
      ENDDO    
C 
      IF(NNPART.EQ.1) THEN
        IF(IP1.EQ.1) THEN
           SKE(1,1)=SKE(1,1)*PP1
           SKE(2,1)=SKE(2,1)*PP1
        ENDIF
        IF(IP2.EQ.1) THEN
           SKE(1,2)=SKE(1,2)*PP2
           SKE(2,2)=SKE(2,2)*PP2
        ENDIF
      ENDIF
C
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
          CALL sparseassembler_addelemmatrix(NN1,LM,SKE)
#endif
          CALL SPAKDE(F,F3,LM,NN1,JEDN)
  350 CONTINUE        
  400 CONTINUE
      IF(INDLYMPH.EQ.0) RETURN
C-------------------------------------------------------------------------
C     LYMPHATIC SYSTEM - TRANSPORT FROM EXTRACELLUALR SPACE TO LYMPH SPACE 
C-------------------------------------------------------------------------     
  500 CONTINUE 
C  
C     TRANSPORT THROUGH WALLS OF LYMPHATIC SYSTEM
      DMASS=0.D0
C      DO 600 NLM1= 1,NE1D 
C
      DO 620 I = 1,2
         LM(I)=0
         F3(I)=0.D0
         T11(I)=0.D0
         T110(I)=0.D0
  620 CONTINUE
C
      I1=ID1LY
      LM(1)=I1
      VOLI=VOLSMEV(NC)/(1.-VOLFRACTV(NC)-RVLYMPH(NC))
      VOLF=RVLYMPH(NC)*VOLI
      THICKA=0.D0
      IF(ITABLYD.EQ.1) THEN
         DIAM=TABLYD(1)
      ELSE
         DIAM=DCOEFLYNOD(NC)
      ENDIF
C
      IF(IPASSME.EQ.1) THEN
         IF(ITABLYP.EQ.1) THEN
             DDIFUS=TABLYHW(1)
         ELSE
             DDIFUS=HCOEFLYNODW(NC)
         ENDIF  
C
         I2=IDLYMPHH(NC)    ! PRESSURE
         IF(MULTIMOL.EQ.1) THEN
            IF(I1.GT.0) THEN
               T11(1)=TT1P(I1)
               T110(1)=TT10P(I1)
            ELSE
               T11(1)=ZADPEX
            ENDIF
            IF(I2.GT.0) THEN
               T11(2)=TT1P(I2)
               T110(2)=TT10P(I2)
            ELSE 
               DO K=1,NZADLY
                   NODE=INPUTLY(MM,1,K)
                   IDOF=INPUTLY(MM,2,K) 
                   IF(NODE.EQ.NC.AND.IDOF.EQ.1) THEN
                      T11(2)=ZADALYMH1(MM,K)    ! PRESCRIBEL LYMPH 
                      T110(2)=ZADALYMH0(MM,K)
                      GO TO 515
                   ENDIF 
                ENDDO                 
            ENDIF
         ELSE 
            IF(I1.GT.0) THEN
               T11(1)=TT1PM(MM,I1)
               T110(1)=TT01PM(MM,I1)
            ELSE
               T11(1)=ZADPEX
            ENDIF
            IF(I2.GT.0) THEN
               T11(2)=TT01PM(MM,I2)
               T110(2)=TT01PM(MM,I2)
            ELSE
               DO K=1,NZADLY
                  NODE=INPUTLY(MM,1,K)
                  IDOF=INPUTLY(MM,2,K) 
                  IF(NODE.EQ.NC.AND.IDOF.EQ.1) THEN
                      T11(2)=ZADALYMH1(MM,K)    ! PRESCRIBEL LYMPH 
                      T110(2)=ZADALYMH0(MM,K)
                      GO TO 515
                  ENDIF 
               ENDDO                  
            ENDIF          
         ENDIF 
      ELSE
         IF(ITABLYC.EQ.1) THEN
             DDIFUS=TABLYCW(MM,1)
         ELSE
             DDIFUS=CCOEFLYNODW(MM,NC)
         ENDIF 
C
         I2=IDLYMPHC(MM,NC)    ! CONCENTRATION
         IF(MULTIMOL.EQ.1) THEN
            IF(I1.GT.0) THEN
               T11(1)=TT1C(I1)
               T110(1)=TT10C(I1)
            ELSE
               T11(1)=ZADCEX                                
            ENDIF
            IF(I2.GT.0) THEN
               T11(2)=TT1C(I2)
               T110(2)=TT10C(I2)
            ELSE
               DO K=1,NZADLY
                  NODE=INPUTLY(MM,1,K)
                  IDOF=INPUTLY(MM,2,K) 
                  IF(NODE.EQ.NC.AND.IDOF.EQ.2) THEN
                      T11(2)=ZADALYMH1(MM,K)    ! PRESCRIBEL LYMPH 
                      T110(2)=ZADALYMH0(MM,K)
                      GO TO 515   
                  ENDIF 
              ENDDO                  
            ENDIF          
         ELSE 
            IF(I1.GT.0) THEN
               T11(1)=TT1CM(MM,I1)
               T110(1)=TT01CM(MM,I1)
            ELSE
               T11(1)=ZADCEX    
            ENDIF
            IF(I2.GT.0) THEN
               T11(2)=TT01CM(MM,I2)
               T110(2)=TT01CM(MM,I2)
            ELSE
               DO K=1,NZADLY
                  NODE=INPUTLY(MM,1,K)    
                  IDOF=INPUTLY(MM,2,K) 
                  IF(NODE.EQ.NC.AND.IDOF.EQ.2) THEN
                      T11(2)=ZADALYMH1(MM,K)    ! PRESCRIBEL LYMPH 
                      T110(2)=ZADALYMH0(MM,K)
                      GO TO 515
                  ENDIF 
               ENDDO            
            ENDIF              
         ENDIF
      ENDIF 
 515  CONTINUE              
      NODE2=NC
      LM(2)=I2
C
      NNPART=0
      IP1=0
      IP2=0
      PP1=0.D0
      PP2=0.D0
      IPART=0
C      IF(NDIMPMAX.EQ.0)THEN
C          IF(IPARTCC.NE.0) THEN
C            IP1=1
C            PP1=PARTCC
C          ENDIF
C      ELSE
C         KK=2
C         IF(IPARTNODEV(MM,1,NC).EQ.0)KK=1
C         IF(IPARTNODEV(MM,KK,NC).GT.0) THEN
C             IP1=1
C             PP1=PARTNODEV(MM,KK,NC)
C         ENDIF     
C      ENDIF
C     
      IF(IRAVSME.EQ.1) THEN
        ACAPI = DRAVSME*VOLF
      ELSE
        ACAPI=4.*VOLF/DIAM
      ENDIF
C        
      AK=ACAPI*DDIFUS
      SKE(1,1)=AK
      SKE(2,2)=AK
      SKE(1,2)=-AK
      SKE(2,1)=-AK
      EMC=ACAPI*THICKA
      EMC=0.D0
      EM(1,1)=EMC/DT3
      EM(1,2)=EMC/DT6
      EM(2,2)=EM(1,1)
      EM(2,1)=EM(1,2)
      DO 62 I=1,2
         DO 62 J=1,2  
         SKE(I,J)=SKE(I,J)+EM(I,J)
   62 CONTINUE
      DO 65 I=1,2
         DO 65 J=1,2
         F3(I)=F3(I)-SKE(I,J)*T11(J)+EM(I,J)*T110(J)
   65 CONTINUE
C     EXCLUDED PARTITIONING FOR LYMPHATIC WALLS
C      IF(NNPART.EQ.1.AND.INDFLUX.EQ.0) THEN
C        IF(IP1.EQ.1) THEN
C           SKE(1,1)=SKE(1,1)*PP1
C           SKE(1,2)=SKE(1,2)*PP1
C        ENDIF
C        IF(IP2.EQ.1) THEN
C           SKE(2,1)=SKE(2,1)*PP2
C           SKE(2,2)=SKE(2,2)*PP2
C        ENDIF
C      ENDIF
C
      IF(INDFLUX.EQ.1) THEN
         DMASS=DMASS+F3(2)
         GO TO 600
      ENDIF
C
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
          CALL sparseassembler_addelemmatrix(NN1,LM,SKE)
#endif
          CALL SPAKDE(F,F3,LM,NN1,JEDN)
C     
  600 CONTINUE
C      IF(INDFLUX.EQ.1) THEN
C         AMASSLY=AMASSLY+DMASS*DT
C      ENDIF          
C
      RETURN
      END
C=====================================================================
C           
C=====================================================================    
      SUBROUTINE PRINTADHESED(IPIPENODV,VFMULTIT,VOLSMEV,DIAMCELLV,
     1  WALLAREAV,IADHESINODEV,ADHESINODEV,ADHICONCV,AMASADHV,KOR,
     2  NPT,NDIMCELL,NDIMADHMAX,IADHIMAX,MULTIMOL,KDIM,MM)     
           
C     PRINTOUT ADHESION CONCENTRATION AND ADHRED MASS OVER NODES                                      
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)    
C   
      COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
     
C
      DIMENSION IPIPENODV(NPT),VFMULTIT(NDIMCELL,NPT),VOLSMEV(NPT),
     7  DIAMCELLV(NDIMCELL,NPT),WALLAREAV(NPT),
     1  IADHESINODEV(MULTIMOL,NDIMADHMAX,NPT),   
     1  ADHESINODEV(MULTIMOL,NDIMADHMAX,NPT),
     2  ADHICONCV(MULTIMOL,IADHIMAX,NPT),AMASADHV(2,NPT,KDIM)
      DIMENSION AMASSCELL(10)
C
      CALL CLEAR(AMASADHV,2*NPT*KDIM)
C
      IF(IADHISEC(2,MM).EQ.0) GO TO 250
C      
C     CAPILLARIES
      AMASSCAP=0.D0
      DO 200 NC=1,NPT
         IF(IPIPENODV(NC).EQ.1) GO TO 200
         IADHE=0
         IF(IADHISEC(2,MM).GT.0)IADHE=1
         KK=1
         IF(IADHISEC(1,MM).EQ.3)KK=2
         IF(NDIMADHMAX.GT.0) THEN
            IADHE=IADHESINODEV(MM,KK,NC)
         ENDIF
         IF(IADHE.EQ.1) THEN
            AMASADHV(1,NC,1)=ADHICONCV(MM,KK,NC)
            AMASADHV(2,NC,1)=WALLAREAV(NC)*AMASADHV(1,NC,1)*
     1                       WEIGHTMOLV(MM)
            AMASSCAP=AMASSCAP+AMASADHV(2,NC,1)
         ENDIF                   
  200 CONTINUE
C     PRINTOUT CONCENTRATIONS AND ACCUMULATED AT CAPILLARIES 
      WRITE(3,2000)
 2000 FORMAT(/' A D H E S I O N  ON  C A P I L L A R Y  WALLS'/
     1 5X,' NODE',3X,'CONCENTRATION',11X,'ADHEARED MASS')
      DO NC=1,NPT
         WRITE(3,2001) NC,AMASADHV(1,NC,1),AMASADHV(2,NC,1) 
      ENDDO
 2001 FORMAT(I10,D13.4,11X,D13.4)
      WRITE(3,2002)AMASSCAP
 2002 FORMAT(/' T O T A L   ADHEARED MASS=',D13.4) 
C
  250 CONTINUE
      IF(NDIMCELL.EQ.0) RETURN
C----------------------------------------------------------
C     ADHESION AT CELL WALLS
C------------------------------------------------------------
      CALL CLEAR(AMASADHV,2*NPT*NDIMCELL) 
      CALL CLEAR(AMASSCELL,NDIMCELL)
      DO 400 NC=1,NPT
          IF(IPIPENODV(NC).EQ.1) GO TO 400
          DO 300 ID=1,NDIMCELL 
             ID2=2+ID
             IF(IADHISEC(ID2,MM).EQ.0) GO TO 300
             AREACOEF=6./DIAMCELLV(ID,NC)              
             AREA=AREACOEF*VFMULTIT(ID,NC)*VOLSMEV(NC)
             IADHE=0
             IF(IADHISEC(ID2,MM).GT.0) THEN
                IF(NDIMADHMAX.EQ.0)IADHE=1
             ENDIF
             IF(NDIMADHMAX.GT.0) THEN
                 KK=0
                 DO I=1,ID2
                     IF(IADHISEC(I,MM).EQ.3)KK=KK+1
                 ENDDO
                 IF(IADHISEC(I,MM).EQ.3)IADHE=IADHESINODEV(MM,KK,NC)
             ENDIF
             KK=0
             DO I=1,ID2
                IF(IADHISEC(I,MM).GT.0)KK=KK+1
             ENDDO
             IF(IADHE.EQ.1) THEN
                AMASADHV(1,NC,ID)=ADHICONCV(MM,KK,NC)
                AMASADHV(2,NC,ID)=AREA*AMASADHV(1,NC,ID)*WEIGHTMOLV(MM)
                AMASSCELL(ID)=AMASSCELL(ID)+AMASADHV(2,NC,ID)
             ENDIF        
  300    CONTINUE
  400 CONTINUE     
      WRITE(3,2010)
 2010 FORMAT(/' A D H E S I O N  ON  C E L L  WALLS')
      DO 500 ID=1,NDIMCELL
         IF(IADHISEC(ID+2,MM).EQ.0) GO TO 500
         WRITE(3,2011) ID
 2011    FORMAT(' CELL NUMBER....',I5/
     1            5X,' NODE',3X,'CONCENTRATION',11X,'ADHEARED MASS')
         DO NC=1,NPT
            WRITE(3,2001) NC,AMASADHV(1,NC,ID),AMASADHV(2,NC,ID) 
         ENDDO
  500 CONTINUE
      WRITE(3,2012)
 2012 FORMAT(/' T O T A L ADHEARED MASS'/
     1   ' CELL NO',5X,'MASS',5X,'CELL NO',5X,'MASS...') 
      WRITE(3,2013)((ID,AMASSCELL(ID)),ID=1,NDIMCELL)
 2013 FORMAT(10(I5,2X,D13.4,5X))     
              
C
      RETURN
      END                 
C=====================================================================
C
C=====================================================================
      SUBROUTINE CAP1DFICTSME(IDT,F,TT1,TT10,VOLFRACTV,DIAMSMEV,
     1           THICKSMEV,DWALLSMEV,PWALLSMEV,VOLSMEV,IDLYMPHH,
     2           IDLYMPHC,RVLYMPH,HCOEFLYNODW,CCOEFLYNODW,DCOEFLYNOD,
     3           CONCSYS,CONCSYS0,IPART,KOR,ITER,JEDN,DT,NPT,NC,INDFLUX,
     4           NDIMIDT,MULTIMOL,IPASSME)    
     
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     FICTITIOUS 1D ELEMENTS CONNECTING CAPILLARY AND TISSUE
C
      COMMON/CSMEARED/ISMEARED,VOLFRACT,POROSSME,LVOLFRACTV,LDWALLSMEV,
     1 LPWALLSMEV,LDIAMSMEV,LTHICKSMEV,IPARTSME,LVOLSMEV,IRAVSME,DRAVSME
      COMMON/CLYMPH/INDLYMPH,INDLYMPHH,INDLYMPHC,LRVLYMPH,LPLYMHV,
     1 LCLYMHV,TABLYHW(10),TABLYCW(10,10),TABLYD(10),TENSORLYP(10,6),
     2 TENSORLYC(10,10,6),ITABLYP,ITABLYC,ITABLYD,LHCOEFLYNOD,
     3 LHCOEFLYNODW,LCCOEFLYNOD,LCCOEFLYNODW,LDCOEFLYNOD,LIDLYMPHH,
     4 LIDLYMPHC 
C
      DIMENSION IDT(NDIMIDT,NPT),F(JEDN),TT1(JEDN),TT10(JEDN),
     1          VOLFRACTV(NPT),DIAMSMEV(NPT),THICKSMEV(NPT),
     2          DWALLSMEV(NPT),PWALLSMEV(NPT),VOLSMEV(NPT) 
      DIMENSION IDLYMPHH(NPT),IDLYMPHC(MULTIMOL,NPT),RVLYMPH(NPT),
     1          HCOEFLYNODW(NPT),CCOEFLYNODW(MULTIMOL,NPT),
     2          DCOEFLYNOD(NPT)    
      
      DIMENSION SKE(2,2),F3(2),T11(2),EM(2,2),T110(2),LM(2)
C
      NE1D=1
      NN1=2
      DMASS=0.D0
      DT3=3.*DT
      DT6=6.*DT
      II=IDT(2,NC)
      IF(IPASSME.EQ.2) II=IDT(4,NC)  
      IF(II.LE.0) THEN
        IF(INDLYMPH.EQ.0) THEN
           RETURN
        ELSE
           GO TO 300 
        ENDIF
      ENDIF
C
      DO 200 NLM1= 1,NE1D 
C
      DO 20 I = 1,2
         LM(I)=0
         F3(I)=0.D0
         T11(I)=0.D0
         T110(I)=0.D0
   20 CONTINUE
C
      T11(1) = CONCSYS
      T110(1) = CONCSYS0
C
      NODE2=NC
      LM(2)=II
      T11(2)=TT1(II)
      T110(2)=TT10(II)
C
      NNPART=0
      IP1=0
      IP2=0
      PP1=0.D0
      PP2=0.D0
      IF(IPART.EQ.1) THEN
         NNPART=1
         IP1=1
         PP1=PWALLSMEV(NODE2)
         T11(1)=T11(1)*PP1
      ENDIF
C
      VOLI=VOLSMEV(NC)
      DDIFUS=DWALLSMEV(NC)
      DIAM=DIAMSMEV(NC)
      THICKA=THICKSMEV(NC)
      VOLF=VOLFRACTV(NC)
C     
      IF(IRAVSME.EQ.1) THEN
        ACAPI = DRAVSME*VOLF*VOLI
      ELSE
        ACAPI=4.*VOLF*VOLI/DIAM
      ENDIF
C        
      AK=ACAPI*DDIFUS
      SKE(1,1)=AK
      SKE(2,2)=AK
      SKE(1,2)=-AK
      SKE(2,1)=-AK
      EMC=ACAPI*THICKA
      EMC=0.D0
      EM(1,1)=EMC/DT3
      EM(1,2)=EMC/DT6
      EM(2,2)=EM(1,1)
      EM(2,1)=EM(1,2)
      DO 2 I=1,2
         DO 2 J=1,2  
         SKE(I,J)=SKE(I,J)+EM(I,J)
    2 CONTINUE
      DO 5 I=1,2
         DO 5 J=1,2
         F3(I)=F3(I)-SKE(I,J)*T11(J)+EM(I,J)*T110(J)
    5 CONTINUE
      IF(NNPART.EQ.1.AND.INDFLUX.EQ.0) THEN
        IF(IP1.EQ.1) THEN
           SKE(1,1)=SKE(1,1)*PP1
           SKE(1,2)=SKE(1,2)*PP1
        ENDIF
        IF(IP2.EQ.1) THEN
           SKE(2,1)=SKE(2,1)*PP2
           SKE(2,2)=SKE(2,2)*PP2
        ENDIF
      ENDIF
C
      IF(INDFLUX.EQ.1) THEN
         DMASS=DMASS+F3(2)
         GO TO 200
      ENDIF
C
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
          CALL sparseassembler_addelemmatrix(NN1,LM,SKE)
#endif
          CALL SPAKDE(F,F3,LM,NN1,JEDN)
C     
  200 CONTINUE
C
      IF(INDFLUX.EQ.1) THEN
         AMASSCAP=AMASSCAP+DMASS*DT
      ENDIF 
      IF(INDLYMPH.EQ.0) RETURN
C           
  300 CONTINUE 
C     TRANSPORT THROUGH WALLS OF LYMPHATIC SYSTEM
      DMASS=0.D0
      DO 400 NLM1= 1,NE1D 
C
      DO 420 I = 1,2
         LM(I)=0
         F3(I)=0.D0
         T11(I)=0.D0
         T110(I)=0.D0
  420 CONTINUE
C
      I1=II
      LM(1)=I1
      IF(I1.GT.0)T11(I1)=TT1(I1)
      VOLI=VOLSMEV(NC)
      VOLF=RVLYMPH(NC)
      THICKA=0.D0
      IF(ITABLYD.EQ.1) THEN
         DIAM=TABLYD(NC)
      ELSE
         DIAM=DCOEFLYNOD(NC)
      ENDIF      
      IF(IPASSME.EQ.1) THEN
         I2=IDLYMPHH(NC)
         IF(I2.GT.0) THEN 
C             T11(2)=TT1P(I2)
C             T110(2)=TT10P(I2)
             CONTINUE
         ENDIF
         IF(ITABLYP.EQ.0) THEN
             DDIFUS=TABLYHW(1)
         ELSE
             DDIFUS=HCOEFLYNODW(NC)
         ENDIF             
      ELSE
         I2=IDLYMPHC(1,NC)
         IF(I2.GT.0) THEN 
             T11(2)=TT1(I2)
             T110(2)=TT10(I2)
             CONTINUE
         ENDIF
         IF(ITABLYC.EQ.1) THEN
            DDIFUS=TABLYCW(1,1)
         ELSE
            DDIFUS=CCOEFLYNODW(1,NC)
         ENDIF
      ENDIF  
      NODE2=NC
      LM(2)=I2
C
      NNPART=0
      IP1=0
      IP2=0
      PP1=0.D0
      PP2=0.D0
      IPART=0
      IF(IPART.EQ.1) THEN
         NNPART=1
         IP1=1
         PP1=PWALLSMEV(NODE2)
         T11(1)=T11(1)*PP1
      ENDIF
C     
      IF(IRAVSME.EQ.1) THEN
        ACAPI = DRAVSME*VOLF*VOLI
      ELSE
        ACAPI=4.*VOLF*VOLI/DIAM
      ENDIF
C        
      AK=ACAPI*DDIFUS
      SKE(1,1)=AK
      SKE(2,2)=AK
      SKE(1,2)=-AK
      SKE(2,1)=-AK
      EMC=ACAPI*THICKA
      EMC=0.D0
      EM(1,1)=EMC/DT3
      EM(1,2)=EMC/DT6
      EM(2,2)=EM(1,1)
      EM(2,1)=EM(1,2)
      DO 42 I=1,2
         DO 42 J=1,2  
         SKE(I,J)=SKE(I,J)+EM(I,J)
   42 CONTINUE
      DO 45 I=1,2
         DO 45 J=1,2
         F3(I)=F3(I)-SKE(I,J)*T11(J)+EM(I,J)*T110(J)
   45 CONTINUE
C     EXCLUDED PARTITIONING FOR LYMPHATIC WALLS
C      IF(NNPART.EQ.1.AND.INDFLUX.EQ.0) THEN
C        IF(IP1.EQ.1) THEN
C           SKE(1,1)=SKE(1,1)*PP1
C           SKE(1,2)=SKE(1,2)*PP1
C        ENDIF
C        IF(IP2.EQ.1) THEN
C           SKE(2,1)=SKE(2,1)*PP2
C           SKE(2,2)=SKE(2,2)*PP2
C        ENDIF
C      ENDIF
C
      IF(INDFLUX.EQ.1) THEN
         DMASS=DMASS+F3(2)
         GO TO 400
      ENDIF
C
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
          CALL sparseassembler_addelemmatrix(NN1,LM,SKE)
#endif
          CALL SPAKDE(F,F3,LM,NN1,JEDN)
C     
  400 CONTINUE
C      IF(INDFLUX.EQ.1) THEN
C         AMASSLY=AMASSLY+DMASS*DT
C      ENDIF            
C
      RETURN
      END 
C=====================================================================
C
C=====================================================================
      SUBROUTINE CAP1DFICTSME2(IDT,F,TT1P,TT10P,TT1C,TT10C,VOLFRACTV,
     1  DIAMSMEV,THICKSMEV,DWALLSMEV,PWALLSMEV,VOLSMEV,WALLAREAV,
     2  HYDRCOEFV,IPIPENODV,NZADJ,ZADATA1,ZADATA0,IDLYMPHH,IDLYMPHC,
     3  RVLYMPH,HCOEFLYNODW,CCOEFLYNODW,DCOEFLYNOD,IACTIVE,KOR,ITER,
     3  JEDNPRES,JEDNCONC,JEDN,DT,NPT,NC,INDFLUX,ICONV,INDIFFUS,NZADP,
     4  NDIMIDT,IDD1,IDD2,IPASSME,MULTIMOL)     
            
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     FICTITIOUS 1D ELEMENTS CONNECTING CAPILLARY AND TISSUE
C
      COMMON/CSMEARED/ISMEARED,VOLFRACT,POROSSME,LVOLFRACTV,LDWALLSMEV,
     1 LPWALLSMEV,LDIAMSMEV,LTHICKSMEV,IPARTSME,LVOLSMEV,IRAVSME,DRAVSME
      COMMON/CLYMPH/INDLYMPH,INDLYMPHH,INDLYMPHC,LRVLYMPH,LPLYMHV,
     1 LCLYMHV,TABLYHW(10),TABLYCW(10,10),TABLYD(10),TENSORLYP(10,6),
     2 TENSORLYC(10,10,6),ITABLYP,ITABLYC,ITABLYD,LHCOEFLYNOD,
     3 LHCOEFLYNODW,LCCOEFLYNOD,LCCOEFLYNODW,LDCOEFLYNOD,LIDLYMPHH,
     4 LIDLYMPHC
C
      DIMENSION IDT(NDIMIDT,NPT),F(JEDN),TT1P(JEDNPRES),TT10P(JEDNPRES),
     2  TT1C(JEDNCONC),TT10C(JEDNCONC),VOLFRACTV(NPT), DIAMSMEV(NPT),
     3  THICKSMEV(NPT),DWALLSMEV(NPT),PWALLSMEV(NPT),VOLSMEV(NPT),
     4  WALLAREAV(NPT),HYDRCOEFV(NPT),IPIPENODV(NPT),NZADJ(3,NZADP),
     5  ZADATA1(NZADP),ZADATA0(NZADP),IACTIVE(4) 
      DIMENSION IDLYMPHH(NPT),IDLYMPHC(MULTIMOL,NPT),RVLYMPH(NPT),
     1          HCOEFLYNODW(NPT),CCOEFLYNODW(MULTIMOL,NPT),
     2          DCOEFLYNOD(NPT)      
      DIMENSION SKE(2,2),F3(2),T11(2),EM(2,2),T110(2),PV(2),
     1          LM(2) 
C     PIPE NODE
      IF(IPIPENODV(NC).EQ.1) RETURN
C
C     CONTINUUM NODE - CONNECTING CAPILLARY AND TISSUE DOMAINS
C
      NN1=2
C
      DMASS=0.D0
      DT3=3.*DT
      DT6=6.*DT
      JJ1=IDT(IDD1,NC)
      JJ2=IDT(IDD2,NC)
      LM(1)=JJ1
      LM(2)=JJ2
      IF(IPASSME.EQ.2) THEN
         IF(ICONV.EQ.1) THEN
            IP1=IDT(1,NC)
            IP2=IDT(2,NC)
            IF(IP1.GT.0)PV(1)=TT1P(IP1)
            IF(IP2.GT.0) PV(2)=TT1P(IP2)
         ENDIF
      ENDIF
      IF(JJ1.EQ.0.AND.JJ2.EQ.0) THEN
        IF(INDLYMPH.EQ.0) GO TO 200
        GO TO 300     
      ENDIF  
C
      DO 20 I = 1,2
         F3(I)=0.D0
         T11(I)=0.D0
         T110(I)=0.D0
   20 CONTINUE
      DO 23 I=1,2
         JPP=IP1
         IF(I.EQ.2) JPP=IP2
         IF(LM(I).GT.0) THEN
            IF(IPASSME.EQ.1) THEN
               T11(I)=TT1P(LM(I))
               T110(I)=TT10P(LM(I))
            ELSE
               T11(I)=TT1C(LM(I))
               T110(I)=TT10C(LM(I))
            ENDIF     
         ELSE IF(LM(I).EQ.0) THEN
            DO J=1,NZADP
              IF(NZADJ(1,J).EQ.NC) THEN
                  IF(IPASSME.EQ.1.AND.(NZADJ(2,J).EQ.1.OR.
     1                                NZADJ(2,J).EQ.2)) THEN
                    T11(I)=ZADATA1(J)
                    T110(I)=ZADATA0(J)
                    GO TO 23
                  ELSEIF (IPASSME.EQ.2) THEN
                     IF((NZADJ(2,J).EQ.3.OR.NZADJ(2,J).EQ.4)) THEN 
                        T11(I) =ZADATA1(J)
                        T110(I)=ZADATA0(J)
                        GO TO 22
                     ENDIF
                  ENDIF                      
               ENDIF        
           ENDDO
         ENDIF
   22    CONTINUE
         IF(IPASSME.EQ.1) GO TO 23
         IF(ICONV.EQ.0.OR.JPP.GT.0) GO TO 23
C        PRESCRIBED PRESSURES FOR CONVECTION IN DIFFUSION  
         DO J=1,NZADP
            IF(NZADJ(1,J).EQ.NC) THEN
               IF(NZADJ(2,J).EQ.I) THEN
                  PV(I)=ZADATA1(J)
                  GO TO 23
               ENDIF
            ENDIF    
         ENDDO   
   23  CONTINUE
C
      NNPART=0
      IP1=0
      IP2=0
      PP1=0.D0
      PP2=0.D0
      IF(IPARTSME.EQ.1.AND.IPASSME.EQ.2) THEN
         NNPART=1
         IP1=1
         PP1=PWALLSMEV(NC)
         T11(1)=T11(1)*PP1
      ENDIF
C     
      IF(IPASSME.EQ.1) THEN
         AK=WALLAREAV(NC)*HYDRCOEFV(NC)
         AKV=0.D0
      ELSE
         AK=WALLAREAV(NC)*DWALLSMEV(NC)
         EMC=WALLAREAV(NC)*THICKSMEV(NPT)
         EMC=0.D0
         EM(1,1)=EMC/DT3
         EM(1,2)=EMC/DT6
         EM(2,2)=EM(1,1)
         EM(2,1)=EM(1,2) 
         AKV=0.D0
         IF(ICONV.EQ.1) THEN
            AKV=WALLAREAV(NC)*HYDRCOEFV(NC)
            AKV=0.5*AKV*(PV(1)-PV(2))       
         ENDIF
      ENDIF       
      SKE(1,1)=AK-AKV
      SKE(2,2)=AK+AKV
      SKE(1,2)=-AK+AKV
      SKE(2,1)=-AK-AKV
      DO 2 I=1,2
         DO 2 J=1,2  
         SKE(I,J)=SKE(I,J)+EM(I,J)
    2 CONTINUE
      DO 5 I=1,2
         DO 5 J=1,2
         F3(I)=F3(I)-SKE(I,J)*T11(J)+EM(I,J)*T110(J)
    5 CONTINUE
      IF(NNPART.EQ.1.AND.INDFLUX.EQ.0) THEN
        IF(IP1.EQ.1) THEN
           SKE(1,1)=SKE(1,1)*PP1
           SKE(1,2)=SKE(1,2)*PP1
        ENDIF
        IF(IP2.EQ.1) THEN
           SKE(2,1)=SKE(2,1)*PP2
           SKE(2,2)=SKE(2,2)*PP2
        ENDIF
      ENDIF
C
      IF(INDFLUX.EQ.1.AND.IPASSME.EQ.2) THEN
         DMASS=DMASS+F3(2)
         GO TO 200
      ENDIF
C
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
          CALL sparseassembler_addelemmatrix(NN1,LM,SKE)
#endif
          CALL SPAKDE(F,F3,LM,NN1,JEDN)
C     
  200 CONTINUE
C
      IF(INDFLUX.EQ.1) THEN
         AMASSCAP=AMASSCAP+DMASS*DT
      ENDIF  
      IF(INDLYMPH.EQ.0) RETURN
C           
  300 CONTINUE 
C     TRANSPORT THROUGH WALLS OF LYMPHATIC SYSTEM
      DMASS=0.D0
      DO 400 NLM1= 1,NE1D 
C
      DO 420 I = 1,2
         LM(I)=0
         F3(I)=0.D0
         T11(I)=0.D0
         T110(I)=0.D0
  420 CONTINUE
C
      I1=JJ2
      LM(1)=I1
      VOLI=VOLSMEV(NC)
      VOLF=RVLYMPH(NC)
      THICKA=0.D0
      IF(ITABLYD.EQ.1) THEN
         DIAM=TABLYD(NC)
      ELSE
         DIAM=DCOEFLYNOD(NC)
      ENDIF      
      IF(IPASSME.EQ.1) THEN
         IF(I1.GT.0)THEN
             T11(I1)=TT1P(I1)
             T110(I1)=TT10P(I1)
         ENDIF
         I2=IDLYMPHH(NC)
         IF(I2.GT.0) THEN 
             T11(2)=TT1P(I2)
             T110(2)=TT10P(I2)
             CONTINUE
         ENDIF
         IF(ITABLYP.EQ.0) THEN
             DDIFUS=TABLYHW(1)
         ELSE
             DDIFUS=HCOEFLYNODW(NC)
         ENDIF             
      ELSE
         IF(I1.GT.0)THEN
            T11(I1)=TT1C(I1)
            T110(I1)=TT10C(I1)
         ENDIF
         I2=IDLYMPHC(1,NC)
         IF(I2.GT.0) THEN 
             T11(2)=TT1C(I2)
             T110(2)=TT10C(I2)
             CONTINUE
         ENDIF
         IF(ITABLYC.EQ.1) THEN
            DDIFUS=TABLYCW(1,1)
         ELSE
            DDIFUS=CCOEFLYNODW(1,NC)
         ENDIF
      ENDIF  
      NODE2=NC
      LM(2)=I2
C
      NNPART=0
      IP1=0
      IP2=0
      PP1=0.D0
      PP2=0.D0
      IPART=0
      IF(IPART.EQ.1) THEN
         NNPART=1
         IP1=1
         PP1=PWALLSMEV(NODE2)
         T11(1)=T11(1)*PP1
      ENDIF
C     
      IF(IRAVSME.EQ.1) THEN
        ACAPI = DRAVSME*VOLF*VOLI
      ELSE
        ACAPI=4.*VOLF*VOLI/DIAM
      ENDIF
C        
      AK=ACAPI*DDIFUS
      SKE(1,1)=AK
      SKE(2,2)=AK
      SKE(1,2)=-AK
      SKE(2,1)=-AK
      EMC=ACAPI*THICKA
      EMC=0.D0
      EM(1,1)=EMC/DT3
      EM(1,2)=EMC/DT6
      EM(2,2)=EM(1,1)
      EM(2,1)=EM(1,2)
      DO 42 I=1,2
         DO 42 J=1,2  
         SKE(I,J)=SKE(I,J)+EM(I,J)
   42 CONTINUE
      DO 45 I=1,2
         DO 45 J=1,2
         F3(I)=F3(I)-SKE(I,J)*T11(J)+EM(I,J)*T110(J)
   45 CONTINUE
C     EXCLUDED PARTITIONING FOR LYMPHATIC WALLS
C      IF(NNPART.EQ.1.AND.INDFLUX.EQ.0) THEN
C        IF(IP1.EQ.1) THEN
C           SKE(1,1)=SKE(1,1)*PP1
C           SKE(1,2)=SKE(1,2)*PP1
C        ENDIF
C        IF(IP2.EQ.1) THEN
C           SKE(2,1)=SKE(2,1)*PP2
C           SKE(2,2)=SKE(2,2)*PP2
C        ENDIF
C      ENDIF
C
      IF(INDFLUX.EQ.1) THEN
         DMASS=DMASS+F3(2)
         GO TO 400
      ENDIF
C
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
          CALL sparseassembler_addelemmatrix(NN1,LM,SKE)
#endif
          CALL SPAKDE(F,F3,LM,NN1,JEDN)
C     
  400 CONTINUE
C      IF(INDFLUX.EQ.1) THEN
C         AMASSLY=AMASSLY+DMASS*DT
C      ENDIF            
C
      RETURN
      END
C=====================================================================
C
C=====================================================================    
      SUBROUTINE CAP1DFICTSME3(IDT,F,TT1P,TT1C,TT10P,TT10C,NODEPART,
     1 PARTV,THICKSMEV,DWALLSMEV,PWALLSMEV,WALLAREAV,HYDRCOEFV,NZADJ,
     2 ZADATA1,ZADATA0,IACTIVE,NEL,KOR,ITER,JEDN,DT,NPT,NLM1,INDFLUX,
     3 NZADP,NE1D,ICONV,INDIFFUS,IPART,IPASSME,JEDNPRES,JEDNCONC,
     4 NDIMIDT)    
      
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     FICTITIOUS 1D ELEMENTS CONNECTING LARGE VESSELS(PIPE) TO CAPILLARY SMEARED
C
      COMMON/CSMEARED/ISMEARED,VOLFRACT,POROSSME,LVOLFRACTV,LDWALLSMEV,
     1 LPWALLSMEV,LDIAMSMEV,LTHICKSMEV,IPARTSME,LVOLSMEV,IRAVSME,DRAVSME
      COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
C
      DIMENSION IDT(NDIMIDT,NPT),F(JEDN),TT1P(JEDNPRES),TT1C(JEDNCONC),
     1          TT10P(JEDNPRES),TT10C(JEDNCONC),NODEPART(NPT),
     2          PARTV(NPT), THICKSMEV(NPT),DWALLSMEV(NPT),
     3          PWALLSMEV(NPT),WALLAREAV(NPT),HYDRCOEFV(NPT),
     4          NZADJ(3,NZADP),ZADATA1(NZADP),ZADATA0(NZADP),IACTIVE(4),
     5          NEL(NE1D,2)
      DIMENSION SKE(2,2),F3(2),T11(2),EM(2,2),T110(4),PV(2),
     1          LM(4)  
C
      NN1=2
C
      NODE1=NEL(NLM1,1)
      NODE2=NEL(NLM1,2)
      DMASS=0.D0
      DT3=3.*DT
      DT6=6.*DT
C
      IF(ISMEARED.EQ.0) THEN
         ID1=3
         ID2=4
         IP1=1
         IP2=2
      ELSE 
         ID1=3
         ID2=3
         IP1=1
         IP2=1
      ENDIF
      JJ1=IDT(ID1,NODE1)
      JJ2=IDT(ID2,NODE2) 
      JJP1=IDT(IP1,NODE1)
      JJP2=IDT(IP2,NODE2)
      IF(IPASSME.EQ.1) THEN
         LM(1)=JJP1
         LM(2)=JJP2
         IF(JJP1.EQ.0.AND.JJP2.EQ.0) GO TO 200
      ELSE
         LM(1)=JJ1
         LM(2)=JJ2
         IF(JJ1.EQ.0.AND.JJ2.EQ.0) GO TO 200
      ENDIF
C
      DO I = 1,2
         F3(I)=0.D0
         T11(I)=0.D0
         T110(I)=0.D0
      ENDDO
      DO 23 I=1,2
         NC=NODE1
         JJP=JJP1
         IF(I.EQ.2) THEN
            NC=NODE2
            JJP=JJP2
         ENDIF
         IF(IPASSME.EQ.2.AND.ICONV.EQ.1) THEN
           IF(JJP.GT.0) PV(I)=TT1P(JJP)
         ENDIF
         IF(LM(I).GT.0) THEN
            IF(IPASSME.EQ.1) THEN
               T11(I)=TT1P(LM(I))
               T110(I)=TT10P(LM(I))
            ELSE
               T11(I)=TT1C(LM(I))
               T110(I)=TT10C(LM(I))
            ENDIF
         ELSEIF(LM(I).EQ.0) THEN
            DO J=1,NZADP
              IF(NZADJ(1,J).EQ.NC) THEN
                 IF(IPASSME.EQ.1) THEN
                     IF(NZADJ(2,J).EQ.IP1.OR.NZADJ(2,J).EQ.IP2) THEN
                         T11(I)=ZADATA1(J)
                         T110(I)=ZADATA0(J)
                         GO TO 22
                     ENDIF
                 ELSE
                     IF(NZADJ(2,J).EQ.ID1.OR.NZADJ(2,J).EQ.ID2) THEN
                         T11(I)=ZADATA1(J)
                         T110(I)=ZADATA0(J)
                         GO TO 22
                     ENDIF
                 ENDIF
              ENDIF
            ENDDO
         ENDIF
   22    CONTINUE 
         IF(IPASSME.EQ.1) GO TO 23
         IF(ICONV.EQ.0.OR.JJP.GT.0) GO TO 23
C
C        PRESCRIBED PRESSURES FOR CONVECTION IN DIFFUSION  
C
         DO J=1,NZADP
            IF(NZADJ(1,J).EQ.NC) THEN
               IF(NZADJ(2,J).EQ.IP1) THEN
                  PV(1)=ZADATA1(J)
                  GO TO 23
               ELSEIF(NZADJ(2,J).EQ.IP2) THEN
                  PV(2)=ZADATA1(J)
                  GO TO 23
               ENDIF
            ENDIF    
         ENDDO
   23 CONTINUE
C
      NNPART=0
      IP1=0
      IP2=0
      PP1=0.D0
      PP2=0.D0
      IF(IPART.EQ.1.AND.IPASSME.EQ.2) THEN
         NNPART=1
         IP1=NODEPART(NODE1)
         IF(IP1.EQ.1) THEN
             PP1=PARTV(NODE1)
             T11(1)=T11(1)*PP1
         ENDIF
         IP2=NODEPART(NODE2)
         IF(IP2.EQ.1) THEN
             PP2=PARTV(NODE2)
             T11(2)=T11(2)*PP2
         ENDIF
      ENDIF
C     
      IF(IPASSME.EQ.1) THEN
         AK=WALLAREAV(NODE1)*HYDRCOEFV(NODE1)
         AKV=0.D0
      ELSE
         AK=WALLAREAV(NODE1)*DWALLSMEV(NODE1)
         EMC=WALLAREAV(NODE1)*THICKSMEV(NODE1)
         EMC=0.D0
         EM(1,1)=EMC/DT3
         EM(1,2)=EMC/DT6
         EM(2,2)=EM(1,1)
         EM(2,1)=EM(1,2) 
         AKV=0.D0
         IF(ICONV.EQ.1) THEN
            AKV=WALLAREAV(NODE1)*HYDRCOEFV(NODE1)
            AKV=0.5*AKV*(PV(1)-PV(2))       
         ENDIF
      ENDIF       
      SKE(1,1)=AK-AKV
      SKE(2,2)=AK+AKV
      SKE(1,2)=-AK+AKV
      SKE(2,1)=-AK-AKV
      IF(IPASSME.EQ.1) THEN
         DO I=1,2
            DO J=1,2
               F3(I)=F3(I)-SKE(I,J)*T11(J)
            ENDDO
         ENDDO  
      ELSE
         DO 2 I=1,2
            DO 2 J=1,2  
              SKE(I,J)=SKE(I,J)+EM(I,J)
    2    CONTINUE
         DO 5 I=1,2
            DO 5 J=1,2
              F3(I)=F3(I)-SKE(I,J)*T11(J)+EM(I,J)*T110(J)
    5    CONTINUE
         IF(NNPART.EQ.1.AND.INDFLUX.EQ.0) THEN
             IF(IP1.EQ.1) THEN
                SKE(1,1)=SKE(1,1)*PP1
                SKE(2,1)=SKE(2,1)*PP1
             ENDIF
             IF(IP2.EQ.1) THEN
                SKE(1,2)=SKE(1,2)*PP2
                SKE(2,2)=SKE(2,2)*PP2
             ENDIF
          ENDIF
      ENDIF
C
      IF(INDFLUX.EQ.1.AND.IPASSME.EQ.2) THEN
         DMASS=DMASS+F3(2)
         GO TO 200
      ENDIF  
C
#if(MUMPS_CLUSTER)
C	  CALL MUMPSLEFT(SKE,NEL,ID,NDES,NBREL,NDIM,5,6)
#else
          CALL sparseassembler_addelemmatrix(NN1,LM,SKE)
#endif
          CALL SPAKDE(F,F3,LM,NN1,JEDN)
  200 CONTINUE
C
      IF(INDFLUX.EQ.1) THEN
         AMASSCAP=AMASSCAP+DMASS*DT
      ENDIF        
C
      RETURN
      END 
C=====================================================================
C
C=====================================================================     
      subroutine printforce(f,jedn,nlm,ind)  
c     auxilliary printing of rhs
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      
      dimension f(jedn) 
      
      if(ind.eq.0) write(3,2000)nlm
 2000 format(/' before addition of 1D fictitious, element no=',i5)
       if(ind.eq.1) write(3,2001)
 2001 format(/' after addition of 1D fictitious')
      write(3,2010)(f(i),i=1,jedn)
 2010 format(6e13.5)
      return
      end
c  =============================================
c
c ===========================================     
      