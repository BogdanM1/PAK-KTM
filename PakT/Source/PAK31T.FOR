#define MUMPS_CLUSTER .FALSE.
C=======================================================================
C=======================================================================
      SUBROUTINE UL3DGL
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*130 ACOZ
CE    MAIN PROGRAM TO READ 2D ISOPARAM. ELEMENT INPUT DATA
      COMMON A(17000)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA3/ LNEL3D,LMAT3D,LNQ3D,LITG3D,LIP3CV,LNG3D,LNELG3,
     1LEL,LHP,LHK,LSKE,LDEL,LDEHP,LDEHK,LHR
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /SRPSKI/ ISRPS
	common/elemmodels/modelel(20),ngele   
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ      
      COMMON/DARCYEQ/ ELDARCYX,ELDARCYY,ELDARCYZ,VDARCY,PINLET,
     1       DARCYX,JEDNDARCY,ISOLVER,IDARCY,LDARCYD,LDARCYMI,
     2       LIDARCYMA,NPTINDARCY
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON/MAINIDT/NDIMIDT  
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10)
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
                 
CE    BASYC ELEMENT DATA
      CALL ISPITA(ACOZ)
      if(indiffus.eq.0.AND.IDARCY.EQ.0) then
         IF(INDFOR.EQ.1)
     1   READ(1,*) NMAT3D,MAT3D,NP3DMX,IPR3DC,IPTGA,NGAUSX,NGAUSY,NGAUSZ
         IF(INDFOR.EQ.2)
     1   READ(ACOZ,1000) NMAT3D,MAT3D,NP3DMX,IPR3DC,IPTGA,NGAUSX,NGAUSY
     1   ,NGAUSZ
	else
        IF(INDFOR.EQ.1)
     1   READ(1,*)       MAT3DCONV,MAT3DDIF,NP3DMX,IPR3DC,IPTGA,NGAUSX,
     2                   NGAUSY,NGAUSZ
        IF(INDFOR.EQ.2)
     1   READ(ACOZ,1000) MAT3DCONV,MAT3DDIF,NP3DMX,IPR3DC,IPTGA,NGAUSX,
     2                   NGAUSY,NGAUSZ
	endif
	
	if(MAT3DCONV.eq.0.AND.ICONV.EQ.1) MAT3DCONV = 1
	NMAT3D = 1
      MAT3D  = MAT3DCONV
      NELEDAT(NGELE,5)=MAT3DCONV
      NELEDAT(NGELE,6)=MAT3DDIF       
      
 1000 FORMAT(10I5)
 1010 FORMAT(I5,5X,10I5)
C
      IF (NMAT3D.GT.1.and.indiffus.eq.0) MAT3D  = 0
      IF (NMATT.EQ.1.AND.indiffus.eq.0)  MAT3D  = 1
      IF (NMATT.EQ.1.AND.indiffus.eq.0)  NMAT3D = 1
	IF (INDIFFUS.EQ.1)                 NMAT3D = MAT3DCONV
C
	if(MAT3DCONV.gt.NMATTCONV.OR.MAT2DdIF.GT.NMATTDIF)then
	  write(3,6330)nmat3d,nmatt
 6330   format(/' E R R O R'/
     1  'MATERIAL NUMBER IS GREATER THAN THE TOTAL NUMBER OF MATERIALS'/
     2  '   MATERIAL NUMBER FOR 3D ELEMENTS, MAT3D=',I5/
	3  '   TOTAL NUMBER OF MATERIALS, NMATT=',I5/
	4  '   S T O P')
	  STOP
	endif
      IF(NP3DMX.EQ.0) NP3DMX=8
      IF(NGAUSX.EQ.0) NGAUSX=2
      IF(NGAUSY.EQ.0) NGAUSY=2
      IF(NGAUSZ.EQ.0) NGAUSZ=2
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
        CALL WBROJK(KARTIC,0)
        WRITE(3,6010)MAT3DCONV,MAT3DDIF,NP3DMX
	endif
	
 2000 FORMAT(6X,'ULAZNI PODACI ZA 3/D IZOPARAMETARSKI ELEMENT'/
     16X,44('-')///
     111X,'UKUPAN BROJ RAZLICITIH MATERIJALA ............. NMAT3D =',I5/
     116X,'(ZA NMAT3D.EQ.1 IGNORISE SE UNETI PODATAK)'/
     116X,'EQ.1; ZA NMATT.EQ.1'///
     211X,'MATERIJAL BROJ ................................. MAT3D =',I5/
     216X,'EQ.1; ZA NMATT.EQ.1'/
     216X,'EQ.0; ZA NMAT3D.GT.1'///
     311X,'MAKSIMALAN BROJ CVOROVA PO ELEMENTU ........... NP3DMX =',I5/
     316X,'EQ.0; POSTAJE "8" (ZA 8 CVOROVA)'/
     316X,'GT.8; ZA ELEMENTE OD 8 DO 21 CVORA')
 6000 FORMAT(6X,'INPUT DATA FOR ISOPARAMETRIC 3/D ELEMENTS'/
     16X,41('-')///
     111X,'TOTAL NUMBER OF MATERIALS FOR 3/D ELEMENTS .... NMAT3D =',I5/
     116X,'(FOR NMAT3D.EQ.1 ENTERED DATA IS IGNORED)'/
     116X,'EQ.1; FOR NMATT.EQ.1'///
     211X,'NUMBER OF MATERIALS ............................ MAT3D =',I5/
     216X,'EQ.1; FOR NMATT.EQ.1'/
     216X,'EQ.0; FOR NMAT3D.GT.1'///
     311X,'MAXIMUM NUMBER OF NODAL POINTS PER ELEMENTS ... NP3DMX =',I5/
     316X,'EQ.0; DEFAULT SET "8" (FOR 8 NODES)'/
     316X,'GT.8; FOR ELEMENTE FROM 8 TO 21 NODES')
 2010 FORMAT(6X,'ULAZNI PODACI ZA 3/D IZOPARAMETARSKI ELEMENT'/
     16X,44('-')///
     211X,'MATERIJAL BROJ GRUPE ELEMENATA................. MAT3DD =',I5/
     311X,'MAKSIMALAN BROJ CVOROVA PO ELEMENTU ........... NP3DMX =',I5/
     316X,'EQ.0; POSTAJE "8" (ZA 8 CVOROVA)'/
     316X,'GT.8; ZA ELEMENTE OD 8 DO 21 CVORA')

 6010 FORMAT(6X,'INPUT DATA FOR ISOPARAMETRIC 3/D ELEMENTS'/
     16X,41('-')///
     211X,'MATERIAL NUMBER FOR CONVECTION .. ......... MAT3DCONV =',I5/
     311X,'MATERIAL NUMBER FOR DIFFUSION OR HEAT TRANSFER..  MAT3DDIF',
     4 '   =',I5/
     416X,'EQ.0 - NO DIFFUSION OR HEAT TRANSFER FOR ELEMENT GROUP'/
     311X,'MAXIMUM NUMBER OF NODAL POINTS PER ELEMENTS ... NP3DMX =',I5/
     316X,'EQ.0; DEFAULT SET "8" (FOR 8 NODES)'/
     316X,'GT.8; FOR ELEMENTE FROM 8 TO 21 NODES')
c
      IF(ISRPS.EQ.0)
     *WRITE(3,2200) IPR3DC,IPTGA,NGAUSX,NGAUSY,NGAUSZ
      IF(ISRPS.EQ.1)
     *WRITE(3,6200) IPR3DC,IPTGA,NGAUSX,NGAUSY,NGAUSZ
 2200 FORMAT(///
     411X,'INDIKATOR STAMPE KOORDINATA GAUSOVIH TACAKA.... IPR3DC =',I5/
     416X,'EQ.0; NE STAMPAJU SE'/
     416X,'EQ.1; STAMPAJU SE U SVIM ELEMENTIMA'/
     416X,'GT.1; STAMPAJU SE U ZELJENIM ELEMENTIMA'///
     511X,'INDIKATOR STAMPE TEMPERAT U GAUS.TACKAMA ....... IPTGA =',I5/
     516X,'EQ.0; NE STAMPAJU SE'/
     516X,'EQ.1; STAMPAJU SE U SVIM ELEMENTIMA'/
     516X,'GT.1; STAMPAJU SE U ZELJENIM ELEMENTIMA'///
     611X,'BROJ GAUSOVIH TACAKA U PRAVCU   KSI ............ NGAUSX=',I5/
     616X,'EQ.0; POSTAJE "2"'///
     711X,'BROJ GAUSOVIH TACAKA U PRAVCU   ETA ............ NGAUSY=',I5/
     716X,'EQ.0; POSTAJE "2"'///
     811X,'BROJ GAUSOVIH TACAKA U PRAVCU   CETA ........... NGAUSZ=',I5/
     816X,'EQ.0; POSTAJE "2"')
 6200 FORMAT(///
     411X,'INDICATOR FOR PRINTOUT COORD. IN GAUSS POINTS . IPR3DC =',I5/
     416X,'EQ.0; NOT PRINTED'/
     416X,'EQ.1; PRINTED IN ALL ELEMENTS'/
     416X,'GT.1; PRINTED IN PRESCRIBED ELEMENTS'///
     511X,'INDICATOR FOR PRINT CONCENTR IN GAUSS POINTS  IPRTG3 =',I5/
     516X,'EQ.0; NOT PRINTED'/
     516X,'EQ.1; PRINTED IN ALL ELEMENTS'/
     516X,'GT.1; PRINTED IN PRESCRIBED ELEMENTS'///
     611X,'NUMBER OF GAUSS POINTS IN DIRECTION KSI ........ NGAUSX=',I5/
     616X,'EQ.0;  DEFAULT SET "2"'///
     711X,'NUMBER OF GAUSS POINTS IN DIRECTION ETA ........ NGAUSY=',I5/
     716X,'EQ.0;  DEFAULT SET "2"'///
     811X,'NUMBER OF GAUSS POINTS IN DIRECTION ZETA ....... NGAUSZ=',I5/
     816X,'EQ.0;  DEFAULT SET "2"')
CE    POINTERS IN INPUT DATA VECTOR
      NE3D=NET
      LNEL3D=LMAX
	NELEDAT(NGELE,7)=LNEL3D
      NBRE=8
      IF (NP3DMX.GT.8) NBRE=21
      LMAT3D=LNEL3D + NE3D*NBRE
      NELEDAT(NGELE,8)=LMAT3D
      LNQ3D=LMAT3D
      IF (NMAT3D.GT.1.OR.indiffus.EQ.1.OR.IHEAT.EQ.1) LNQ3D=LNQ3D+NE3D
      NELEDAT(NGELE,9)=LNQ3D
      LITG3D= LNQ3D
      IF (IZIP.GT.0) LITG3D=LNQ3D+NE3D
      NELEDAT(NGELE,11)=LITG3D
      LIP3CV=LITG3D
      IF (IPTGA.GT.1) LIP3CV=LITG3D+NE3D
      NELEDAT(NGELE,12)=LIP3CV
      LMAX=LIP3CV
      IF (IPR3DC.GT.1) LMAX=LIP3CV+NE3D
      IF (LMAX.LE.NTOTA) GO TO 30
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) LMAX,NTOTA
 2005 FORMAT(' NEDOVOLJNA DIMENZIJA U VEKTORU A-ZA PODATKE O 3D ELEMENTI
     1MA'/' POTREBNA DIMENZIJA , LMAX=',I10/' RASPOLOZIVA DIMENZIJA ,NTO
     2TA=',I10)
 6005 FORMAT(/1X,' UNSUFFICIENT DIMENSION OF WORKING VECTOR A FOR RE
     1AD IN INPUT DATA'/1X,' REQUIRED DIMENSION, LMAX =',I10/1X,
     2' AVAILABLE DIMENSION, NTOTA=',I10)
      STOP
CE    CALL PROGRAM TO READ INPUT DATA
   30 CALL UL3DK2(A(LNEL3D),A(LMAT3D),A(LNQ3D),A(LITG3D),A(LIP3CV),
     1A(LMAXA),A(LMHT),IDARCY,NDIMIDT)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UL3DK2(NEL,MATV,NQ,ITGAV,IP3CV,MAXA,MHT,IDARCY,NDIMIDT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*130 ACOZ
CE     PROGRAM TO READ DATA ABOUT K21 ELEMENTS
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA3/ LNEL3D,LMAT3D,LNQ3D,LITG3D,LIP3CV,LNG3D,LNELG3,
     1LEL,LHP,LHK,LSKE,LDEL,LDEHP,LDEHK,LHR
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /SRPSKI/ ISRPS
	common/elemmodels/modelel(20),ngele
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ
	COMMON /MUMPS_PAK/IMUMPS,MUFILE,MUFILE2
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK            
      DIMENSION NEL(NET,*),MATV(*),NQ(*),ITGAV(*),IP3CV(*),
     1MAXA(*),MHT(*)
CE     ELEMENT ADTA
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     *WRITE(3,2000)
      IF(ISRPS.EQ.1)
     *WRITE(3,6000)
      ENDIF
      NMATS=  1
      NQQS=  -1
      IPRCOS=-1
      IPGSS= -1
      KN = 0
  100 CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(1,*) NN,(NEL(NN,I),I=1,8),NMAT,NQQ,KORE,NBEG,IPRCO,IPGS
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000) NN,(NEL(NN,I),I=1,8),NMAT,NQQ,KORE,NBEG,IPRCO,IPGS
      KK = NN + NBEG
  130 CONTINUE
      if(nn.gt.net) then
	   write(3,6350)nn,net
 6350    format(/' ERROR IN INPUT DATA FOR 3D ELEMENT GROUP:'
     1   ' INPUT ELEMENT NUMBER IS GREATER THAN'/ 'THE TOTAL NUMBER'
     1   ' WITHIN THE GROUP'//
	2   ' INPUT ELEMENT NUMBER  NN=',I10/
	3   ' TOTAL NUMBER OF ELEMENTS WITHIN THE GROUP, NET=',I10/
	4   ' S T O P')
	  stop
	endif
      IF(indiffus.EQ.1.OR.IHEAT.EQ.1) THEN
	  IF(NMAT.EQ.0) NMAT=modelel(ngele)
	  MATV(NN)= NMAT
	if(NMAT.gt.NMATT)then
	  write(3,6330)NN,nmat,nmatt
 6330   format(/' E R R O R'/
     1  'MATERIAL NUMBER IS GREATER THAN THE TOTAL NUMBER OF MATERIALS'/
	1  '   ELEMENT NUMBER, NN=',I8/
     2  '   MATERIAL NUMBER FOR 3D ELEMENT, NMAT=',I5/
	3  '   TOTAL NUMBER OF MATERIALS, NMATT=',I5/
	4  '   S T O P')
	  STOP
	endif
	  GO TO 22
      ENDIF
      IF (NMATT.EQ.1) GO TO 20
      IF (NMAT3D.GT.1) GO TO 18
      NMAT=  MAT3D
      GO TO 22
   18 IF (NMAT.EQ.0) NMAT=NMATS
      NMATS=NMAT
      MATV(NN)= NMAT
      GO TO 22
   20 NMAT=  1
   22 IF (IZIP.EQ.0) GO TO 30
      IF (NQQ.EQ.0) NQQ=NQQS
      NQQS=NQQ
      NQ(NN)=NQQ
      IF(NQ(NN).LT.0) NQQ = 0
      IF(NQ(NN).LT.0) NQ(NN) = 0
      GO TO 32
   30 NQQ = 0
   32 IF (IPR3DC.LT.2) GO TO 40
      IF (IPRCO.EQ.0) IPRCO=IPRCOS
      IPRCOS=IPRCO
      IP3CV(NN)=IPRCO
      IF(IP3CV(NN).LT.0) IPRCO = 0
      IF(IP3CV(NN).LT.0) IP3CV(NN) = 0
      GO TO 42
   40 IF (IPR3DC.EQ.1) IPRCO= 1
      IF (IPR3DC.EQ.0) IPRCO= 0
   42 IF (IPTGA.LE.1) GO TO 50
      IF (IPGS.EQ.0) IPGS=IPGSS
      IPGSS=IPGS
      ITGAV(NN)=IPGS
      IF(ITGAV(NN).LT.0) IPGS = 0
      IF(ITGAV(NN).LT.0) ITGAV(NN) = 0
      GO TO 52
   50 IF (IPTGA.EQ.1) IPGS= 1
      IF (IPTGA.EQ.0) IPGS= 0
   52 IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      WRITE(3,5001) NN,(NEL(NN,I),I=1,8),NMAT,NQQ,IPRCO,IPGS
      ENDIF
      KN = KN + 1
      IF (NP3DMX.EQ.8) GO TO 90
      IF(NN.GT.KK-NBEG) GO TO 80
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(1,*)  (NEL(NN,I),I=9,21)
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000)  (NEL(NN,I),I=9,21)
   80 IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      WRITE(3,5002)  (NEL(NN,I),I=9,21)
      ENDIF
   90 IF(KN.EQ.NE3D) GO TO 110
      IF(KORE.EQ.0.AND.NBEG.EQ.0) GO TO 100
      NN = NN + 1
      IF(NN.GT.KK) GO TO 100
      DO 170 I=1,8
      NEL(NN,I)=NEL(NN-1,I)+KORE
  170 CONTINUE
      IF(NP3DMX.EQ.8) GO TO 130
      DO 180 I=9,21
      IF(NEL(NN-1,I).EQ.0) GO TO 179
      NEL(NN,I)=NEL(NN-1,I)+KORE
      GO TO 180
  179 NEL(NN,I)=0
  180 CONTINUE
      GO TO 130
 1000 FORMAT(9I8,6I3)
 6000 FORMAT(/////6X,'INPUT DATA FOR EACH 3/D ELEMENT'/6X,31('-')///
     3' ELEMENT ',9X,'N        O        D        E        S',18X,
     4'MAT. SOU. COO. CONC.'/
     53X,'NUMBER ',72X,'No.    No.  G.P.  G.P.'/
     616X,'1',7X,'2',7X,'3',7X,'4',7X,'5',7X,'6',7X,'7',7X,'8'/
     79X,'9',3X,'10',3X,'11',3X,'12',3X,'13',3X,
     8'14',3X,'15',3X,'16',3X,'17',3X,'18',3X,'19',3X,'20',3X,'21'/)
 2000 FORMAT(/////6X,'POSEBNI PODACI ZA SVAKI 3/D ELEMENT'/6X,35('-')///
     3' ELEM. ',6X,'C      V      O      R      O      V      I',3X,
     4'MAT. IZV. KOO. TEMP.'/
     53X,'BR. ',53X,'BR.  BR. G.T. G.T.'/
     613X,'1',5X,'2',5X,'3',5X,'4',5X,'5',5X,'6',5X,'7',5X,'8'/
     76X,'9',3X,'10',3X,'11',3X,'12',3X,'13',3X,
     8'14',3X,'15',3X,'16',3X,'17',3X,'18',3X,'19',3X,'20',3X,'21'/)
 5001 FORMAT(9I8,2X,I10,3I8)
 5002 FORMAT(9I8)
CE    FORM VECTOR MAXA
  110 INDMA= 0
      IF(IMUMPS.EQ.1) RETURN
      IF (NGE.LT.NGET) GO TO 120
      INDMA=1
CE    AUXILARY SPACE FOR MAXA
      LMAXS=LMAX
      LMAXA=LMAX
      LMAX=LMAXA+JEDN+1
C      LMAX=LMD+NP3DMX*NDIMIDT
      
      IF (LMAX.LE.NTOTA) GO TO 120
      IF(ISRPS.EQ.0)
     1WRITE(3,2010) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     1WRITE(3,6010) LMAX,NTOTA
      STOP
 2010 FORMAT(' NEDOVOLJNA DIMENZIJA U VEKTORU A-ZA FORMIRANJE MAXA'/' PO
     1TREBNA DIMENZIJA , LMAX=',I9/' RASPOLOZIVA DIMENZIJA , NTOTA=',I9)
 6010 FORMAT(/1X,' UNSUFFICIENT DIMENSION OF WORKING VECTOR A FOR MAXA'/
     1 1X,' REQUIRED DIMENSION, LMAX =',I10/1X,
     2' AVAILABLE DIMENSION, NTOTA=',I10)
      
  120 CONTINUE
      IF(IDARCY.EQ.0) THEN
         CALL MAXATE(A(LMAXA),MHT,A(LIDT),NEL,LM,NE3D,JEDN,INDMA,
     1               NBRE,NWK,NDIMIDT)
      ELSE
         CALL MAXAPIPET(A(LMAXA),A(LMHT),A(LIDT),NEL,LM,NE3D,8,
     1              JEDN,NWK,NPT,NDIMIDT,INDMA)  
      ENDIF     
      IF (NGE.LT.NGET)RETURN 
      LMAX=LMAXS
      LMAXA=LMHT
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE GRAN3D(NG3D,NELG,NEL,N3DGUL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*130 ACOZ
CE PROGRAM TO READ BOUNDARY CONDITION INPUT DATA ON 3D ELEMENT SURFACES
CE PROGRAM READS ONLY CORNER NODES OF SURFACES
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /SRPSKI/ ISRPS
      DIMENSION NG3D(*),NELG(5,6,*),NEL(NE3D,*)
      DIMENSION NPOV(6,4),NPOVV(24),NPV(4),NPG(4)
      DATA NPOVV/1,4,8,5,2,6,7,3,1,5,6,2,4,3,7,8,1,2,3,4,5,8,7,6/
CE  NODES ON SURFACES
      KK=0
      DO 10 I=1,6
      DO 10 J=1,4
      KK=KK+1
   10 NPOV(I,J)=NPOVV(KK)
      DO 20 I=1,5
      DO 20 J=1,6
      DO 20 K=1,NE3D
   20 NELG(I,J,K)=0
      DO 25 I=1,NE3D
   25 NG3D(I)=0
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     *WRITE(3,2000)
      IF(ISRPS.EQ.1)
     *WRITE(3,6000)
      ENDIF
 2000 FORMAT(/////6X,'PODACI O GRANICNIM POVRSINAMA 3/D ELEMENATA'/
     16X,43('_')///
     1' ELEM.',2X,'C  V  O  R  O  V  I',2X,'FLUKS',2X,'KOEF.PREL.',
     22X,'TEMP.OKOL.',2X,'KOEF.EMIS.',2X,'FUNK.OBLIKA'/
     2'   BR.',25X,'BR.',5X,'BR.',9X,'BR.',9X,'BR.',9X,'BR.')
 6000 FORMAT(/////6X,'BOUNDARY CONDITIONS FOR 3/D ELEMENTS'/
     16X,36('-')///
     1' ELEM.',2X,' N   O   D   E   S ',2X,' FLUX',2X,'CONV.COEF.',
     22X,'ENVI.TEMP.',2X,'EMIS.COEF.',2X,'SHAPE FUNC.'/
     2'   No.',25X,'No.',5X,'No.',9X,'No.',9X,'No.',9X,'No.')
      IFLS=0
      N3DGU=0
      IHPS=0
      IHRS=0
      ITOS=0
      IFOS=0
   30 CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(1,*)NN,(NPV(I),I=1,4),IFL,IHP,ITO,IHR,IFO
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000)NN,(NPV(I),I=1,4),IFL,IHP,ITO,IHR,IFO
 1000 FORMAT(14I5)
      IF(NN.EQ.0) GO TO 200
CE DETERMINATION NUMBER ORDER OF SURFACE IN THE ELEMENT
      DO 50 I=1,6
      DO 40 J=1,4
      JJ=NPOV(I,J)
   40 NPG(J)=NEL(NN,JJ)
      K = 0
      DO 45 J=1,4
      DO 44 JJ = 1,4
      IF(NPV(J).EQ.NPG(JJ)) K = K + 1
   44 CONTINUE
   45 CONTINUE
      IF(K.EQ.4) GO TO 60
   50 CONTINUE
      IF(ISRPS.EQ.0)
     *WRITE(3,2001) NN,(NPV(I),I=1,4) 
      IF(ISRPS.EQ.1)
     *WRITE(3,6001) NN,(NPV(I),I=1,4)
 2001 FORMAT(/1X,'GRESKA U ULAZNIM PODACIMA ZA GRANICNE USLOVE:'/
     11X,'ELEMENT BR.',I5/1X,'UCITANI CVOROVI NA GRANICI :',4I5/
     21X,'NE CINE JEDNU POVRS ELEMENTA')
 6001 FORMAT(/1X,'ERROR IN BOUNDARY CONDITION INPUT DATA:'/
     11X,'ELEMENT NO.',I5/1X,'READIN BOUNDARY NODES :',4I5/
     21X,'DO NOT CONSTITUTE ONE SURFACE OF ELEMENT')
      S T O P
   60 IF(NG3D(NN).EQ.0) GO TO 65
      IVR=NG3D(NN)
      GO TO 70
   65 N3DGU=N3DGU+1
      IVR=N3DGU
      NG3D(NN) = IVR
   70 IF(IFL.GT.0.OR.IHP.GT.0.OR.ITO.GT.0.OR.IHR.GT.0.OR.IFO.GT.0)
     1GO TO 75
      IFL=IFLS
      IHP=IHPS
      IHR=IHRS
      ITO=ITOS
      IFO=IFOS
      GO TO 80
   75 IFLS=IFL
      IHPS=IHP
      IHRS=IHR
      ITOS=ITO
      IFOS=IFO
   80 NELG(1,I,IVR)=IFL
      NELG(2,I,IVR)=IHP
      NELG(3,I,IVR)=ITO
      NELG(4,I,IVR)=IHR
      NELG(5,I,IVR)=IFO
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      WRITE(3,5002) NN,(NPV(I),I=1,4),IFL,IHP,ITO,IHR,IFO
      ENDIF
 5002 FORMAT(I5,2X,4I5,I6,I8,3I12)
      GO TO 30
  200 N3DGUL=N3DGU
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE TGRAF3(NEL,NBR2,NET,NGE,II,LAYER)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON /SRPSKI/ ISRPS
      DIMENSION NEL(NET,*)
      IF(ISRPS.EQ.0.AND.(NBR2.NE.8.AND.NBR2.NE.20))
     1WRITE(3,2200) NGE
      IF(ISRPS.EQ.1.AND.(NBR2.NE.8.AND.NBR2.NE.20))
     1WRITE(3,6200) NGE
      NBR=NBR2
      IF(NBR2.LT.20) NBR2=8
      IF(NBR2.EQ.21) NBR2=20
      ITYPE=19
      IF(NBR2.EQ.20) ITYPE=20
      IE1=115
      IF(NBR2.EQ.20) IE1=116
      IE2=1
      IE3=LAYER !1
      ICOL=8
      IND=-1
      ITYP=71
      WRITE(II,1100) IND
      WRITE(II,1100) ITYP
      DO 10 I=1,NET
         WRITE(II,1000) I,ITYPE,IE1,IE2,IE3,ICOL,NBR2
         IF(NBR2.EQ.8) THEN
            WRITE(II,1000) (NEL(I,J),J=1,8)
         ELSE
            WRITE(II,1000) (NEL(I,J),NEL(I,J+8),J=1,4),
     1                    (NEL(I,J),J=17,20),(NEL(I,J),NEL(I,J+8),J=5,8)
         ENDIF
   10 CONTINUE
      WRITE(II,1100) IND
      NBR2=NBR
      RETURN
 1100 FORMAT(I6)
 1000 FORMAT(8I10)
 2200 FORMAT(//' PROGRAM ZA GRAFICKO PRIKAZIVANJE REZULTATA "IDEAS"'/
     1' ZAHTEVA 3/D ELEMENT SA 8 ILI 20 CVOROVA U GRUPI ELEMENATA NGE ='
     1,I5)
 6200 FORMAT(//' GRAPHIC PACKAGE   "IDEAS"'/
     1' PERMITS ONLY 3/D ELEMENTS WITH 8 OR 20 NODES PER ELEMENT IN',
     1' GROUP   NGE =',I5)
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE K21MGL
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
CE MAIN PROGRAM TO FORM MATRIXES AND VECTORS OF ELEMENT K21
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA3/ LNEL3D,LMAT3D,LNQ3D,LITG3D,LIP3CV,LNG3D,LNELG3,
     1LEL,LHP,LHK,LSKE,LDEL,LDEHP,LDEHK,LHR
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON /SRPSKI/ ISRPS
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ
	common/elemmodels/modelel(20),ngele
	COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON/DARCYEQ/ ELDARCYX,ELDARCYY,ELDARCYZ,VDARCY,PINLET,
     1       DARCYX,JEDNDARCY,ISOLVER,IDARCY,LDARCYD,LDARCYMI,
     2       LIDARCYMA,NPTINDARCY 
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON/MAINIDT/NDIMIDT  
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10)
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
      COMMON/PIPEMIX/FLAMREF,IPIPEMIX,NETIP,LIDPRESS,LPRESS,LIDP,
     2               LLAMDAV,IDEFORMG,INDFLUXE,ILAMDA    
      COMMON/CSMEARED/ISMEARED,VOLFRACT,POROSSME,LVOLFRACTV,LDWALLSME,
     1 LPWALLSMEV,LDIAMSME,LTHICKSME,IPARTSME,LVOLSME,IRAVSME,DRAVSME
      COMMON/CSMEAREDG/ISMEAREDG,NDIMIDG,ICONVG,INDIFFUSG,LAMIV,
     1     LDARCYCOEF,MATNEWUSE,LHYDRCOEFV,LDPIPE,LDTISSUE,IPRINTVEL,
     2     IACTIVE(4),LZADATA1,LZADATA0,LZADAVXYZ,LWALLAREA,
     3     LWALLPOROSV,LIPIPENOD,ILARGEVES
      COMMON/CSMEARED2/IPASSME,JEDNPRES,JEDNCONC,LTT1P,LTT1C,LTT10P,
     1      LTT10C,LDIRCOEFF,LDPIPECA,LDARCYCA,I2D3D,IANIZS,NDIMTENSOR
C
      COMMON/CMULTITIS/MULTITIS,MULTIMOL,IACTIVECELL(4),NDIMCELL,LIDTV,
     1      LIDTVCELL,JEDNPV(10),JEDNCV(10),JEDNPMAX,JEDNCMAX,MM
      COMMON/MULTITISAD/LIPARTITV,LIACTIVEV,LIVSOURCEV,LIADHESIV,
     1 LVOLFRACT,LDARCYCOEFV,LHYDRCOEFPV,LHYDRCOEFCV,LAMIPV,LAMICV,
     2 LVOLSMEV,LDARTENSOR,LWALLAREAV,LVFMULTIT,LDIAMCELLV,
     3 LDPIPEEXV,LDCELLSV,LDPIPECAP,LIPARTNODEV,LPARTNODEV,
     4 LIACTIVENODEV,LACTIVENODEV,LISOURCENODEV,LSOURCENODEV,
     5 LADHESINODEV,LIADHESINODEV,LDWALLSMEV,LDWALLCELL,LDIAMSMEV,
     6 LTHICKSMEV,LDWALLV,LIPIPENODV,LICRITICALV,LCRITICALV,
     7 LTT1PM,LTT01PM,LTT1CM,LTT01CM,LFMULT
      COMMON/CMATDATA/NDIMPIPEMAX,NDIMCAPMAX,NDIMCELLMAX,NDIMPMAX,
     4 NDIMAMAX,NDIMSMAX,NDIMADHMAX,NDIMWPIPEMAX,NDIMWCAPMAX,
     5 NDIMWCELLMAX,DARCYCOEF,AMICOEFP,AMICOEFC,HYDROCOEFP,HYDROCOEFC,
     6 DARCYTENSOR(6),DPIPE,DTISSUE,DIFFTENSOR(6),PARTPIPE1,PARTPIPE2,
     7 PARTCELL(2,4),ACTIVECOEF(2,4),SOURCECOEFF(4),ADHCOEFF(2,4),
     8 DWALLPIPE,DWALLCAP,DWALLCELL(4),INODEDTOT,INODEWTOT,LDPIPEEXA,
     9 LDPIPECAPA,LCELLA,LPARTA,LACTIVEA,LSOURCEA,LADHISEA,LWALLPIPEA,
     1 LWALLCAPA,LWALLCELLA,IREADDIFNODE
      COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
      COMMON/CZADATMULT/NZADPV(10),NZADPMAX,LZADATM0,LZADATM1,LNZADNODF,
     1      LZADVALUE,NPTIMESYSV(10),NPTSYSMAX,LZADSYSV
      COMMON/CMAXSAVE/LMAXSAVE
      COMMON/CCELLIN/INDCELLIN,INDCELLINV(10),VFVS(10,5),DIAMVS(10,5),
     1 RAVVS(10,5),DDIFFICY(10,10),DDIFFIVS(10,10,5),DDIFFICM(10,10,5)
     2 ,IPARTIVS(10,10,5),PARTIVS(10,10,5),NDIMVS,NVSMAX,LIDVS,NZADVS,
     3 LNZADNODVS,LNZADNFVS,LNZADFVS,LZADVALUEVS,LZADATAVS0,LZADATAVS 
      COMMON/CLYMPH/INDLYMPH,INDLYMPHH,INDLYMPHC,LRVLYMPH,LPLYMHV,
     1 LCLYMHV,TABLYHW(10),TABLYCW(10,10),TABLYD(10),TENSORLYP(10,6),
     2 TENSORLYC(10,10,6),ITABLYP,ITABLYC,ITABLYD,LHCOEFLYNOD,
     3 LHCOEFLYNODW,LCCOEFLYNOD,LCCOEFLYNODW,LDCOEFLYNOD,LIDLYMPHH,
     4 LIDLYMPHC 
      COMMON/CLYMHZADA/NZADLYMPH,LINPUTLY,LZADVALUELY,LZADALYMH1,
     1 LZADALYMH0,NZADPLYV(10),NZADLYMPHMX 
C                 
CE  POINTERS FOR MATRIXES OF ELEMENT
CE  NUMBER OF MEMBERS IN MATRIXES OF ELEMENT
C     
      IF(INDFLUXE.EQ.1) RETURN
C
      IF(NP3DMX.EQ.8) MEL3D=36
      IF(NP3DMX.GT.8) MEL3D=231
      NDES=NP3DMX*NDIMIDT
      IF(ISMEARED.GT.1) NDES=8
      IF(IDARCY.NE.0) THEN
         MEL3D=NDES*NDES
      ENDIF
      LEL=LMAXM
      LHP=LEL
      IF(NSTAC.GT.0) LHP=LEL+MEL3D
      LHR=LHP+MEL3D
      LHK=LHR
      IF(LINTE.GT.0.OR.indiffus.EQ.1) LHK=LHR+MEL3D
      LSKE=LHK+MEL3D
      LMAX=LSKE+MEL3D
      IF(INTEB.EQ.1) GO TO 30
      LDEL = LMAX
      IF(KONC.EQ.1) LMAX = LMAX + MEL3D
      LDEHP = LMAX
      IF(KONK.EQ.1) LMAX = LMAX + MEL3D
      LDEHK = LMAX
      IF(MAXTHP.GT.1)LMAX = LMAX + MEL3D
   30 IF(LMAX.LE.NTOTA) GO TO 20
      IF(ISRPS.EQ.0)
     *   WRITE(3,2000) LMAX,NTOTA
      IF(ISRPS.EQ.1)
     *   WRITE(3,6000) LMAX,NTOTA
 2000 FORMAT(/1X,'NEDOVOLJNA DIMENZIJA U VEKTORU A - ZA SMESTANJE MATRIC
     1A ELEMENATA'/1X,'POTREBNA DIMENZIJA,LMAX=',I10/1X,'RASPOLOZIVA DIM
     2ENZIJA, NTOTA=',I10)
 6000 FORMAT(/1X,' UNSUFFICIENT DIMENSION OF WORKING VECTOR A FOR',
     1' ELEMENT MATRIX'/1X,' REQUIRED DIMENSION, LMAX =',I10/1X,
     2' AVAILABLE DIMENSION, NTOTA=',I10)
      STOP
   20 continue
C
      NET      = NELEDAT(NGE,2)
      IZIP     = NELEDAT(NGE,4)
      MAT3DCONV= NELEDAT(NGE,5)
      MAT3DDIF = NELEDAT(NGE,6) 
 	LNEL3D   = NELEDAT(NGE,7)
      LMAT3D   = NELEDAT(NGE,8)
      LNQ3D    = NELEDAT(NGE,9)
      LITG3D   = NELEDAT(NGE,11)
      LIP3CV   = NELEDAT(NGE,12)
      IDIFUSE  = NELEDAT(NGE,13)
      NE3D     = NET
C
      AEFF = 1.D0
C
      LNODEIN  = LMAX
      LNODEOUT = LMAX
C
      IF(MULTITIS.GT.0.OR.MULTIMOL.GT.1) GO TO 100
C
      IF(ISMEARED.NE.1) THEN
          LNZADCONTUREV=LMAX
          IF(ICONV.EQ.1.AND.IPRINTVEL.EQ.1.AND.IPASSME.EQ.1) 
     1    LMAX=LMAX+6*NPT
         CALL INTEB3DARCYS(A(LIDT),A(LIDTCD),A(LCORD),A(LTCONS),
     1   A(LNTAKV),A(LNTACV),A(LNEL3D),A(LNQ3D),A(LMAT3D),A(LEL),A(LHP),
     2   A(LHK),A(LSKE),A(LTT1P),A(LTT1C),A(LTT10P),A(LTT10C),A(LIBFK),
     3   A(LFAKP),A(LHR),A(LMATCONV),A(LMATFUNC),A(LMATDIF),A(LMATFUND),
     4   A(LNZADJ),A(LZADFM),A(LNODEIN),A(LNODEOUT),A(LFLUXDX),
     5   A(LMATHEAT),A(LMATFUNHRO),A(LMATFUNHSH),A(LMATFUNHK),
     6   A(LVOLFRACTV),A(LAMIV),A(LDARCYCOEFV),A(LIDARCYMA),
     7   A(LDWALLSMEV),A(LDIAMSMEV),A(LDPIPE),A(LDTISSUE),A(LZADATA1),
     8   A(LZADATA0),A(LZADAVXYZ),A(LNZADCONTUREV),A(LDIRCOEFF),
     9   A(LDPIPECAP),A(LDARCYCAP),IACTIVE,NZADP,NDES,MAT3DCONV,
     1   MAT3DDIFF,AEFF,IDARCY,VDARCY,NZADIN,NZADOUT,ISMEAREDG,
     2   IPRINTVEL,NDIMIDG,JEDNPRES,JEDNCONC,IPASSME,IANIZS,NDIMTENSOR) 
      ELSE 
         CALL INTEB3DARCY(A(LIDT),A(LIDTCD),A(LCORD),A(LTCONS),
     1   A(LNTAKV),A(LNTACV),A(LNEL3D),A(LNQ3D),A(LMAT3D),A(LEL),A(LHP),
     2   A(LHK),A(LSKE),A(LTT1),A(LTT2),A(LTT0),A(LIBFK),A(LFAKP),
     3   A(LHR),A(LMATCONV),A(LMATFUNC),A(LMATDIF),A(LMATFUND),
     4   A(LNZADJ),A(LZADFM),A(LNODEIN),A(LNODEOUT),A(LFLUXDX),
     5   A(LMATHEAT),A(LMATFUNHRO),A(LMATFUNHSH),A(LMATFUNHK),NZADP,
     6   NDES,IDARCY,MAT3DCONV,MAT3DDIF,AEFF,VDARCY,NZADIN,NZADOUT,
     7   NDIMIDG)
      ENDIF 
      LMAX=LEL
      RETURN 
C
C     MULTIMOLAR OR COMPOSITE TISSUE (TO DO)
C
  100 CONTINUE
         CALL INTEB3DARCYSM(A(LIDT),A(LCORD),A(LNTAKV),A(LNTACV),
     1   A(LNEL3D),A(LNQ3D),A(LMAT3D),A(LEL),A(LHP),A(LHK),A(LSKE),
     2   A(LTT1P),A(LTT1C),A(LTT10P),A(LTT10C),A(LTT1PM),A(LTT01PM),
     3   A(LTT1CM),A(LTT01CM),A(LIBFK),A(LFAKP),A(LHR),A(LMATCONV),
     4   A(LMATFUNC),A(LMATDIF),A(LMATFUND),
     4   A(LNZADJ),A(LZADFM),A(LNODEIN),A(LNODEOUT),A(LFLUXDX),
	5	 A(LIDTV),A(LAMICV),A(LDARTENSOR),A(LIDTVCELL),A(LIVMIGV),A(LVMIGV),
     6   A(LIDTMIG),A(LVFTT),A(LVFMULTIT),A(LDIAMCELLV),A(LDPIPEEXV),
     7   A(LDCELLSV),A(LIACTIVENODEV),A(LACTIVENODEV),A(LISOURCENODEV),
     7   A(LZADATM01),A(LZADATM1),A(LNZADNODF),
     8   A(LSOURCENODEV),A(LMATHEAT),A(LMATFUNHRO),A(LMATFUNHSH),
     9   A(LMATFUNHK),A(LVOLFRACTV),A(LAMIV),A(LDARCYCOEFV),
     1   A(LIDARCYMA),A(LDWALLSMEV),A(LDIAMSMEV),A(LDPIPE),A(LDTISSUE),
     2   A(LZADATA1),A(LZADATA0),A(LZADAVXYZ),A(LNZADCONTUREV),
     3   A(LDIRCOEFF),A(LDPIPECAP),A(LDARCYCAP),IACTIVE,A(LCHTAXV),
     4   A(LIDLYMPHH),A(LIDLYMPHC),A(LRVLYMPH),A(LHCOEFLYNOD),
     5   A(LCCOEFLYNOD),A(LDCOEFLYNOD),A(LINPUTLY),A(LZADALYMH1),
     6   A(LZADALYMH0),NZADP,NDES,MAT3DCONV,MAT3DDIFF,AEFF,IDARCY,
     7   VDARCY,NZADIN,NZADOUT,ISMEAREDG,IPRINTVEL,NDIMIDG,JEDNPRES,
     8   JEDNCONC,IPASSME,IANIZS,NDIMTENSOR,LFMULT)
C
      IF(INDCELLIN.EQ.0.OR.IPASSME.EQ.1) RETURN
C
C     DIFFUSION WITHIN CELL VESICLES      
C
      CALL INTEB3CINTERNAL(A(LCORD),A(LNEL3D),A(LTT1C),
     1  A(LTT10C),A(LTT1CM),A(LTT01CM),A(LVOLFRACTV),A(LVFMULTIT),
     2  A(LIDVS),A(LNZADNODVS),A(LZADATAVS0),A(LZADATAVS),A(LRVLYMPH),
     3  JEDNCONC,LFMULT,INDLYMPH)
C
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTEB3DARCYSM(IDT,CORD,NTAKV,NTACV,NEL,NQ,MATV,EL,HP,
     1 HK,SKE,TT1P,TT1C,TT10P,TT10C,TT1PM,TT01PM,TT1CM,TT01CM,IBFK,FAKP,
     2 HR,MATCONV,AMATFC,MATDIF,AMATFD,NZADJ,ZADFM,NODEIN,NODEOUT,FLUX,
     3 IDTV,AMICV,DARTENSOR,IDTVCELL,IVMIGV,VMIGV,IDTMIG,VFTT,VFMULTIT,
     4 DIAMCELLV,DPIPEEXV,CELLSV,IACTIVENODEV,ACTIVENODEV,ISOURCENODEV,
     5 SOURCENODEV,ZADATM01,ZADATM1,NZADNODF,
     7 MATERH,AMATFRO,AMATFSH,AMATFK,VOLFRACTV,AMIV,DARCYCOEFV,IDARCYMA,
     8 DWALLSMEV,DIAMSMEV,DPIPE,DTISSUE,ZADATA1,ZADATA0,ZADAVXYZ,
     9 NZADCONTUREV,DIRCOEFF,DPIPECAP,DARCYCAP,IACTIVE,CHTAXV, IDLYMPHH,
     1 IDLYMPHC,RVLYMPH,HCOEFLYNOD,CCOEFLYNOD,DCOEFLYNOD,INPUTLY,
     2 ZADALYMH1,ZADALYMH0,NZADP,NDES,MAT3DCONV,MAT3DDIFF,AEFF,IDARCY,
     3 VDARCY,NZADIN,NZADOUT,ISMEARED,IPRINTVEL,NDIMID,JEDNPRES,
     4 JEDNCONC,IPASSME,IANIZS,NDIMTENSOR,LFMULT)
C     
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CE    MAIN PROGRAM TO PERFORM INTEGRATION OVER V OF ELEMENT
C
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA3/ LNEL3D,LMAT3D,LNQ3D,LITG3D,LIP3CV,LNG3D,LNELG3,
     1LEL,LHP,LHK,LSKE,LDEL,LDEHP,LDEHK,LHR
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON/REAL3D/ CK(21,3),P(3,21),PJ(3,21),XJ(3,3),H(21),T21(21),
     1AK,CC,HH,QQ,DET,DET1,F21(21),T212(21),T210(21),HHP
      COMMON /SRPSKI/ ISRPS
      COMMON/FLUXKC/INDFLUXKC
	COMMON/KONVERNDS/CONCT,CONCTOUT,KONV
      COMMON/UNSYMMETRIC/LALEVO,LDESNO,LSILE,ISYMM
      COMMON/SURFACE3DBC/NODSURF(8,3)
C
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ            
	common/elemmodels/modelel(20),ngele              	    
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
C
      COMMON/CMULTITIS/MULTITIS,MULTIMOL,IACTIVECELL(4),NDIMCELL,LIDTV,
     1      LIDTVCELL,JEDNPV(10),JEDNCV(10),JEDNPMAX,JEDNCMAX,MM 
      COMMON/CMATDATA/NDIMPIPEMAX,NDIMCAPMAX,NDIMCELLMAX,NDIMPMAX,
     4 NDIMAMAX,NDIMSMAX,NDIMADHMAX,NDIMWPIPEMAX,NDIMWCAPMAX,
     5 NDIMWCELLMAX,DARCYCOEF,AMICOEFP,AMICOEFC,HYDROCOEFP,HYDROCOEFC,
     6 DARCYTENSOR(6),DIFFTENSOR(6),PARTPIPE1,PARTPIPE2,
     7 PARTCELL(2,8),ACTIVECOEF(2,8),SOURCECOEFF(4),ADHCOEFF(2,8),
     8 DWALLPIPE,DWALLCAP,DWALLCELL(4),INODEDTOT,INODEWTOT,LDPIPEEXA,
     9 LDPIPECAPA,LCELLA,LPARTA,LACTIVEA,LSOURCEA,LADHISEA,LWALLPIPEA,
     1 LWALLCAPA,LWALLCELLA,IREADDIFNODE
      COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
      COMMON/CZADATMULT/NZADPV(10),NZADPMAX,LZADATM0,LZADATM1,LNZADNODF,
     1      LZADVALUE,NPTIMESYSV(10),NPTSYSMAX,LZADSYSV
      COMMON/CMIGRATION/IMIGTABLE(10),JEDNMIGV(10),VMIGC(10),
     1 INDCHTAXV(10),INDCHTAX,IMIGTOT,IMIGNODE,LIVMIGV,LVMIGV,LIDTMIG,
     2 INDMIG,LVFTT,JEDNMIG,INDCHTAXTOT,LCHTAXV
      COMMON/CCELLIN/INDCELLIN,INDCELLINV(10),VFVS(10,5),DIAMVS(10,5),
     1 RAVVS(10,5),DDIFFICY(10,10),DDIFFIVS(10,10,5),DDIFFICM(10,10,5)
     2 ,IPARTIVS(10,10,5),PARTIVS(10,10,5),NDIMVS,NVSMAX,LIDVS,NZADVS,
     3 LNZADNODVS,LNZADNFVS,LNZADFVS,LZADVALUEVS,LZADATAVS0,LZADATAVS 
      COMMON/CLYMPH/INDLYMPH,INDLYMPHH,INDLYMPHC,LRVLYMPH,LPLYMHV,
     1 LCLYMHV,TABLYHW(10),TABLYCW(10,10),TABLYD(10),TENSORLYP(10,6),
     2 TENSORLYC(10,10,6),ITABLYP,ITABLYC,ITABLYD,LHCOEFLYNOD,
     3 LHCOEFLYNODW,LCCOEFLYNOD,LCCOEFLYNODW,LDCOEFLYNOD,LIDLYMPHH,
     4 LIDLYMPHC 
      COMMON/CLYMHZADA/NZADLYMPH,LINPUTLY,LZADVALUELY,LZADALYMH1,
     1 LZADALYMH0,NZADPLYV(10),NZADLYMPHMX 
C
      DIMENSION XG(15),WGT(15),NREF(6),IG3D8(8)
      DIMENSION IDT(NDIMID,NPT),CORD(NPT,3), 
     2 NTAKV(*),NTACV(*),NEL(NE3D,8),NQ(*),MATV(*),EL(*),HP(*),HK(*),
     3 SKE(NDES,NDES),TT1P(JEDNPRES),TT1C(JEDNCONC),TT10P(JEDNPRES),
     4 TT10C(JEDNCONC),IBFK(NMATT,*),FAKP(NMATT,*)
      DIMENSION MATCONV(NMATTCONV),AMATFC(NMATTCONV,2,*),
     1          MATDIF(NMATTDIF),AMATFD(NMATTDIF,2,*)
      DIMENSION NZADJ(3,NZADP),ZADFM(NZADP)
      DIMENSION NODEIN(NZADIN),NODEOUT(NZADOUT),FLUX(NPT)
      DIMENSION MATERH(NMATTHEAT),AMATFRO(NMATTHEAT,2,*),
     2          AMATFSH(NMATTHEAT,2,*),AMATFK(NMATTHEAT,2,*)       
      DIMENSION VOLFRACTV(NPT),AMIV(NPT),DARCYCOEFV(NPT),IDARCYMA(NPT),
     1 DWALLSMEV(NPT),DIAMSMEV(NPT),DPIPE(NPT),DTISSUE(NPT),
     2 ZADATA1(NZADP),ZADATA0(NZADP),ZADAVXYZ(2,3,NPT),
     3 NZADCONTUREV(3,NPT),DIRCOEFF(3,NPT),
     1 DARCYCAP(NDIMTENSOR,NPT),IACTIVE(4)
C
      DIMENSION TT1PM(MULTIMOL,JEDNPMAX),
     2 TT01PM(MULTIMOL,JEDNPMAX),TT1CM(MULTIMOL,JEDNCMAX),
     3 TT01CM(MULTIMOL,JEDNCMAX)

      DIMENSION IDTV(MULTIMOL,NDIMID,NPT),AMICV(NPT),
     4 DARTENSOR(NDIMTENSOR,NPT),IDTVCELL(MULTIMOL,NDIMCELL,NPT),
     5 IVMIGV(IMIGNODE,NPT),VMIGV(IMIGNODE,NPT),IDTMIG(IMIGTOT,NPT),
     6 VFTT(IMIGTOT,NPT),VFMULTIT(NDIMCELL,NPT),
     7 DIAMCELLV(NDIMCELL,NPT),DPIPEEXV(MULTIMOL,NPT,2),
     8 DCELLSV(MULTIMOL,NPT,NDIMCELLMAX),
     5 DPIPECAP(MULTIMOL,NDIMTENSOR,NPT),
     6 IACTIVENODEV(MULTIMOL,NDIMAMAX,NPT),
     9 ACTIVENODEV(MULTIMOL,NDIMAMAX,NPT),
     7 ISOURCENODEV(MULTIMOL,NDIMSMAX,NPT),    
     8 SOURCENODEV(MULTIMOL,NDIMSMAX,NPT),
     9 ZADATM01(MULTIMOL,NZADPMAX),ZADATM1(MULTIMOL,NZADPMAX),
     1 NZADNODF(MULTIMOL,3,NZADPMAX),CHTAXV(INDCHTAXTOT,NPT),
     2 IDLYMPHH(NPT),IDLYMPHC(MULTIMOL,NPT),RVLYMPH(NPT),
     3 HCOEFLYNOD(NDIMTENSOR,NPT),CCOEFLYNOD(MULTIMOL,NDIMTENSOR,NPT),
     4 DCOEFLYNOD(NPT)   
      DIMENSION INPUTLY(MULTIMOL,3,NZADLYMPHMX),
     1          ZADALYMH1(MULTIMOL,NZADLYMPHMX),
     2          ZADALYMH0(MULTIMOL,NZADLYMPHMX)   
C
      DIMENSION ZADLOCAL32(16),SKEM(8,8),SKEP(8,8),
     2          SKED(8,8),NLOCSU(24),PLOCAL(27),TBK(3)
     
      DIMENSION ZADLOCAL(14,8),ZADLOCAL0(14,8),LMZADA(14,8),
     1          VLOCAL(4,8),VCONV(3,10),VOLFLOC(8),
     2          DARCYVS(3,2),DDIFV(3,4),ILOC(4,8),LM3(8)
      DIMENSION SKES(14,8,8),SKEMS(14,8,8),SKEDS(14,8,8),LMS(14,8),
     1          TT21S(14,8),TT210S(14,8),HPS(14,36),ELS(14,36),
     2          HKS(14,36),SKEES(8,8),F21ES(8),NODEL(8),
     3          ENV(3),LMTOT(14)
      DIMENSION DARCYMA(3,3),DVECT(6),DVECTP(6),GRADP(3),VFCELL(10),
     1          VOLFRACTLY(8)
      DIMENSION ISOURCEL(8,10),SOURCEL(8,10),F21V(8)
      DIMENSION VMIGLOCAL(10,8),TT21SMIG(10,4)
      DIMENSION VFVSTOTV(10)
      DIMENSION VFLY(8),VLOCLY(8),TT1LY(8),TT1LY0(8),LMZADALY(8),
     1          SKEESLY(8,8),SKEMSLY(8,8),LMLY(8)  
C     
      DATA IG3D8/7,3,6,2,8,4,5,1/
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
      DATA NLOCSU/1,4,8,5,2,6,7,3,2,1,5,6,3,7,8,4,1,2,3,4,5,6,7,8/
      DATA NODSURF /1, 2, 2, 1, 1, 2, 2, 1,
	2              3, 3, 4, 4, 3, 3, 4, 4,
	3              5, 5, 5, 5, 6, 6, 6, 6/
     
      IF(IZIP.EQ.2) GO TO 15
      IF(NQE.NE.1) GO TO 15
      CALL TABF(A(LQEFN),A(LNTAQE),NQE,NQE,VREME,QQ,NTA,IND)
      IF(IND.EQ.0) GO TO 15
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) NQE,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) NQE,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPL. IZVOR-VREME,  BR.=',I3/
     11X,'ARGUMENT VREME= ',F10.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME = ',1PD12.4)
      STOP
   15 CONTINUE
C
      ICONVV = ICONV
      IDIFFHEAT = 0
      IF(IDIFUSE.NE.0.OR.IHEAT.NE.0) IDIFFHEAT = 1
C         
      NNID=4
      ISOURCETOT=0
      ISOURCENOD=0
      VEFFELY=0.D0
      NZADLY=NZADPLYV(MM)
C
      IF((MULTITIS.GT.0.AND.IPASSME.EQ.2).OR.INDMIG.EQ.1) THEN
         NNID=4+NDIMCELL 
         IF(INDMIG.EQ.0) THEN
            DO I=1,NDIMCELL
               IF(ISOURCEC(I,MM).GT.0)ISOURCETOT=ISOURCETOT+1 
               IF(ISOURCEC(I,MM).EQ.3)ISOURCENOD=ISOURCENOD+1 
            ENDDO
         ELSE
            IF(ITER.EQ.0) THEN
               KID=0
               DO IC=1,NDIMCELL
                  IF(IMIGTABLE(IC).GT.0) THEN
                     KID=KID+1
                     DO J=1,NPT
                        VFTT(KID,J)=VFMULTIT(IC,J)
                     ENDDO
                  ENDIF
               ENDDO
            ENDIF
         ENDIF 
      ENDIF 
      DDIFMIG=1.0D-8  
C
      CALL CLEAR(VFVSTOTV,10)
      IF(INDCELLIN.GT.0.AND.IPASSME.EQ.2) THEN
         DO  NC=1,NDIMCELL
             NVSE=INDCELLINV(NC)
             IF(NVSE.GT.0) THEN
                DO I=1,NVSE
                   VFVSTOTV(NC)=VFVSTOTV(NC)+VFVS(NC,I)
                ENDDO
             ENDIF
         ENDDO
      ENDIF 
C
      IFORM  = 2
	AKTT   = 1./DT
	DDARCY = 0.d0
	VBR    = 1.0D35
	CC=1.D0
C
      NNID1=NNID
      IF(INDLYMPH.EQ.1) NNID1= NNID1+1  
C	
CE    LOOP OVER ELEMENTS =====================================
C
      DO 200 NLM = 1,NE3D
      KKIN  = 0   
      KKOUT = 0      
c    promenjene dimenzije za ciscenje
      CALL CLEAR(ZADLOCAL,112)
      CALL CLEAR(ZADLOCAL0,112)
      CALL ICLEAR(LMZADA,112)
      CALL CLEAR(VLOCAL,32)
      CALL CLEAR(VOLFLOC,8) 
      CALL ICLEAR(ILOC,32)
      CALL CLEAR(SKEMS,896) 
      CALL CLEAR(SKES,896)
      CALL CLEAR(SKEDS,896)
      CALL ICLEAR(LMS,112)
      CALL CLEAR(TT21S,112)
      CALL CLEAR(TT210S,112)
      CALL CLEAR(HPS,504)
      CALL CLEAR(ELS,504)
      CALL CLEAR(HKS,504)
      
      CALL CLEAR(SKE,NDES*NDES)
      CALL CLEAR(SKEM,64)
      CALL CLEAR(SKEP,64)
      CALL CLEAR(SKED,64)
      CALL ICLEAR(LMTOT,14) 
      CALL CLEAR(F21V,8)

      IF(ISOURCENOD.GT.0) THEN
         CALL ICLEAR(ISOURCEL,80)
         CALL CLEAR(SOURCEL,80)
      ENDIF  
      IF(INDMIG.EQ.1) CALL CLEAR(VMIGLOCAL,80)   
      
      IF(INDLYMPH.EQ.1) THEN
         CALL CLEAR(TT1LY,8)
         CALL CLEAR(TT1LY0,8)
         CALL ICLEAR(LMLY,8)
         CALL CLEAR(SKEESLY,64)
         CALL CLEAR(SKEMSLY,64) 
      ENDIF   

      IF(NMAT3D.GT.1.OR.INDIFFUS.EQ.1) MAT3D=MATV(NLM)
      IQE=0
      IF(NQE.GT.0) IQE=NQ(NLM)
      ARG=0.
      IF(IDARCY.NE.0) GO TO 30
	IF(indiffus.EQ.1) THEN
	  CC=1.D0
	  GO TO 30 
	ENDIF
      IF(NSTAC.EQ.0.OR.KONC.EQ.1) GO TO 25
      CALL TABF(A(LTABC),A(LNTACV),MAT3D,NMATT,ARG,CC,NTA,IND)
   25 IF(IANIZ.EQ.0) GO TO 188
      FAX=FAKP(MAT3D,1)
      FAY=FAKP(MAT3D,2)
      FAZ=FAKP(MAT3D,3)
  188 IBX=IBFK(MAT3D,1)
      IBY=IBFK(MAT3D,2)
      IBZ=IBFK(MAT3D,3)
      IF(KONK.EQ.1) GO TO 30
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,ARG,AKX,NTA,IND)
      IF(IBY.GT.0.AND.IBZ.GT.0) GO TO 180
      IF(IANIZ.EQ.0) GO TO 189
      AKZ=AKX*FAZ
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 30
  189 AKY=AKX
      AKZ=AKX
      GO TO 30
  180 CALL TABF(A(LTABK),A(LNTAKV),IBY,NTABK,ARG,AKY,NTA,IND)
      CALL TABF(A(LTABK),A(LNTAKV),IBZ,NTABK,ARG,AKZ,NTA,IND)
   30 IF(IQE.EQ.0.OR.NQE.EQ.1) GO TO 44
      CALL TABF(A(LQEFN),A(LNTAQE),IQE,NQE,VREME,QQ,NTA,IND)
      IF(IND.EQ.0) GO TO 44
      WRITE(3,2000) IQE,VREME
      STOP
   44 IF(IZIP.NE.2.OR.MAXTQE.GT.1) GO TO 40
      CALL TABF(A(LQEFN),A(LNTAQE),IQE,NQE,ARG,QQ,NTA,IND)
C
CE    TEMPERATURE AT NODES  VECTOR
C
   40 NCV      = 0
      NND9     = 0
	NELZAD   = 0
	ICONTOUR = 0
	NBRE=8
C      
      DO 50 I=1,NBRE
      J=NEL(NLM,I)               
      NCV=NCV+1
      NODEL(NCV)=J  
      VOLFLOC(NCV)=VOLFRACTV(J)
      IF(INDLYMPH.EQ.1) THEN 
          VOLFRACTLY(NCV)=RVLYMPH(J)
      ENDIF 
      IF(INDMIG.EQ.1) GO TO 171
C
C     PRESCRIBED VALUES
C     
      IF(MULTIMOL.GT.1) GO TO 170
      
      IF(NZADP.GT.0) THEN
	  DO 345 KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
	      IDOFA=IABS(IDOF)
	      IF(IPASSME.EQ.1) THEN
	         IF(IDOFA.GT.2) GO TO 345
	      ELSE
	         IF(IDOFA.LE.2.AND.ICONV.EQ.0)GO TO 345
	      ENDIF
            IF(IDOF.LT.0) THEN
              ICONTOUR = 1
              DO K=1,3
                JJ=NODSURF(NCV,K)
	          ILOC(IDOFA,JJ)=ILOC(IDOFA,JJ)+1
              ENDDO
            ENDIF	      
            NELZAD=NELZAD+1
            IF(IDOF.GT.0) THEN
               LMZADA(IDOFA,NCV)     = 1
               ZADLOCAL(IDOFA,NCV)   = ZADATA1(KK)
               ZADLOCAL0(IDOFA,NCV)  = ZADATA0(KK)
            ELSE
              VLOCAL(IDOFA,NCV) = ZADATA1(KK)
            ENDIF
	    ENDIF
  345   CONTINUE
	ENDIF
C
	GO TO 171
C  
  170 CONTINUE
C
C     MULTI-MOLECULE CASE  
      NZADPM=NZADPV(MM)
      IF(NZADPM.GT.0) THEN
	  DO 347 KK=1,NZADPM
	    NJ=NZADNODF(MM,1,KK)
	    IF(NJ.EQ.J) THEN
	       IDOF=NZADNODF(MM,2,KK)
             IDOFA=IABS(IDOF)
             NF=NZADNODF(MM,3,KK) 
	       IF(IPASSME.EQ.1) THEN
	          IF(IDOFA.GT.2) GO TO 347
	       ELSE
	          IF(IDOFA.LE.2.AND.ICONV.EQ.0)GO TO 347
	       ENDIF
             IF(IDOF.LT.0) THEN
	         ILOC(IDOFA,NCV) = 1
	         ICONTOUR   = 1
	       ENDIF	      
             NELZAD=NELZAD+1                            
             IF(IDOF.GT.0) THEN
                LMZADA(IDOFA,NCV)     = 1
                ZADLOCAL(IDOFA,NCV)   = ZADATM1(MM,KK)  
                ZADLOCAL0(IDOFA,NCV)  = ZADATM01(MM,KK)
             ELSE
                VLOCAL(IDOFA,NCV) = ZADATM1(MM,KK)
            ENDIF
	    ENDIF
  347   CONTINUE 
	ENDIF   
C   
  171 CONTINUE
C     CELL MIGRATION CALCULATION ------- START 
      IF(INDMIG.EQ.1) THEN
          KK=0
          KID=0
          KMIG=0
          DO IC=1,NDIMCELL
             IC4=4+IC
             IF(IMIGTABLE(IC).GT.0) THEN
                KID=KID+1
                IF(IMIGTABLE(IC).NE.3) THEN
                   VMIGLOCAL(IC,I)=VMIGC(IC)  
                ELSE
                   KK=KK+1
                   IF(IVMIGV(KK,J).GT.0)VMIGLOCAL(IC,NCV2)=VMIGV(KK,J)
                ENDIF
                LMS(IC4,NCV2)=IDTMIG(KID,J)
                TT21S(IC4,NCV2)=VFTT(KID,J)
                TT210S(IC4,NCV2)=VFMULTIT(IC,J)     
             ENDIF
             IF(INDCHTAX.GT.0) THEN
               MM=INDCHTAXV(IC)
               IF(MM.GT.0) THEN
                  KMIG=KMIG+1
                  TT21SMIG(IC,NCV2)=CHTAXV(KMIG,J)
               ENDIF     
             ENDIF
          ENDDO
          GO TO 50
      ENDIF
C     CELL MIGRATION CALCULATION ----------  END    
      IF(MULTIMOL.EQ.1) THEN   
         DO II=1,4
            IF(IACTIVE(II).EQ.1) THEN
               LMS(II,NCV)=IDT(II,J)
            ENDIF
         ENDDO
      ELSE
         DO II=1,4
             LMS(II,NCV)=IDTV(MM,II,J)
         ENDDO
      ENDIF
      IF(NDIMCELL.GT.0.AND.IPASSME.EQ.2) THEN
         DO II=1,NDIMCELL
            LMS(II+4,NCV)=IDTVCELL(MM,II,J) 
         ENDDO
      ENDIF
   45 CONTINUE  
C
C     LYMPH DOMAIN
      IF(INDLYMPH.EQ.1) THEN
         IF(IPASSME.EQ.1) THEN
            JJ=IDLYMPHH(J)
            LMLY(NCV)=JJ
            VFLY(NCV)=RVLYMPH(J)
            IF(JJ.GT.0) THEN
                IF(MULTIMOL.EQ.1) THEN
                    TT1LY(NCV)=TT1P(JJ)
                    TT1LY0(NCV)=TT10P(JJ)
                ELSE
                    TT1LY(NCV)=TT1PM(MM,JJ)
                    TT1LY0(NCV)=TT01PM(MM,JJ)
                ENDIF   
            ELSE
                DO K=1,NZADLY
                   NODE=INPUTLY(MM,1,K)
                   IDOF=INPUTLY(MM,2,K) 
                   IF(NODE.EQ.J.AND.IDOF.EQ.1) THEN
                      TT1LY(NCV)=ZADALYMH1(MM,K)
                      TT1LY0(NCV)=ZADALYMH0(MM,K)
                   ENDIF 
                ENDDO              
            ENDIF
         ELSE
            JJ=IDLYMPHC(MM,J)
            LMLY(NCV)=JJ
            VFLY(NCV)=RVLYMPH(J)
            IF(JJ.GT.0) THEN
                IF(MULTIMOL.EQ.1) THEN
                    TT1LY(NCV)=TT1C(JJ)
                    TT1LY0(NCV)=TT10C(JJ)
                ELSE
                    TT1LY(NCV)=TT1CM(MM,JJ)
                    TT1LY0(NCV)=TT01CM(MM,JJ)
                ENDIF
            ELSE
                DO K=1,NZADLY
                   NODE=INPUTLY(MM,1,K)
                   IDOF=INPUTLY(MM,2,K) 
                   IF(NODE.EQ.J.AND.IDOF.EQ.2) THEN
                      TT1LY(NCV)=ZADALYMH1(MM,K)
                      TT1LY0(NCV)=ZADALYMH0(MM,K)
                   ENDIF 
                ENDDO
            ENDIF         
         ENDIF
      ENDIF
C     END OF LYMPH DOMAIN 
C
      IF(MULTIMOL.GT.1) GO TO 172
C      ONE MOLECULE CASE   
       DO II=1,4
          IF(IACTIVE(II).EQ.1) THEN
             JJ=IDT(II,J)
             IF(JJ.GT.0) THEN
                 IF(II.LE.2) THEN
                    TT21S(II,NCV)= TT1P(JJ)
                    TT210S(II,NCV)= TT10P(JJ)
                ELSE
                    IF(IPASSME.EQ.2) THEN
                       TT21S(II,NCV)= TT1C(JJ)
                       TT210S(II,NCV)= TT10C(JJ)
                    ENDIF
                ENDIF  
	       ELSE
	          IF(LMZADA(II,NCV).EQ.1) THEN
                    TT21S(II,NCV)=ZADLOCAL(II,NCV)
                    TT210S(II,NCV)=ZADLOCAL0(II,NCV)
                ENDIF
             ENDIF
          ENDIF
      ENDDO
	
      IF(NDIMCELL.EQ.0.OR.IPASSME.EQ.1) GO TO 50
C     CELLS
      DO II=1,NDIMCELL
         I4=4+II
         JJ=IDTVCELL(MM,II,J)
         IF(JJ.GT.0) THEN
             TT21S(I4,NCV)= TT1C(JJ)
             TT210S(I4,NCV)= TT10C(JJ)
         ELSE
      	     IF(LMZADA(I4,NCV).EQ.1) THEN
                TT21S(I4,NCV)=ZADLOCAL(I4,NCV2)
                TT210S(I4,NCV)=ZADLOCAL0(I4,NCV2)
             ENDIF
         ENDIF           
      ENDDO           
      GO TO 50
C     MULTIMOLAR CASE
  172 CONTINUE                     
       DO II=1,4                        
          IF(IACTIVE(II).EQ.1) THEN
             JJ=IDTV(MM,II,J)
             IF(JJ.GT.0) THEN
                 IF(II.LE.2) THEN
                    TT21S(II,NCV)= TT1PM(MM,JJ)
                    TT210S(II,NCV)= TT01PM(MM,JJ)
                ELSE
                    IF(IPASSME.EQ.2) THEN
                       TT21S(II,NCV)= TT1CM(MM,JJ)
                       TT210S(II,NCV)= TT01CM(MM,JJ)
                    ENDIF
                ENDIF  
	       ELSE                        
	          IF(LMZADA(II,NCV).EQ.1) THEN
                    TT21S(II,NCV)=ZADLOCAL(II,NCV)
                    TT210S(II,NCV)=ZADLOCAL0(II,NCV)
                ENDIF
             ENDIF
          ENDIF
       ENDDO
       IF(NDIMCELL.GT.0.AND.IPASSME.EQ.2) THEN                         
          DO II=1,NDIMCELL
             I4=4+II
             JJ=IDTVCELL(MM,II,J)
             IF(JJ.GT.0) THEN
                TT21S(I4,NCV)= TT1CM(MM,JJ)
                TT210S(I4,NCV)= TT01CM(MM,JJ)
             ELSE
      	        IF(LMZADA(I4,NCV).EQ.1) THEN
                   TT21S(I4,NCV)=ZADLOCAL(I4,NCV)
                   TT210S(I4,NCV)=ZADLOCAL0(I4,NCV)
                ENDIF   
             ENDIF           
          ENDDO
       ENDIF                             
C
   50 CONTINUE
C     END OF LOOP OVER ELEMENT NODES-----

C      
C
      IF(ISOURCENOD.GT.0.AND.INDMIG.EQ.0) THEN
         KK=0
         DO NC=1,NDIMCELL
            IF(ISOURCEC(NC,MM).GT.0) THEN
               IF(ISOURCEC(NC,MM).EQ.3) THEN    
                  KK=KK+1           !INTERPOLATED FROM NODE
                  DO I=1,8
                    ISOURCEL(I,NC)=ISOURCENODEV(MM,KK,NODEL(I))
                    SOURCEL(I,NC) =SOURCENODEV(MM,KK,NODEL(I))
                  ENDDO
               ELSE
                  CONTINUE !CONSTANT SOURCE
               ENDIF
            ENDIF
         ENDDO 
      ENDIF

  300 IELX=NCV
      IF(INDMIG.EQ.1) GO TO 56
      DO I=1,4
         IF(IACTIVE(I).EQ.1) THEN
            DO J=1,8
               LMTOT(I)=LMTOT(I)+LMS(I,J)
            ENDDO
         ENDIF
      ENDDO
      IF(NDIMCELL.GT.0.AND.IPASSME.EQ.2) THEN
         DO I=1,NDIMCELL
            DO J=1,8
               LMTOT(I+4)=LMTOT(I+4)+LMS(I+4,J)
            ENDDO
         ENDDO
      ENDIF    
C
CE  NODE COORDINATES OF ELEMENTS MATRIX
   56 CONTINUE
      K=0
      DO 60 I=1,NBRE
      IF(NEL(NLM,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM,I)
      DO 55 J=1,3
   55 CK(K,J)=CORD(KK,J)
   60 CONTINUE  
C
CE    GAUSS POINTS  LOOP =============================================
C
      NGAUSC=0
      DO 102 NGX=1,NGAUSX
      JR=NREF(NGAUSX) + NGX
      R = XG(JR)
      DO 101 NGY=1,NGAUSY
      JS=NREF(NGAUSY) + NGY
      S = XG(JS)
      DO 100 NGZ=1,NGAUSZ
      NGAUSC=NGAUSC+1
      JT=NREF(NGAUSZ) + NGZ
      T = XG(JT)
      WT=WGT(JR)*WGT(JS)*WGT(JT)
      CALL JACT(R,S,T,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
CE    VELOCITIES CALCULATION
CE    PRESSURE AT GAUSS POINT
      PRESS=0.0
      IF(ICONV.GT.0.AND.INDMIG.EQ.0) THEN ! uslov promenjen
         DO I=1,NCV
           PRESS=PRESS+H(I)*T21(I)
         ENDDO
      ENDIF     
C
CE    CONCENTRATION AT GAUSS POINT 
C
C     FOR SMEARED CONDITIONS MATERIAL PARAMETERS ARE INTERPOLATED FROM NODES
      IF(ISMEARED.GE.0) GO TO 81
      CONCA=0.D0         
      ! novo
      GO TO 70
      IF(NSTAC.EQ.0.OR.KONC.EQ.0) GO TO 70
      IF(NTACV(MAT3D).EQ.0) GO TO 67
      CALL TABF(A(LTABC),A(LNTACV),MAT3D,NMATT,TEMP,CC,NTA,IND)
      IF(IND.EQ.0) GO TO 70
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) MAT3D,TEMP
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) MAT3D,TEMP
 2005 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA SPEC. TOPLOTA - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6005 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SPECIFIC HEAT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
   67 CALL ANALCF(MAT3D,TEMP,CC,A(LGUSM))
   70 CONTINUE
C
CE  ELEMENT MATRIXES
C
   81 WDT=WT*DET1
      WDT0=WDT
      VEFFEC=0.D0
      DIAM=0.D0 
      DO I=1,NCV
         VEFFEC=VEFFEC+ H(I)*VOLFLOC(I)
         DIAM=DIAM+H(I)*DIAMSMEV(NODEL(I))
      ENDDO
C
      VEFFELY=0.D0
C     IT IS TAKON NOW FIRST ROW IN TABLE
      DIAMLY=TABLYD(1)
      IF(INDLYMPH.EQ.1) THEN
         DO I=1,NCV
            VEFFELY=VEFFELY+ H(I)*VFLY(I)
         ENDDO 
         IF(ITABLYD.EQ.0) THEN
             DIAMLY=0.D0
             DO I=1,NCV
               DIAMLY=DIAMLY+H(I)*DCOEFLYNOD(NODEL(I))
             ENDDO
         ENDIF     
      ENDIF
C
      IF(MULTITIS.GT.0.AND.IPASSME.EQ.2) THEN
         KK=0
         DO I=1,NDIMCELL
            VFCELL(I)=0.D0
            DO J=1,NCV   
                 VFCELL(I)=VFCELL(I)+H(J)*VFMULTIT(I,NODEL(J))
            ENDDO
         ENDDO
      ENDIF 
C
C     CONVECTION
C
      AMI=0.D0
      DDARCY=0.D0
      DDARCY2=0.D0
      DDARCY3=0.D0
      IF(ICONV.EQ.1.AND.INDMIG.EQ.0) THEN 
         IF(IACTIVE(1).EQ.1) THEN
            IF(ISMEARED.EQ.0) THEN
               IF(ICMTABLE(1).NE.3) THEN
                  DO I=1,NCV
                     AMI=AMI+H(I)*AMIV(NODEL(I))
                  ENDDO
               ELSE
                  AMI=AMICOEFP
               ENDIF
               AKPIPE=DIAM*DIAM/(32.*AMI)
               
               DARCYVS(1,1)=AKPIPE 
               DARCYVS(2,1)=AKPIPE
               DARCYVS(3,1)=AKPIPE
           ELSE
               IF(ICMTABLE(6).NE.3) THEN
                  IF(IANIZS.NE.2) THEN    ! KOREKCIJA MK 26.12.17; 3.1.18   
C                     AKCAP=DIAM*DIAM/(96.*AMICOEFC)               
                     DARCYVS(1,1)=DARCYTENSOR(1)
                     DARCYVS(2,1)=DARCYTENSOR(2)
                     DARCYVS(3,1)=DARCYTENSOR(3)
C                      DARCYVS(1,1)=AKCAP
C                      DARCYVS(2,1)=AKCAP
C                      DARCYVS(3,1)=AKCAP
                  ELSE
                     DARCYMA(1,1)=DARCYTENSOR(1)   ! XX
                     DARCYMA(2,2)=DARCYTENSOR(2)   ! YY
                     DARCYMA(3,3)=DARCYTENSOR(3)   ! ZZ
                     DARCYMA(1,2)=DARCYTENSOR(4)   ! XY
                     DARCYMA(2,1)=DARCYTENSOR(4)   ! YX
                     DARCYMA(1,3)=DARCYTENSOR(5)   ! XZ
                     DARCYMA(3,2)=DARCYTENSOR(5)   ! ZX
                     DARCYMA(1,3)=DARCYTENSOR(6)   ! YZ
                     DARCYMA(3,1)=DARCYTENSOR(6)   ! ZY
                  ENDIF
               ELSE
                  CALL CLEAR(DVECTP,6)
                  IF(IANIZS.NE.2) THEN
                     DO I=1,NCV
                        DVECTP(1)=DVECTP(1)+H(I)*DARTENSOR(1,NODEL(I))
                        DVECTP(2)=DVECTP(2)+H(I)*DARTENSOR(2,NODEL(I))
                        DVECTP(3)=DVECTP(2)+H(I)*DARTENSOR(3,NODEL(I))
                     ENDDO  
                     DARCYVS(1,1)=DVECTP(1)
                     DARCYVS(2,1)=DVECTP(2)
                     DARCYVS(3,1)=DVECTP(3)
                  ELSE                    
                     DO I=1,6
                       DO J=1,NCV 
                         DVECTP(I)=DVECTP(I)+H(J)*DARTENSOR(I,NODEL(J))
                       ENDDO
                     ENDDO
                                       
                     DARCYMA(1,1) = DVECTP(1)   ! XX
                     DARCYMA(2,2) = DVECTP(2)   ! YY
                     DARCYMA(3,3) = DVECTP(3)   ! ZZ
                     DARCYMA(1,2) = DVECTP(4)   ! XY
                     DARCYMA(2,1) = DVECTP(4)   ! YX
                     DARCYMA(1,3) = DVECTP(5)   ! XZ
                     DARCYMA(3,1) = DVECTP(5)   ! ZX
                     DARCYMA(2,3) = DVECTP(6)   ! YZ
                     DARCYMA(3,2) = DVECTP(6)   ! ZY
                  ENDIF                  
               ENDIF
            ENDIF        
         ENDIF
      
         IF(IACTIVE(2).EQ.1) THEN
            DDARCY=0.0
            IF(ICMTABLE(1).NE.3) THEN 
               DDARCY=DARCYCOEF
            ELSE 
               DO I=1,NCV
                  DDARCY=DDARCY+H(I)*DARCYCOEFV(NODEL(I))
               ENDDO
            ENDIF
            DARCYVS(1,2)=DDARCY
            DARCYVS(2,2)=DDARCY
            DARCYVS(3,2)=DDARCY       
         ENDIF
      ENDIF
C
C     DIFFUSION
C
      IF(IPASSME.EQ.2.AND.INDMIG.EQ.0.OR.(ISMEARED.EQ.1)) THEN  
         DDIF=0.D0
         DDIFP=0.D0
         DDIFP2=0.D0
         DDIFP3=0.D0
         IF(IACTIVE(3).EQ.1)THEN
            IF(ISMEARED.EQ.0) THEN
               IF(IDPIPEEXC(1,MM).NE.3) THEN
                  DDIFP=DPIPEEXC(1,MM) 
               ELSE  
                  DO I=1,NCV
                     DDIFP=DDIFP+H(I)*DPIPEEXV(MM,NODEL(I),2)
                  ENDDO
               ENDIF
               DDIFV(1,3)=DDIFP
               DDIFV(2,3)=DDIFP
               DDIFV(3,3)=DDIFP
            ELSE 
               IF(IDPIPECAPC(MM).NE.3) THEN
                  IF(IANIZS.NE.2) THEN    ! IANIZS.NE.2 UVEK
                     DDIFV(1,3)=DPIPECAPC(1,MM)
                     DDIFV(2,3)=DPIPECAPC(2,MM)
                     DDIFV(3,3)=DPIPECAPC(3,MM)
                  ELSE
                     DO I = 1,6
                       DVECT(I) = DPIPECAPC(1,MM)
                     ENDDO    
                  ENDIF
               ELSE
                  CALL CLEAR(DVECT,6)
                  IF(IANIZS.NE.2) THEN                      
                     DO I=1,NCV
                        DVECT(1)=DVECT(1)+H(I)*DPIPECAP(MM,1,NODEL(I))
                        DVECT(2)=DVECT(2)+H(I)*DPIPECAP(MM,2,NODEL(I))
                        DVECT(3)=DVECT(3)+H(I)*DPIPECAP(MM,3,NODEL(I))
                     ENDDO 
                     DDIFV(1,3)=DVECT(1)
                     DDIFV(2,3)=DVECT(2)
                     DDIFV(3,3)=DVECT(3)
                  ELSE
                     DO I=1,6
                       DO J=1,NCV 
                         DVECT(I)=DVECT(I)+H(J)*DPIPECAP(MM,I,NODEL(J))
                       ENDDO
                     ENDDO
                  ENDIF
               ENDIF
            ENDIF
         ENDIF
           
          IF(IACTIVE(4).EQ.1.AND.(IPASSME.EQ.2.OR.ISMEARED.EQ.1)) THEN 
            IF(IDPIPEEXC(2,MM).NE.3) THEN
               DDIF=DPIPEEXC(2,MM)
            ELSE
               DO I=1,NCV
                  DDIF=DDIF+H(I)*DPIPEEXV(MM,NODEL(I),2)
               ENDDO
            ENDIF
            DDIFV(1,4)=DDIF
            DDIFV(2,4)=DDIF
            DDIFV(3,4)=DDIF
         ENDIF
      ENDIF
C
      VCELLTOT=0.D0
      IF(MULTITIS.GT.0.AND.IPASSME.EQ.2) THEN
         DO I=1,NDIMCELL
            VCELLTOT=VCELLTOT+VFCELL(I)
         ENDDO
      ENDIF
C
C     LOOP OVER DOMAINS, CAPILLARY, EX.CELL SPACE, CELLS, LYMPH
C
      DO 100 ID=1,NNID1
C
      IF(ID.EQ.NNID1.AND.INDLYMPH.EQ.1) THEN
C     LYMPHATIC SYSEM
         WDT=VEFFELY*WDT0
         GO TO 167
      ENDIF 
      IF(INDMIG.EQ.1.AND.ID.LE.4) GO TO 100 
      IF(ID.LE.4) THEN
         IF(IACTIVE(ID).EQ.0) GO TO 100
      ENDIF
      IF(ID.GT.2.AND.IPASSME.EQ.1) GO TO 100
      IF(INDMIG.EQ.1) THEN
         ID4=ID-4
         IF(IMIGTABLE(ID4).EQ.0) GO TO 100
            IF(IMIGTABLE(ID4).NE.3) THEN
               VCONV(1,ID4)=VMIGC(ID4)
               VCONV(2,ID4)=VMIGC(ID4)
               VCONV(3,ID4)=VMIGC(ID4)
            ELSE
               VCONV(1,ID4)=0.D0
               DO I=1,8
                   VCONV(1,ID4)=VCONV(1,ID4)+H(I)*VMIGLOCAL(ID4,I)
               ENDDO
               VCONV(2,ID4)=VCONV(1,ID4)
               VCONV(3,ID4)=VCONV(1,ID4)
           ENDIF
        IF(INDCHTAX.GT.0) THEN
            MM=INDCHTAXV(ID4)
            IF(MM.GT.0) THEN
                GRADCX=0.D0
                GRADCY=0.D0
                GRADCZ=0.D0
                DO I=1,NCV
                  GRADCX=GRADCX+PJ(1,I)*TT21SMIG(ID4,I)
                  GRADCY=GRADCY+PJ(2,I)*TT21SMIG(ID4,I)
                  GRADCZ=GRADCY+PJ(3,I)*TT21SMIG(ID4,I)
                ENDDO
            ENDIF
            GRADT=DSQRT(GRADCX*GRADCX+GRADCY*GRADCY+GRADCZ*GRADCZ)
            IF(GRADT.GT.1.D-08) THEN
               GRADCX=GRADCX/GRADT
               GRADCY=GRADCY/GRADT
               GRADCZ=GRADCY/GRADT
               VCONV(1,ID4)=VCONV(1,ID4)*GRADCX
               VCONV(2,ID4)=VCONV(2,ID4)*GRADCY
               VCONV(3,ID4)=VCONV(3,ID4)*GRADCZ
            ENDIF
         ENDIF
      ENDIF
      IF(LMTOT(ID).EQ.0.AND.INDMIG.EQ.0) GO TO 100 
      IF(ID.EQ.1.OR.ID.EQ.3) THEN
         WDT=VEFFEC*WDT0
      ELSEIF(ID.EQ.2) THEN
         WDT=(1.-VEFFEC-VEFFELY)*WDT0
      ELSEIF(ID.EQ.4) THEN
         WDT=(1.-VEFFEC-VEFFELY)*(1.-VCELLTOT)*WDT0
      ELSE
         WDT=(1.-VEFFEC-VEFFELY)*VFCELL(ID-4)*(1.-VFVSTOTV(ID-4))*WDT0
      ENDIF
C
      IF(ICONV.NE.0.AND.(ID.EQ.1.OR.ID.EQ.2).AND.IPASSME.EQ.2) THEN
         DO I=1,3
            GRADP(I)=0.D0
            DO K=1,NCV
                GRADP(I)=GRADP(I)+PJ(I,K)*TT21S(ID,K)
            ENDDO   
         ENDDO
         IF(IANIZS.NE.2.OR.ID.NE.1) THEN 
            DO I=1,3 
               VCONV(I,ID)=-DARCYVS(I,ID)*GRADP(I)
            ENDDO
         ELSE
           DO I=1,3
               VCONV(I,ID)=0.D0 
               DO K=1,3  
                 VCONV(I,ID)=VCONV(I,ID)-DARCYMA(I,K)*GRADP(K)
               ENDDO
           ENDDO  
        ENDIF
      ENDIF    
C
C     SOURCE TERMS
C
      SORCEID=0.D0
      ISOURCEID=0
      IF(ID.GT.4.AND.ISOURCETOT.GT.0.AND.INDMIG.EQ.0)  THEN  
         ISOURCEID=1
         ID4=ID-4
         IF(ISOURCEC(ID4,MM).GT.0) THEN
            IF(ISOURCENOD.EQ.0) THEN
                SORCEID=SOURCEC(ID4,MM)
            ELSE    
                KK=0
                DO NC=1,ID4
                  IF(ISOURCEC(NC,MM).EQ.3) KK=KK+1               
                ENDDO 
                IF(ISOURCEC(ID4,MM).EQ.3)THEN   !INTERPOLATED FROM NODE
                  DO I=1,8
                    IF(ISOURCEL(I,ID4).GT.0)SORCEID=SORCEID+H(I)*
     1              SOURCEL(I,ID4)
                  ENDDO
                ELSE
                  SORCEID = SOURCEC(ID4,MM)!CONSTANT SOURCE
                ENDIF
             ENDIF
             DO I=1,8 
                F21V(I)=F21V(I)+H(I)*SORCEID*WDT      
             ENDDO
         ENDIF    
       ENDIF  
C  
  167 CONTINUE       
      IF(IDARCY.NE.0.OR.ISMEARED.NE.1.OR.INDMIG.EQ.1) GO TO 400   
 
CE  CALCULATION OF CONDUCTION MATRIX AND SPECIFIC HEAT MATRIX OF ELEMENT
      K=0
      DO 85 I=1,NCV
      DO 83 J=I,NCV
      K=K+1
      IF(NSTAC.EQ.0) GO TO 87
      HH = H(I)*H(J)*WDT
      EL(K)=EL(K)+CC*HH
   87 IF(INDSK.EQ.0) GO TO 83
      PJX=PJ(1,I)*PJ(1,J)
      PJY=PJ(2,I)*PJ(2,J)
      PJZ=PJ(3,I)*PJ(3,J)
      HP(K) = HP(K) +(AKX*PJX+AKY*PJY+AKZ*PJZ)*WDT
   83 CONTINUE
      IF(IQE.EQ.0) GO TO 85
CE  CALCULATION OF RIGHT-SIDE VECTOR
      F21(I)=F21(I)+H(I)*WDT*QQ
   85 CONTINUE
      IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
      TBK(1)=0.
      TBK(2)=0.
      TBK(3)=0.
      DO 151 J=1,3
      DO 150 I=1,NCV
  150 TBK(J)=TBK(J)+PJ(J,I)*T21(I)
  151 CONTINUE
      TBK(1)=AKX*TBK(1)
      TBK(2)=AKY*TBK(2)
      TBK(3)=AKZ*TBK(3)
      DO 152 I=1,NCV
      DO 153 J=1,3
  153 F21(I)=F21(I)-(PJ(J,I)*TBK(J))*WDT
  152 CONTINUE
      GO TO 100
C
  400 CONTINUE    ! JUMP HERE IF (IDARCY.NE.0)
C
C     DARCY AND DIFFUSION MATRICES
C
      IF(((ICONVV.NE.0.AND.ID.LE.2).OR.(INDLYMPHH.EQ.1.AND.ID.EQ.NNID1))
     1      .AND.IPASSME.EQ.1) THEN
         IF(INDLYMPHH.EQ.1.AND.ID.EQ.NNID1) THEN
C            LYMPHATIC DOMAIN  
             AKCAP=0.5*DIAMLY*DIAMLY/(32.*TENSORLYP(1,1))  
             AKX=AKCAP*WDT
             AKY=AKX
             AKZ=AKX     
C            AKX = DARCYVS(1,ID)*WDT 
C            AKY = DARCYVS(2,ID)*WDT
C            AKZ = DARCYVS(3,ID)*WDT
  

            DO I=1,NCV
               DO J=1,NCV
                  PJX = PJ(1,I)*PJ(1,J)
                  PJY = PJ(2,I)*PJ(2,J)
                  PJZ = PJ(3,I)*PJ(3,J)
                  SKEESLY(I,J) = SKEESLY(I,J)+AKX*PJX+AKY*PJY+AKZ*PJZ
               ENDDO
            ENDDO                          
            GO TO 100            
        ELSE
           IF(IANIZS.NE.2.OR.ID.NE.1) THEN 
               AKX = DARCYVS(1,ID)*WDT 
               AKY = DARCYVS(2,ID)*WDT
               AKZ = DARCYVS(3,ID)*WDT
               DO I=1,NCV
                  DO J=1,NCV
                     PJX = PJ(1,I)*PJ(1,J)
                     PJY = PJ(2,I)*PJ(2,J)
                     PJZ = PJ(3,I)*PJ(3,J)
                     SKES(ID,I,J)=SKES(ID,I,J)+AKX*PJX+AKY*PJY+AKZ*PJZ
                  ENDDO
               ENDDO 
            ELSE
               AKDWX  = DVECTP(1)*WDT
               AKDWY  = DVECTP(2)*WDT
               AKDWZ  = DVECTP(3)*WDT
               AKDWXY = DVECTP(4)*WDT
               AKDWXZ = DVECTP(5)*WDT
               AKDWYZ = DVECTP(6)*WDT
               DO I=1,NCV
                  DO J=1,NCV
                     PJX = PJ(1,I)*PJ(1,J)
                     PJY = PJ(2,I)*PJ(2,J)
                     PJZ = PJ(3,I)*PJ(3,J)
                                
                     PJXY = PJ(1,I)*PJ(2,J)
                     PJYX = PJ(2,I)*PJ(1,J)
              
                     PJXZ = PJ(1,I)*PJ(3,J)
                     PJZX = PJ(3,I)*PJ(1,J)
              
                     PJYZ = PJ(2,I)*PJ(3,J)
                     PJZY = PJ(3,I)*PJ(2,J)
              
                     SKES(ID,I,J)=SKES(ID,I,J) + PJX*AKDWX + PJY*AKDWY+
     1                            PJZ*AKDWZ + AKDWXY*(PJXY+PJYX) + 
     2                            AKDWXZ*(PJXZ+PJZX)+AKDWYZ*(PJYZ+PJZY) 
                  ENDDO
                ENDDO
             ENDIF
         ENDIF                    
      ENDIF
C 
      INDIFFCALC=0
      IF(IDIFFHEAT.NE.0.AND.IPASSME.EQ.2.AND.INDMIG.EQ.0) THEN
         IF(INDLYMPH.EQ.0) THEN
            IF(ID.GT.2) INDIFFCALC=1
         ELSE
            IF(ID.GT.2.AND.ID.LE.NNID)INDIFFCALC=1
            IF(INDLYMPHC.EQ.1.AND.ID.EQ.NNID1) INDIFFCALC=1 
         ENDIF
      ENDIF    
        
      IF(INDIFFCALC.EQ.1) THEN  
C
         AKTW     = CC*AKTT*WDT
         IF(INDLYMPHC.EQ.1.AND.ID.EQ.NNID1) THEN
            GO TO 136
         ENDIF
        
         IF(ID.LE.4) THEN
            IF(IANIZS.NE.2.OR.ID.NE.3) THEN    
               AKDWX = DDIFV(1,ID)*WDT
               AKDWY = DDIFV(2,ID)*WDT
               AKDWZ = DDIFV(3,ID)*WDT    
            ELSE
               AKDWX  = DVECT(1)*WDT
               AKDWY  = DVECT(2)*WDT
               AKDWZ  = DVECT(3)*WDT
               AKDWXY = DVECT(4)*WDT
               AKDWXZ = DVECT(5)*WDT
               AKDWYZ = DVECT(6)*WDT
            ENDIF
         ELSEIF (INDMIG.EQ.0) THEN
            IF(NDIMCELLMAX.GT.0.AND.ICELLC(ID-4,MM).EQ.3) THEN
               KK=0                  
               DO I=1,ID-4    
                  IF(ICELLC(I,MM).EQ.3) THEN
                     KK=KK+1              
                  ENDIF
               ENDDO
               DDD=0.D0   
               DO I=1,NCV  
                  NODE=NEL(NLM,I)                
                  DDD=DDD+H(I)*DCELLSV(MM,NODE,KK)
               ENDDO
            ELSE
               DDD=CELLC(ID-4,MM)
            ENDIF
           IF(INDCELLIN.GT.0)DDD=DDIFFICY(ID-4,MM)
           !IANIZS=2
           AKDWX=DDD*WDT
           AKDWY=AKDWX
           AKDWZ=AKDWX
        ENDIF
C
        IDC=ID-2
        IF(INDMIG.EQ.1) THEN
           IDC=ID-4
           AKDWX=DDIFMIG*WDT
           AKDWY=AKDWX
           AKDWZ=AKDWX
        ENDIF
C
        DO 405 I=1,NCV
          H2TWI = H(I)*AKTW
          H2WI  = H(I)*WDT
          DO 405 J=1,NCV
            PJX = PJ(1,I)*PJ(1,J)
            PJY = PJ(2,I)*PJ(2,J)
            PJZ = PJ(3,I)*PJ(3,J)
            SKEMS(ID,I,J) = SKEMS(ID,I,J) + H2TWI*H(J)
            
            IF(IANIZS.NE.2.OR.ID.NE.3) THEN
               SKEDS(ID,I,J) = SKEDS(ID,I,J) + PJX*AKDWX + PJY*AKDWY + 
     1                        PJZ*AKDWZ
             ELSE
               PJXY = PJ(1,I)*PJ(2,J)
               PJYX = PJ(2,I)*PJ(1,J)
              
               PJXZ = PJ(1,I)*PJ(3,J)
               PJZX = PJ(3,I)*PJ(1,J)
              
               PJYZ = PJ(2,I)*PJ(3,J)
               PJZY = PJ(3,I)*PJ(2,J)
              
               SKEDS(ID,I,J) = SKEDS(ID,I,J) + PJX*AKDWX + PJY*AKDWY +
     1                        PJZ*AKDWZ  + AKDWXY*(PJXY+PJYX) + 
     2                        AKDWXZ*(PJXZ+PJZX) + AKDWYZ*(PJYZ+PJZY) 
             ENDIF
            
             IF((ICONV.EQ.1.AND.ID.LE.4).OR.INDMIG.EQ.1) THEN
                COEFFV=VCONV(1,IDC)*PJ(1,J)+VCONV(2,IDC)*PJ(2,J)+
     1          VCONV(3,IDC)*PJ(3,J)
                SKEDS(ID,I,J)=SKEDS(ID,I,J)+H2WI*COEFFV
             ENDIF
  405   CONTINUE
        GO TO 100
  136   CONTINUE 
C
C       LYMPHATIC DOMAIN
C
        DO  I=1,NCV
          H2TWI = H(I)*AKTW
          H2WI  = H(I)*WDT
          DO J=1,NCV
            PJX = PJ(1,I)*PJ(1,J)
            PJY = PJ(2,I)*PJ(2,J)
            PJZ = PJ(3,I)*PJ(3,J)
             
            SKEMSLY(I,J)=SKEMSLY(I,J)+H2TWI*H(J)
            SKEESLY(I,J)=SKEESLY(I,J)+PJX*AKDWX+PJY*AKDWY+PJZ*AKDWZ
             
            IF(IANIZS.EQ.2) THEN
               PJXY = PJ(1,I)*PJ(2,J)
               PJYX = PJ(2,I)*PJ(1,J)
              
               PJXZ = PJ(1,I)*PJ(3,J)
               PJZX = PJ(3,I)*PJ(1,J)
              
               PJYZ = PJ(2,I)*PJ(3,J)
               PJZY = PJ(3,I)*PJ(2,J)
               
               SKEESLY(I,J)=SKEESLY(I,J)+AKDWXY*(PJXY+PJYX)+ 
     2                      AKDWXZ*(PJXZ+PJZX) + AKDWYZ*(PJYZ+PJZY)
            ENDIF
            IF(INDLYMPHH.EQ.1) THEN
               COEFFV=VCONV(1,IDC)*PJ(1,J)+VCONV(2,IDC)*PJ(2,J)+
     1         VCONV(3,IDC)*PJ(3,J)
                SKEESLY(I,J)=SKEESLY(I,J)+H2WI*COEFFV
            ENDIF
          ENDDO
        ENDDO  
      ENDIF
C
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
C
C     KRAJ PETLJE PO GAUSOVIM TACKAMA ----------
C
C     PETLJA PO DOMENIMA
      DO 500 ID=1,NNID1 
C
C    INDLYMPH,INDLYMPHH,INDLYMPHC  TT1LY  TT1LY0
      IF(INDLYMPH.EQ.1.AND.ID.EQ.NNID1) THEN
         DO I=1,8
            LM(I)=LMLY(I)
         ENDDO
         CALL CLEAR(SKEES,64)
         CALL CLEAR(F21ES,8)
         IF(IPASSME.EQ.1.AND.INDLYMPHH.EQ.1) THEN
            DO I=1,NCV
               DO J=1,NCV
                  SKEES(I,J)=SKEESLY(I,J)
                  F21ES(I)=F21ES(I)-SKEESLY(I,J)*TT1LY(J)
               ENDDO
            ENDDO
         ELSE IF(IPASSME.EQ.2.AND.INDLYMPHC.EQ.1) THEN
            DO I=1,NCV
               DO J=1,NCV
                 F21ES(I)=F21ES(I)-SKEMSLY(I,J)*(TT1LY(J)-
     1           TT1LY0(J))-SKEESLY(I,J)*TT1LY(J)
                 SKEES(I,J)=SKEESLY(I,J)+SKEMSLY(I,J)
               ENDDO
            ENDDO
         ENDIF
         GO TO 157        
      ENDIF      
C      
      IF(INDMIG.EQ.1) THEN
         IF(ID.LE.4) GO TO 500
         IF(IMIGTABLE(ID-4).EQ.0) GO TO 500
      ENDIF
      IF(ID.LE.4) THEN
        IF(IACTIVE(ID).EQ.0) GO TO 500
      ENDIF
      IF(ID.LE.2) THEN
        IF(IPASSME.EQ.2) GO TO 500
      ELSE
        IF(IPASSME.EQ.1) GO TO 500
      ENDIF 
      IF(LMTOT(ID).EQ.0.AND.INDMIG.EQ.0) GO TO 500 
      INDVE=1
      IF(ID.EQ.2) INDVE=2   
      CALL CLEAR(SKEES,64)
      CALL CLEAR(F21ES,8)
      IF(IDARCY.NE.0) THEN
        IF(ID.LE.2) THEN
          DO I=1,NCV
            DO J=1,NCV
              SKEES(I,J)=SKES(ID,I,J)
              F21ES(I)=F21ES(I)-SKES(ID,I,J)*TT21S(ID,J)
            ENDDO
          ENDDO   
        ELSE
          DO 430 I=1,NCV
             DO 430 J=1,NCV
             IF(IFORM.EQ.2) THEN
                 SKEES(I,J)=SKEES(I,J)+SKEMS(ID,I,J)+SKEDS(ID,I,J)
                 F21ES(I)=F21ES(I)-SKEMS(ID,I,J)*(TT21S(ID,J)-
     1           TT210S(ID,J))-SKEDS(ID,I,J)*TT21S(ID,J)
             ELSE
                 CONTINUE
C                KORISTI SE SAMO IFORM=2
C               SKEES(I,J)=SKEES(I,J)+SKEMS(ID,I,J)+SKEDS(ID,I,J)
C               SKE(II,J)=SKE(II,J)+SKEP(I,J)
C               F9(II)=F9(II)-SKEM(I,J)*(TT21(JJ)-TT210(JJ))-
C     1                       SKED(I,J)*TT21(JJ)-SKEP(I,J)*TT21(J)
             ENDIF
  430     CONTINUE
        ENDIF   
C
C       FLUX USLED ZADATIH BRZINA NA POVRSINI
C
        IF(ICONTOUR.EQ.0.OR.ID.GT.2) GO TO 149
C
        VOLFRACTL=0.0
        DO I = 1, NCV
          KK=NEL(NLM,I)
          VOLFRACTL = VOLFRACTL + VOLFRACTV(KK)
        ENDDO
        VOLFRACTL = VOLFRACTL / NCV
        IF(ID.EQ.2)VOLFRACTL=1.-VOLFRACTL
C
        CALL CLEAR(PLOCAL,8)
        DO 330 NPOV=1,6
        IF(ILOC(ID,NPOV).LT.4) GO TO 330
        POVRS=0.D0
C
CS      PETLJA PO GAUSOVIM TACKAMA       
        IF(NPOV.GT.2) GO TO 545
        KFIX=1
        NGXP=NGAUSY
        NGYP=NGAUSZ
        R=1.
        IF(NPOV.EQ.2) R=-1.
        GO TO 560
C
  545   IF(NPOV.GT.4) GO TO 550
        KFIX=2
        NGXP=NGAUSX
        NGYP=NGAUSZ
        S=1.
        IF(NPOV.EQ.4) S=-1.
        GO TO 560
C
  550   NGXP=NGAUSX
        NGYP=NGAUSY
        KFIX=3
        T=1.
        IF(NPOV.EQ.6) T=-1.
C
  560   DO 510 NGX=1,NGXP
        JR=NREF(NGXP) + NGX
        XX = XG(JR)
        WX=WGT(JR)
        DO 510 NGY=1,NGYP
        JS=NREF(NGYP) + NGY
        YY = XG(JS)
        WY=WGT(JS)
        GO TO (571,572,573),KFIX
  571   S=XX
        T=YY
        GO TO 575
  572   R=XX
        T=YY
        GO TO 575
  573   R=XX
        S=YY
  575   WT=WX*WY
C
        CALL JACT(R,S,T,NEL,KFIX)
C
        WDT=WT*DET*VOLFRACTL
        POVRS=POVRS+WDT
        DO K=1,8
           PLOCAL(K)=PLOCAL(K)+H(K)*VLOCAL(ID,K)*WDT
        ENDDO   
  510   CONTINUE                        
        DO K=1,8
           F21ES(K)=F21ES(K)-PLOCAL(K)
        ENDDO
C       THE SIGN ABOVE FOR PLOCAL WAS CHANGED - NORMAL VELOCITY IS IN DIRECTION OF NORMAL
C       POINTING OUT WITH RESPECT TO THE 3D ELEMENT  
C       POST-PROCESSING OF VELOCITIES AT NODAL POINTS TO BE EXECUTED IN 
C       ANOTHER SET OF SUBROUTINES (FOR 2D IS CODED HERE)
  330   CONTINUE         
        GO TO 149
      ENDIF
C
      IF (INDVEL .EQ. 1) GO TO 200
      IF(NSTAC.EQ.0) GO TO 253
      DO 105 K=1,MEL3D
  105 EL(K)=EL(K)/DT
  253 IF(INDSK.EQ.0.AND.NELZAD.EQ.0) GO TO 140
      DO 115 K=1,MEL3D
  115 HP(K)=HP(K)+EL(K)
  140 K=0
      DO 121 I=1,NCV
      DO 120 J=I,NCV
      K=K+1
      SKE(I,J)=EL(K)
      SKE(J,I)=SKE(I,J)
  120 CONTINUE
  121 CONTINUE
CE  CORECTION OF RIGHT-SIDE VECTOR AFTER FIRST PASS
      IF(LINTE.EQ.0) GO TO 123
      DO 122  I=1,NCV
      IF(LM(I).EQ.0) GO TO 122
      DO 124  J=1,NCV
      IF(LM(J).EQ.0) GO TO 124
      F21(I)= F21(I) - SKE(I,J)*T212(J)
  124 CONTINUE
  122 CONTINUE
CE RIGHT-SIDE VECTOR : EL*T210 FOR LINEAR TRANSIENT PROBLEMS
  123 IF(LINTE.EQ.1) GO TO 141
      DO 132  I=1,NCV
      IF(LM(I).EQ.0) GO TO 132
      DO 134  J=1,NCV
      IF(LM(J).EQ.0) GO TO 134
      F21(I)= F21(I) + SKE(I,J)*T210(J)
  134 CONTINUE
  132 CONTINUE
  141 CONTINUE
      MILOS=1
	IF(MILOS.EQ.1) GO TO 149
C     CORRECT RIGHT-HAND SIDE FOR PRESCRIBED VALUES AT NODES
      IF(NELZAD.EQ.0) GO TO 149
	  DO 148 I=1,NCV
	  IF(LM(I).EQ.0) GO TO 148
	  DO J=1,NCV
          IF(LMZADA(ID,J).EQ.1)F21(I)=F21(I)-SKE(I,J)*ZADLOCAL(ID,J)
	  ENDDO
  148 CONTINUE
  149 CONTINUE
C
      IF(IDARCY.NE.0) THEN
        DO I=1,NDES
          DO J=1,NDES
            SKEES(I,J) = AEFF * SKEES(I,J)
          ENDDO
          F21ES(I) = AEFF * F21ES(I)
        ENDDO
      ENDIF
C          
      IF(INDFLUX.EQ.1) GO TO 137    
C
      IF(NHP.EQ.0.AND.NTOK.EQ.0.AND.NQP.EQ.0.AND.NHR.EQ.0) GO TO 135
CE    INTEGRALS OVER SURFACES OF ELEMENT
      CALL INTAB3(A(LNG3D),A(LNELG3),A(LNEL3D),A(LNTAHP),A(LHP),A(LHK),
     1A(LSKE),A(LNTAHR),A(LHR),A(LFOHR),NREF,XG,WGT)
CE  INSERTING MATRIX HP AND VECTOR F21 INTO SYSTEM
  135 continue  
C
      DO I=1,8
         LM(I)=LMS(ID,I)
      ENDDO 
C     
      IF(ISOURCEID.EQ.1.AND.ID.GT.4.AND.INDMIG.EQ.0) THEN
          DO I=1,8
              F21ES(I)=F21ES(I)+F21V(I)
              DABSCI = TT21S(ID,I) 
              IF(DABSCI.GT.1E-6)SKEES(I,I)=SKEES(I,I)+  
     1        DABS(F21V(I)/DABSCI)
          ENDDO       
      ENDIF      
  157 CONTINUE    
C     
      IF(IMUMPS.EQ.0) THEN    
        IF(IDARCY.EQ.0) THEN  
          CALL MATSTE (A(LSK),A(LMAXA),A(LF),HP,F21,LM,NCV,INDSK)
  	  ELSE
	    CALL ADDSTF(A(LALEVO),A(LFMULT),A(LDESNO),SKE,F21,A(LMAXA),LM,
     1              NDES,1) 
        ENDIF
      ELSE
#if(MUMPS_CLUSTER)
c	 CALL MUMPSLEFT(SKEF,NEL,ID,NDES,NBREL,NDIM,NETIP,NDIMID)
#else
        CALL sparseassembler_addelemmatrix(8,LM,SKEES)  
#endif
        CALL SPAKDE(A(LFMULT),F21ES,LM,8,JEDN)
      ENDIF 
      
  137 CONTINUE 
  500 CONTINUE      
  200 CONTINUE
C  
C     END LOOP OVER ELEMENTS
C  
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTEB3CINTERNAL(CORD,NEL,TT1C,TT10C,TT1CM,TT01CM,
     1 VOLFRACTV,VFMULTIT,IDVS,NZADNODVS,ZADATAVSV0,ZADATAVSV,RVLYMPH,
     1 JEDNCONC,LFMULT,INDLYMPH)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CE  MAIN PROGRAM TO PERFORM INTEGRATION OVER V OF ELEMENT
C
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA3/ LNEL3D,LMAT3D,LNQ3D,LITG3D,LIP3CV,LNG3D,LNELG3,
     1LEL,LHP,LHK,LSKE,LDEL,LDEHP,LDEHK,LHR
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON/REAL3D/ CK(21,3),P(3,21),PJ(3,21),XJ(3,3),H(21),T21(21),
     1AK,CC,HH,QQ,DET,DET1,F21(21),T212(21),T210(21),HHP
      COMMON /SRPSKI/ ISRPS
      COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
      COMMON/CMULTITIS/MULTITIS,MULTIMOL,IACTIVECELL(4),NDIMCELL,LIDTV,
     1      LIDTVCELL,JEDNPV(10),JEDNCV(10),JEDNPMAX,JEDNCMAX,MM
      COMMON/CCELLIN/INDCELLIN,INDCELLINV(10),VFVS(10,5),DIAMVS(10,5),
     1 RAVVS(10,5),DDIFFICY(10,10),DDIFFIVS(10,10,5),DDIFFICM(10,10,5)
     2 ,IPARTIVS(10,10,5),PARTIVS(10,10,5),NDIMVS,NVSMAX,LIDVS,NZADVS,
     3 LNZADNODVS,LNZADNFVS,LNZADFVS,LZADVALUEVS,LZADATAVS0,LZADATAVS 
C
      DIMENSION XG(15),WGT(15),NREF(6)
      DIMENSION CORD(NPT,3),NEL(NE3D,8),TT1C(JEDNCONC),
     1 TT10C(JEDNCONC),TT1CM(MULTIMOL,JEDNCMAX),
     2 TT01CM(MULTIMOL,JEDNCMAX),VOLFRACTV(NPT),VFMULTIT(NDIMCELL,NPT)
      DIMENSION IDVS(MULTIMOL,NDIMVS,NVSMAX,NPT),NZADNODVS(4,NZADVS),
     1  ZADATAVSV0(NZADVS),ZADATAVSV(NZADVS)
      DIMENSION RVLYMPH(NPT) 
C
      DIMENSION VOLFLOC(8),DDIFV(2,8)
      DIMENSION SKES(5,8,8),SKEMS(5,8,8),SKEDS(5,8,8),LMS(5,8),
     1          TT21S(5,8),TT210S(5,8),SKEES(8,8),F21ES(8),VFCELL(10),
     1          NODEL(8),VOLFRACTLY(8)
C     
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/  
C
	AKTT   = 1./DT
C
C     LOOP OVER CELLS
C
      KIN=0
      VRACTLY=0.D0
      DO 800 NC=1,NDIMCELL
      NVSE=INDCELLINV(NC)
      IF(NVSE.EQ.0) GO TO 800
      KIN=KIN+1
C	
CE    LOOP OVER ELEMENTS =====================================
C
      DO 200 NLM = 1,NE3D

      CC = 1.D0
C 
      CALL CLEAR(VOLFLOC,8) 
      CALL CLEAR(SKEMS,320) 
      CALL CLEAR(SKES,320)
      CALL CLEAR(SKEDS,320)
      CALL ICLEAR(LMS,40)
      CALL CLEAR(TT21S,40)
      CALL CLEAR(TT210S,40)    
C
CE    TEMPERATURE AT NODES  VECTOR
C
   40 NCV      = 0    
      DO 50 I=1,NBRE
      J=NEL(NLM,I)
      NCV=NCV+1
      NODEL(NCV)=J
      VOLFLOC(NCV)=VOLFRACTV(J)
      IF(INDLYMPH.EQ.1) THEN 
         VOLFRACTLY(NCV)=RVLYMPH(J)
      ENDIF  
C
      DO 39 II=1,NVSE 
         JJ=IDVS(MM,KIN,II,J) 
         LMS(II,NCV)= JJ                                       
         IF(JJ.GT.0) THEN
             IF(MULTIMOL.EQ.1) THEN
                TT21S(II,NCV)=TT1C(JJ)
                TT210S(II,NCV)=TT10C(JJ)
             ELSE
                TT21S(II,NCV)= TT1CM(MM,JJ)
                TT210S(II,NCV)= TT01CM(MM,JJ)
             ENDIF  
         ELSE
C           PRESCRIBED
            IF(NZADVS.GT.0) THEN
	         DO  KK=1,NZADVS
	            NODE=NZADNODVS(1,KK)
                  IMM=NZADNODVS(2,KK)
                  ICC=NZADNODVS(3,KK)
                  IDOF=NZADNODVS(4,KK)
                  IF(NODE.EQ.J.AND.IMM.EQ.MM.AND.ICC.EQ.NC.AND.
     1            IDOF.EQ.II) THEN                         
                     TT21S(IDOF,NCV)= ZADATAVSV(KK)
                     TT210S(IDOF,NCV)= ZADATAVSV0(KK)
                     GO TO 39
                  ENDIF
               ENDDO
            ENDIF
	   ENDIF
   39 CONTINUE            	                                      
   50 CONTINUE
C     END OF LOOP OVER ELEMENT NODES-----
C
CE  NODE COORDINATES OF ELEMENTS MATRIX
      IF(KIN.EQ.1) THEN
        K=0
        DO 60 I=1,NBRE
        IF(NEL(NLM,I).EQ.0) GO TO 60
        K=K+1
        KK=NEL(NLM,I)
        DO 55 J=1,3
   55   CK(K,J)=CORD(KK,J)
   60   CONTINUE
      ENDIF
C
CE    GAUSS POINTS  LOOP =============================================
C
      NGAUSC=0
      DO 102 NGX=1,NGAUSX
      JR=NREF(NGAUSX) + NGX
      R = XG(JR)
      DO 101 NGY=1,NGAUSY
      JS=NREF(NGAUSY) + NGY
      S = XG(JS)
      DO 100 NGZ=1,NGAUSZ
      NGAUSC=NGAUSC+1
      JT=NREF(NGAUSZ) + NGZ
      T = XG(JT)
      WT=WGT(JR)*WGT(JS)*WGT(JT)
      CALL JACT(R,S,T,NEL,0)
C
      VEFFEC = 0.D0
      DO I=1,NCV
         VEFFEC=VEFFEC + H(I)*VOLFLOC(I)
      ENDDO
      
      VRACTLY=0.D0
      IF(INDLYMPH.EQ.1) THEN   
         DO I=1,NCV
            VRACTLY=VRACTLY + H(I)*VOLFRACTLY(I)
         ENDDO
      ENDIF  
C
      VFCELL(NC)=0.D0
      DO J=1,NCV   
         VFCELL(NC)=VFCELL(NC)+H(J)*VFMULTIT(NC,NODEL(J))
      ENDDO
C 
CE  ELEMENT MATRIXES
C
   81 WDT=WT*DET1
      WDT0=WDT
C
      DO 100 ID=1,NVSE
      WDT=(1.-VEFFEC-VRACTLY)*VFCELL(NC)*VFVS(NC,ID)*WDT0      
C    
      AKTW  = CC*AKTT*WDT
      AKDWX = DDIFFIVS(NC,MM,ID)*WDT
      AKDWY = AKDWX
      AKDWZ = AKDWX  
C    
      DO 405 I=1,NCV
          H2TWI = H(I)*AKTW
          DO 405 J=1,NCV
            PJX = PJ(1,I)*PJ(1,J)
            PJY = PJ(2,I)*PJ(2,J)
            PJZ = PJ(3,I)*PJ(3,J)
            SKEMS(ID,I,J)=SKEMS(ID,I,J)+H2TWI*H(J)
            SKEDS(ID,I,J)=SKEDS(ID,I,J)+PJX*AKDWX+PJY*AKDWY+PJZ*AKDWZ
  405 CONTINUE
C
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
C
C     END LOOP OVER GAUSS POINTS
C-----KRAJ PETLJE PO GAUSOVIM TACKAMA ----------
C
      DO 500 ID=1,NVSE
      CALL CLEAR(SKEES,64)
      CALL CLEAR(F21ES,8)
      DO 430 I=1,NCV
           DO 430 J=1,NCV
               SKEES(I,J)=SKEES(I,J)+SKEMS(ID,I,J)+SKEDS(ID,I,J)
               F21ES(I)=F21ES(I)-SKEMS(ID,I,J)*(TT21S(ID,J)-
     1         TT210S(ID,J))-SKEDS(ID,I,J)*TT21S(ID,J)
  430 CONTINUE  
C
      DO I=1,8
         LM(I)=LMS(ID,I)
      ENDDO
C
      IF(IMUMPS.EQ.0) THEN    
        CALL MATSTE (A(LSK),A(LMAXA),A(LF),HP,F21,LM,NCV,INDSK) 
      ELSE
#if(MUMPS_CLUSTER)
c	 CALL MUMPSLEFT(SKEF,NEL,ID,NDES,NBREL,NDIM,NETIP,3)
#else
        CALL sparseassembler_addelemmatrix(8,LM,SKEES)
#endif
        CALL SPAKDE(A(LFMULT),F21ES,LM,8,JEDN) 
      ENDIF 
C     END OF LOOP OVER VESICLES          
  500 CONTINUE      
C     END OF LOOP OVER ELEMENTS      
  200 CONTINUE
C     END OF LOOP OVER CELLS
  800 CONTINUE
C 
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTEB3DARCYS(IDT,IDTCD,CORD,TCONS,NTAKV,NTACV,NEL,NQ,
     1 MATV,EL,HP,HK,SKE,TT1P,TT1C,TT10P,TT10C,IBFK,FAKP,HR,MATCONV,
     2 AMATFC,MATDIF,AMATFD,NZADJ,ZADFM,NODEIN,NODEOUT,FLUX,
     3 MATERH,AMATFRO,AMATFSH,AMATFK,VOLFRACTV,AMIV,DARCYCOEFV,IDARCYMA,
     7 DWALLSMEV,DIAMSMEV,DPIPE,DTISSUE,ZADATA1,ZADATA0,ZADAVXYZ,
     8 NZADCONTUREV,DIRCOEFF,DPIPECAP,DARCYCAP,IACTIVE,NZADP,
     9 NDES,MAT3DCONV,MAT3DDIFF,AEFF,IDARCY,VDARCY,NZADIN,NZADOUT,
     1 ISMEARED,IPRINTVEL,NDIMID,JEDNPRES,JEDNCONC,IPASSME,IANIZS,
     2 NDIMTENSOR)  
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CE  MAIN PROGRAM TO PERFORM INTEGRATION OVER V OF ELEMENT
C
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA3/ LNEL3D,LMAT3D,LNQ3D,LITG3D,LIP3CV,LNG3D,LNELG3,
     1LEL,LHP,LHK,LSKE,LDEL,LDEHP,LDEHK,LHR
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON/REAL3D/ CK(21,3),P(3,21),PJ(3,21),XJ(3,3),H(21),T21(21),
     1AK,CC,HH,QQ,DET,DET1,F21(21),T212(21),T210(21),HHP
      COMMON /SRPSKI/ ISRPS
      COMMON/FLUXKC/INDFLUXKC
	COMMON/KONVERNDS/CONCT,CONCTOUT,KONV
      COMMON/UNSYMMETRIC/LALEVO,LDESNO,LSILE,ISYMM
      COMMON/SURFACE3DBC/NODSURF(8,3)
C
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ            
	common/elemmodels/modelel(20),ngele              	    
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
C
      DIMENSION XG(15),WGT(15),NREF(6),IG3D8(8)
     
      DIMENSION IDT(NDIMID,NPT),IDTCD(2,NPT),CORD(NPT,3),TCONS(*),
     2 NTAKV(*),NTACV(*),NEL(NE3D,8),NQ(*),MATV(*),EL(*),HP(*),HK(*),
     3 SKE(NDES,NDES),TT1P(JEDNPRES),TT1C(JEDNCONC),TT10P(JEDNPRES),
     4 TT10C(JEDNCONC),IBFK(NMATT,*),FAKP(NMATT,*)
      DIMENSION MATCONV(NMATTCONV),AMATFC(NMATTCONV,2,*),
     1          MATDIF(NMATTDIF),AMATFD(NMATTDIF,2,*)
      DIMENSION NZADJ(3,NZADP),ZADFM(NZADP)
      DIMENSION NODEIN(NZADIN),NODEOUT(NZADOUT),FLUX(NPT)
      DIMENSION MATERH(NMATTHEAT),AMATFRO(NMATTHEAT,2,*),
     2          AMATFSH(NMATTHEAT,2,*),AMATFK(NMATTHEAT,2,*)       
      DIMENSION VOLFRACTV(NPT),AMIV(NPT),DARCYCOEFV(NPT),IDARCYMA(NPT),
     1 DWALLSMEV(NPT),DIAMSMEV(NPT),DPIPE(NPT),DTISSUE(NPT),
     2 ZADATA1(NZADP),ZADATA0(NZADP),ZADAVXYZ(2,3,NPT),
     3 NZADCONTUREV(3,NPT),DIRCOEFF(3,NPT),DPIPECAP(NDIMTENSOR,NPT),
     1 DARCYCAP(NDIMTENSOR,NPT),IACTIVE(4)
     
      DIMENSION ZADLOCAL32(16),SKEM(8,8),SKEP(8,8),
     2          SKED(8,8),NLOCSU(24),PLOCAL(27),TBK(3)
     
      DIMENSION ZADLOCAL(4,8),ZADLOCAL0(4,8),LMZADA(4,8),
     1          VLOCAL(4,8),VCONV(3,4),VOLFLOC(8),CONC(4),
     2          DARCYVS(3,2),DDIFV(3,4),ILOC(4,8),LM3(8)
      DIMENSION SKES(4,8,8),SKEMS(4,8,8),SKEDS(4,8,8),LMS(4,8),
     1          TT21S(4,8),TT210S(4,8),HPS(4,36),ELS(4,36),HKS(4,36),
     2          SKEES(8,8),F21ES(8),NODEL(8),ENV(3),LMTOT(8)  
      DIMENSION DARCYMA(3,3),DVECT(6),DVECTP(6),GRADP(3)
C     
      DATA IG3D8/7,3,6,2,8,4,5,1/
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
      DATA NLOCSU/1,4,8,5,2,6,7,3,2,1,5,6,3,7,8,4,1,2,3,4,5,6,7,8/
      DATA NODSURF /1, 2, 2, 1, 1, 2, 2, 1,
	2              3, 3, 4, 4, 3, 3, 4, 4,
	3              5, 5, 5, 5, 6, 6, 6, 6/
     
      IF(IZIP.EQ.2) GO TO 15
      IF(NQE.NE.1) GO TO 15
      CALL TABF(A(LQEFN),A(LNTAQE),NQE,NQE,VREME,QQ,NTA,IND)
      IF(IND.EQ.0) GO TO 15
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) NQE,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) NQE,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPL. IZVOR-VREME,  BR.=',I3/
     11X,'ARGUMENT VREME= ',F10.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME = ',1PD12.4)
      STOP
   15 CONTINUE
C
      ICONVV = ICONV
      IDIFFHEAT = 0
      IF(IDIFUSE.NE.0.OR.IHEAT.NE.0) IDIFFHEAT = 1
C
      IF(IPRINTVEL.EQ.1.AND.IPASSME.EQ.1) THEN
          CALL ICLEAR(NZADCONTUREV,6*NPT)
          CALL CLEAR(ZADAVXYZ,6*NPT) 
      ENDIF
C
      IFORM  = 2
	AKTT   = 1./DT
	DDARCY = 0.d0
	VBR    = 1.0D35
	CC=1.D0
C	
CE    LOOP OVER ELEMENTS =====================================
C
      DO 200 NLM = 1,NE3D
      KKIN  = 0   
      KKOUT = 0      
c   
      CALL CLEAR(ZADLOCAL,32)
      CALL CLEAR(ZADLOCAL0,32)
      CALL ICLEAR(LMZADA,32)
      CALL CLEAR(VLOCAL,32)
      CALL CLEAR(VOLFLOC,8) 
      CALL ICLEAR(ILOC,32)
      CALL CLEAR(SKEMS,256) 
      CALL CLEAR(SKES,256)
      CALL CLEAR(SKEDS,256)
      CALL ICLEAR(LMS,32)
      CALL CLEAR(TT21S,32)
      CALL CLEAR(TT210S,32)
      CALL CLEAR(HPS,144)
      CALL CLEAR(ELS,144)
      CALL CLEAR(HKS,144)
      
      CALL CLEAR(SKE,NDES*NDES)
      CALL CLEAR(SKEM,64)
      CALL CLEAR(SKEP,64)
      CALL CLEAR(SKED,64)
      CALL ICLEAR(LMTOT,8) 

      IF(NMAT3D.GT.1.OR.INDIFFUS.EQ.1) MAT3D=MATV(NLM)
      IQE=0
      IF(NQE.GT.0) IQE=NQ(NLM)
      ARG=0.
      IF(IDARCY.NE.0) GO TO 30
	IF(indiffus.EQ.1) THEN
	  CC=1.D0
	  GO TO 30 
	ENDIF
      IF(NSTAC.EQ.0.OR.KONC.EQ.1) GO TO 25
      CALL TABF(A(LTABC),A(LNTACV),MAT3D,NMATT,ARG,CC,NTA,IND)
   25 IF(IANIZ.EQ.0) GO TO 188
      FAX=FAKP(MAT3D,1)
      FAY=FAKP(MAT3D,2)
      FAZ=FAKP(MAT3D,3)
  188 IBX=IBFK(MAT3D,1)
      IBY=IBFK(MAT3D,2)
      IBZ=IBFK(MAT3D,3)
      IF(KONK.EQ.1) GO TO 30
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,ARG,AKX,NTA,IND)
      IF(IBY.GT.0.AND.IBZ.GT.0) GO TO 180
      IF(IANIZ.EQ.0) GO TO 189
      AKZ=AKX*FAZ
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 30
  189 AKY=AKX
      AKZ=AKX
      GO TO 30
  180 CALL TABF(A(LTABK),A(LNTAKV),IBY,NTABK,ARG,AKY,NTA,IND)
      CALL TABF(A(LTABK),A(LNTAKV),IBZ,NTABK,ARG,AKZ,NTA,IND)
   30 IF(IQE.EQ.0.OR.NQE.EQ.1) GO TO 44
      CALL TABF(A(LQEFN),A(LNTAQE),IQE,NQE,VREME,QQ,NTA,IND)
      IF(IND.EQ.0) GO TO 44
      WRITE(3,2000) IQE,VREME
      STOP
   44 IF(IZIP.NE.2.OR.MAXTQE.GT.1) GO TO 40
      CALL TABF(A(LQEFN),A(LNTAQE),IQE,NQE,ARG,QQ,NTA,IND)
C
CE    TEMPERATURE AT NODES  VECTOR
C
   40 NCV      = 0
      NND9     = 0
	NELZAD   = 0
	ICONTOUR = 0
	NBRE=8
C      
      DO 50 I=1,NBRE
      J=NEL(NLM,I)               
      NCV=NCV+1
      NODEL(NCV)=J  
      VOLFLOC(NCV)=VOLFRACTV(J)  
C   
C     PRESCRIBED VALUES
C     
      IF(NZADP.GT.0) THEN
	  DO 345 KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
	      IDOFA=IABS(IDOF)
	      IF(IPASSME.EQ.1) THEN
	         IF(IDOFA.GT.2) GO TO 345
	      ELSE
	         IF(IDOFA.LE.2.AND.ICONV.EQ.0)GO TO 345
	      ENDIF
            IF(IDOF.LT.0) THEN
              ICONTOUR = 1
              DO K=1,3
                JJ=NODSURF(NCV,K)
	          ILOC(IDOFA,JJ)=ILOC(IDOFA,JJ)+1
              ENDDO
            ENDIF	      
            NELZAD=NELZAD+1
            IF(IDOF.GT.0) THEN
               LMZADA(IDOFA,NCV)     = 1
               ZADLOCAL(IDOFA,NCV)   = ZADATA1(KK)
               ZADLOCAL0(IDOFA,NCV)  = ZADATA0(KK)
            ELSE
              VLOCAL(IDOFA,NCV) = ZADATA1(KK)
            ENDIF
	    ENDIF
  345   CONTINUE
	ENDIF
C
      DO II=1,4
         IF(IACTIVE(II).EQ.1) THEN
            LMS(II,NCV)=IDT(II,J)
         ENDIF
      ENDDO 

   45 CONTINUE
       DO II=1,4
          IF(IACTIVE(II).EQ.1) THEN
             JJ=IDT(II,J)
             IF(JJ.GT.0) THEN
                 IF(II.LE.2) THEN
                    TT21S(II,NCV)= TT1P(JJ)
                    TT210S(II,NCV)= TT10P(JJ)
                ELSE
                    IF(IPASSME.EQ.2) THEN
                       TT21S(II,NCV)= TT1C(JJ)
                       TT210S(II,NCV)= TT10C(JJ)
                    ENDIF
                ENDIF  
	       ELSE
	          IF(LMZADA(II,NCV).EQ.1) THEN
                    TT21S(II,NCV)=ZADLOCAL(II,NCV)
                    TT210S(II,NCV)=ZADLOCAL0(II,NCV)
                ENDIF
             ENDIF
          ENDIF
      ENDDO
	
   50 CONTINUE
C     END OF LOOP OVER ELEMENT NODES-----
C
  300 IELX=NCV
      DO I=1,4
         IF(IACTIVE(I).EQ.1) THEN
            DO J=1,8
               LMTOT(I)=LMTOT(I)+LMS(I,J)
            ENDDO
         ENDIF
      ENDDO
CE  NODE COORDINATES OF ELEMENTS MATRIX
      K=0
      DO 60 I=1,NBRE
      IF(NEL(NLM,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM,I)
      DO 55 J=1,3
   55 CK(K,J)=CORD(KK,J)
   60 CONTINUE  
C
CE    GAUSS POINTS  LOOP =============================================
C
      NGAUSC=0
      DO 102 NGX=1,NGAUSX
      JR=NREF(NGAUSX) + NGX
      R = XG(JR)
      DO 101 NGY=1,NGAUSY
      JS=NREF(NGAUSY) + NGY
      S = XG(JS)
      DO 100 NGZ=1,NGAUSZ
      NGAUSC=NGAUSC+1
      JT=NREF(NGAUSZ) + NGZ
      T = XG(JT)
      WT=WGT(JR)*WGT(JS)*WGT(JT)
      CALL JACT(R,S,T,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
CE    VELOCITIES CALCULATION
CE    PRESSURE AT GAUSS POINT
      PRESS=0.0
      IF(ICONV.GT.0) THEN
         DO I=1,NCV
           PRESS=PRESS+H(I)*T21(I)
         ENDDO
      ENDIF     
C
CE    CONCENTRATION AT GAUSS POINT 
C
C     FOR SMEARED CONDITIONS MATERIAL PARAMETERS ARE INTERPOLATED FROM NODES
      IF(ISMEARED.GE.0) GO TO 81
      CONCA=0.D0          
      IF(NSTAC.EQ.0.OR.KONC.EQ.0) GO TO 70
      IF(NTACV(MAT3D).EQ.0) GO TO 67
      CALL TABF(A(LTABC),A(LNTACV),MAT3D,NMATT,TEMP,CC,NTA,IND)
      IF(IND.EQ.0) GO TO 70
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) MAT3D,TEMP
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) MAT3D,TEMP
 2005 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA SPEC. TOPLOTA - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6005 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SPECIFIC HEAT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
   67 CALL ANALCF(MAT3D,TEMP,CC,A(LGUSM))
   70 CONTINUE
C
      IF(KONK.EQ.0) GO TO 80
      IF(IBX.EQ.0.AND.IBY.EQ.0.AND.IBZ.EQ.0) GO TO 77
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,TEMP,AKX,NTA,IND)
      IF(IND.GT.0) GO TO 22
      IF(IBY.GT.0.AND.IBZ.GT.0) GO TO 181
      IF(IANIZ.EQ.0) GO TO 186
      AKZ=AKX*FAZ
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 182
  186 AKY=AKX
      AKZ=AKX
      GO TO 182
  181 CALL TABF(A(LTABK),A(LNTAKV),IBY,NTABK,TEMP,AKY,NTA,IND)
      IF(IND.GT.0) GO TO 22
      CALL TABF(A(LTABK),A(LNTAKV),IBZ,NTABK,TEMP,AKZ,NTA,IND)
  182 IF(IND.EQ.0) GO TO 80
  
   22 CONTINUE
      IF(ISRPS.EQ.0)
     *WRITE(3,2001)  MAT3D,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6001)  MAT3D,TEMP
 2001 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. PROVODJENJA - TOPL.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6001 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'DARCY COEFF-PRESSURE OR DDIF-CONC,  NO. =',I5/
     11X,'CONCENTRARION,  CONC =',1PD12.4/
     21X,'S T O P'//' CHECK: INPUT DATA FOR DIFFUSION COEFFICIENT'/)
      STOP
      
   77 CALL ANALKF(MAT3D,TEMP,AKX,AKY,AKZ,A(LTOPM),A(LTMNM))
      IF(AKY.GT.0.AND.AKZ.GT.0) GO TO 80
      IF(IANIZ.EQ.0) GO TO 811
      AKZ=AKX*FAZ
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 80
  811 CONTINUE
	AKY=AKX
      AKZ=AKX
   80 CONTINUE
      IF(IZIP.NE.2.OR.MAXTQE.EQ.1) GO TO 81
      CALL TABF(A(LQEFN),A(LNTAQE),IQE,NQE,TEMP,QQ,NTA,IND)
      IF(IND.EQ.0) GO TO 81
      IF(ISRPS.EQ.0)
     *WRITE(3,2011) IQE,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6011) IQE,TEMP
 2011 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPLOTNOG IZVORA (PONORA)   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6011 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
CE  ELEMENT MATRIXES
   81 WDT=WT*DET1
      WDT0=WDT
      VEFFEC=0.D0
      DIAM=0.D0 
      DO I=1,NCV
         VEFFEC=VEFFEC+ H(I)*VOLFLOC(I)
         DIAM=DIAM+H(I)*DIAMSMEV(NODEL(I))
      ENDDO
C
C     CONVECTION
C
      AMI=0.D0
      DDARCY=0.D0
      DDARCY2=0.D0
      DDARCY3=0.D0
      IF(ICONV.EQ.1) THEN
         IF(IACTIVE(1).EQ.1) THEN
            IF(ISMEARED.EQ.0) THEN
               DO I=1,NCV
                 AMI=AMI+H(I)*AMIV(NODEL(I))
               ENDDO
               AKPIPE=DIAM*DIAM/(32.*AMI)
               DARCYVS(1,1)=AKPIPE 
               DARCYVS(2,1)=AKPIPE
               DARCYVS(3,1)=AKPIPE
           ELSE
               IF(IANIZS.NE.2) THEN
                  DO I=1,NCV
                     DDARCY=DDARCY+H(I)*DARCYCAP(1,NODEL(I))
                     DDARCY2=DDARCY2+H(I)*DARCYCAP(2,NODEL(I))  
                     DDARCY3=DDARCY3+H(I)*DARCYCAP(3,NODEL(I))
                  ENDDO  
                  DARCYVS(1,1)=DDARCY
                  DARCYVS(2,1)=DDARCY2
                  DARCYVS(3,1)=DDARCY3 
              ELSE
                  CALL CLEAR(DVECTP,6)
                  DO I=1,6
                    DO J=1,NCV 
                      DVECTP(I)=DVECTP(I)+H(J)*DARCYCAP(I,NODEL(J))
                    ENDDO
                  ENDDO
                  
                  DARCYMA(1,1) = DVECTP(1)   ! XX
                  DARCYMA(2,2) = DVECTP(2)   ! YY
                  DARCYMA(3,3) = DVECTP(3)   ! ZZ
                  DARCYMA(1,2) = DVECTP(4)   ! XY
                  DARCYMA(2,1) = DVECTP(4)   ! YX
                  DARCYMA(1,3) = DVECTP(5)   ! XZ
                  DARCYMA(3,1) = DVECTP(5)   ! ZX
                  DARCYMA(2,3) = DVECTP(6)   ! YZ
                  DARCYMA(3,2) = DVECTP(6)   ! ZY
               ENDIF
            ENDIF        
         ENDIF
      ENDIF
      IF(IACTIVE(2).EQ.1) THEN
         DDARCY=0.0
         DO I=1,NCV
            DDARCY=DDARCY+H(I)*DARCYCOEFV(NODEL(I))
         ENDDO
         DARCYVS(1,2)=DDARCY
         DARCYVS(2,2)=DDARCY
         DARCYVS(3,2)=DDARCY       
      ENDIF
C
C     DIFFUSION
C
      IF(IPASSME.EQ.2) THEN
         DDIF=0.D0
         DDIFP=0.D0
         DDIFP2=0.D0
         DDIFP3=0.D0
         IF(IACTIVE(3).EQ.1)THEN
            IF(ISMEARED.EQ.0) THEN
               DO I=1,NCV
                 DDIFP=DDIFP+H(I)*DPIPE(NODEL(I))
               ENDDO
               DDIFV(1,3)=DDIFP
               DDIFV(2,3)=DDIFP
               DDIFV(3,3)=DDIFP
            ELSE 
               IF(IANIZS.NE.2) THEN       
                  DO I=1,NCV
                     DDIFP =DDIFP +H(I)*DPIPECAP(1,NODEL(I))
                     DDIFP2=DDIFP2+H(I)*DPIPECAP(2,NODEL(I))  
                     DDIFP3=DDIFP3+H(I)*DPIPECAP(3,NODEL(I))
                  ENDDO  
                  DDIFV(1,3)=DDIFP
                  DDIFV(2,3)=DDIFP2
                  DDIFV(3,3)=DDIFP3
               ELSE
                  CALL CLEAR(DVECT,6)
                  DO I=1,6
                    DO J=1,NCV 
                      DVECT(I)=DVECT(I)+H(J)*DPIPECAP(I,NODEL(J))
                    ENDDO
                  ENDDO
               ENDIF              
            ENDIF                
         ENDIF
         
         IF(IACTIVE(4).EQ.1) THEN
             DO I=1,NCV
                 DDIF=DDIF+H(I)*DTISSUE(NODEL(I))
             ENDDO
           DDIFV(1,4)=DDIF
           DDIFV(2,4)=DDIF
           DDIFV(3,4)=DDIF
         ENDIF
      ENDIF
C
      DO 100 ID=1,4
      IF(IACTIVE(ID).EQ.0) GO TO 100
      IF(ID.GT.2.AND.IPASSME.EQ.1) GO TO 100
      IF(ID.EQ.1.OR.ID.EQ.3) THEN
         WDT=VEFFEC*WDT0
      ELSE
         WDT=(1.-VEFFEC)*WDT0
      ENDIF
      IF(ICONV.NE.0.AND.(ID.EQ.1.OR.ID.EQ.2).AND.IPASSME.EQ.2) THEN
         DO I=1,3
            GRADP(I)=0.D0
            DO K=1,NCV
                GRADP(I)=GRADP(I)+PJ(I,K)*TT21S(ID,K)
            ENDDO   
         ENDDO
         IF(IANIZS.NE.2.OR.ID.NE.1) THEN 
            DO I=1,3 
               VCONV(I,ID)=-DARCYVS(I,ID)*GRADP(I)
            ENDDO
         ELSE
           DO I=1,3
               VCONV(I,ID)=0.D0 
               DO K=1,3  
                 VCONV(I,ID)=VCONV(I,ID)-DARCYMA(I,K)*GRADP(K)
               ENDDO
           ENDDO  
        ENDIF
      ENDIF    
CE    CONCENTRATION AT GAUSS POINT 
C     CONC=0.D0    
      IF(IDIFFHEAT.NE.0.AND.ID.GT.2.AND.IPASSME.EQ.2) THEN
         CONC(ID)=0.D0
         DO I=1,NCV
           CONC(ID)=CONC(ID)+H(I)*TT21S(ID,I)
         ENDDO           
      ENDIF        
      IF(IDARCY.NE.0.OR.ISMEARED.NE.1) GO TO 400   
 
CE  CALCULATION OF CONDUCTION MATRIX AND SPECIFIC HEAT MATRIX OF ELEMENT
      K=0
      DO 85 I=1,NCV
      DO 83 J=I,NCV
      K=K+1
      IF(NSTAC.EQ.0) GO TO 87
      HH = H(I)*H(J)*WDT
      EL(K)=EL(K)+CC*HH
   87 IF(INDSK.EQ.0) GO TO 83
      PJX=PJ(1,I)*PJ(1,J)
      PJY=PJ(2,I)*PJ(2,J)
      PJZ=PJ(3,I)*PJ(3,J)
      HP(K) = HP(K) +(AKX*PJX+AKY*PJY+AKZ*PJZ)*WDT
   83 CONTINUE
      IF(IQE.EQ.0) GO TO 85
CE  CALCULATION OF RIGHT-SIDE VECTOR
      F21(I)=F21(I)+H(I)*WDT*QQ
   85 CONTINUE
      IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
      TBK(1)=0.
      TBK(2)=0.
      TBK(3)=0.
      DO 151 J=1,3
      DO 150 I=1,NCV
  150 TBK(J)=TBK(J)+PJ(J,I)*T21(I)
  151 CONTINUE
      TBK(1)=AKX*TBK(1)
      TBK(2)=AKY*TBK(2)
      TBK(3)=AKZ*TBK(3)
      DO 152 I=1,NCV
      DO 153 J=1,3
  153 F21(I)=F21(I)-(PJ(J,I)*TBK(J))*WDT
  152 CONTINUE
      GO TO 100
C
  400 CONTINUE    ! JUMP HERE IF (IDARCY.NE.0)
C
C     DARCY AND DIFFUSION MATRICES
C
      IF(ICONVV.NE.0.AND.ID.LE.2.AND.IPASSME.EQ.1) THEN
         IF(IANIZS.NE.2.OR.ID.NE.1) THEN 
            AKX = DARCYVS(1,ID)*WDT 
            AKY = DARCYVS(2,ID)*WDT
            AKZ = DARCYVS(3,ID)*WDT
            DO I=1,NCV
               DO J=1,NCV
                  PJX = PJ(1,I)*PJ(1,J)
                  PJY = PJ(2,I)*PJ(2,J)
                  PJZ = PJ(3,I)*PJ(3,J)
                  SKES(ID,I,J)=SKES(ID,I,J)+AKX*PJX+AKY*PJY+AKZ*PJZ
               ENDDO
            ENDDO 
         ELSE
            AKDWX  = DVECTP(1)*WDT
            AKDWY  = DVECTP(2)*WDT
            AKDWZ  = DVECTP(3)*WDT
            AKDWXY = DVECTP(4)*WDT
            AKDWXZ = DVECTP(5)*WDT
            AKDWYZ = DVECTP(6)*WDT
            DO I=1,NCV
               DO J=1,NCV
                  PJX = PJ(1,I)*PJ(1,J)
                  PJY = PJ(2,I)*PJ(2,J)
                  PJZ = PJ(3,I)*PJ(3,J)
                                
                  PJXY = PJ(1,I)*PJ(2,J)
                  PJYX = PJ(2,I)*PJ(1,J)
              
                  PJXZ = PJ(1,I)*PJ(3,J)
                  PJZX = PJ(3,I)*PJ(1,J)
              
                  PJYZ = PJ(2,I)*PJ(3,J)
                  PJZY = PJ(3,I)*PJ(2,J)
              
                  SKES(ID,I,J) = SKES(ID,I,J) + PJX*AKDWX + PJY*AKDWY +
     1                         PJZ*AKDWZ + AKDWXY*(PJXY+PJYX) + 
     2                         AKDWXZ*(PJXZ+PJZX) + AKDWYZ*(PJYZ+PJZY) 
               ENDDO
            ENDDO
         ENDIF                    
      ENDIF
C      
      IF(IDIFFHEAT.NE.0.AND.ID.GT.2.AND.IPASSME.EQ.2) THEN
        AKTW     = CC*AKTT*WDT
C
        IF(IANIZS.NE.2.OR.ID.NE.3) THEN    
           AKDWX = DDIFV(1,ID)*WDT
           AKDWY = DDIFV(2,ID)*WDT
           AKDWZ = DDIFV(3,ID)*WDT    
        ELSE
           AKDWX  = DVECT(1)*WDT
           AKDWY  = DVECT(2)*WDT
           AKDWZ  = DVECT(3)*WDT
           AKDWXY = DVECT(4)*WDT
           AKDWXZ = DVECT(5)*WDT
           AKDWYZ = DVECT(6)*WDT
        ENDIF
C
        DO 405 I=1,NCV
          H2TWI = H(I)*AKTW
          H2WI  = H(I)*WDT
          DO 405 J=1,NCV
            PJX = PJ(1,I)*PJ(1,J)
            PJY = PJ(2,I)*PJ(2,J)
            PJZ = PJ(3,I)*PJ(3,J)
            SKEMS(ID,I,J) = SKEMS(ID,I,J) + H2TWI*H(J)
            
            IF(IANIZS.NE.2.OR.ID.NE.3) THEN
              SKEDS(ID,I,J) = SKEDS(ID,I,J) + PJX*AKDWX + PJY*AKDWY + 
     1                        PJZ*AKDWZ
            ELSE
              PJXY = PJ(1,I)*PJ(2,J)
              PJYX = PJ(2,I)*PJ(1,J)
              
              PJXZ = PJ(1,I)*PJ(3,J)
              PJZX = PJ(3,I)*PJ(1,J)
              
              PJYZ = PJ(2,I)*PJ(3,J)
              PJZY = PJ(3,I)*PJ(2,J)
              
              SKEDS(ID,I,J) = SKEDS(ID,I,J) + PJX*AKDWX + PJY*AKDWY +
     1                        PJZ*AKDWZ  + AKDWXY*(PJXY+PJYX) + 
     2                        AKDWXZ*(PJXZ+PJZX) + AKDWYZ*(PJYZ+PJZY) 
            ENDIF
            
            IF(ICONV.EQ.1) THEN
              COEFFV=VCONV(1,ID-2)*PJ(1,J)+VCONV(2,ID-2)*PJ(2,J)+
     1        VCONV(3,ID-2)*PJ(3,J)
              SKEDS(ID,I,J)=SKEDS(ID,I,J)+H2WI*COEFFV
            ENDIF
  405   CONTINUE
      ENDIF
C
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
C
C     END LOOP OVER GAUSS POINTS
C-----KRAJ PETLJE PO GAUSOVIM TACKAMA ----------
C --------------------- 2D
C     PETLJA PO DOMENIMA
      DO 500 ID=1,4 
      IF(IACTIVE(ID).EQ.0) GO TO 500
      IF(ID.LE.2) THEN
        IF(IPASSME.EQ.2) GO TO 500
      ELSE
        IF(IPASSME.EQ.1) GO TO 500
      ENDIF 
      IF(LMTOT(ID).EQ.0) GO TO 500 
      INDVE=1
      IF(ID.EQ.2) INDVE=2   
      CALL CLEAR(SKEES,64)
      CALL CLEAR(F21ES,8)
      IF(IDARCY.NE.0) THEN
        IF(ID.LE.2) THEN
          DO I=1,NCV
            DO J=1,NCV
              SKEES(I,J)=SKES(ID,I,J)
              F21ES(I)=F21ES(I)-SKES(ID,I,J)*TT21S(ID,J)
            ENDDO
          ENDDO   
        ELSE
          DO 430 I=1,NCV
             DO 430 J=1,NCV
             IF(IFORM.EQ.2) THEN
                 SKEES(I,J)=SKEES(I,J)+SKEMS(ID,I,J)+SKEDS(ID,I,J)
                 F21ES(I)=F21ES(I)-SKEMS(ID,I,J)*(TT21S(ID,J)-
     1           TT210S(ID,J))-SKEDS(ID,I,J)*TT21S(ID,J)
             ELSE
                 CONTINUE
C                KORISTI SE SAMO IFORM=2
C               SKEES(I,J)=SKEES(I,J)+SKEMS(ID,I,J)+SKEDS(ID,I,J)
C               SKE(II,J)=SKE(II,J)+SKEP(I,J)
C               F9(II)=F9(II)-SKEM(I,J)*(TT21(JJ)-TT210(JJ))-
C     1                       SKED(I,J)*TT21(JJ)-SKEP(I,J)*TT21(J)
             ENDIF
  430     CONTINUE
        ENDIF   
C
C       FLUX USLED ZADATIH BRZINA NA POVRSINI
C
        IF(ICONTOUR.EQ.0.OR.ID.GT.2) GO TO 149
C
        VOLFRACTL=0.0
        DO I = 1, NCV
          KK=NEL(NLM,I)
          VOLFRACTL = VOLFRACTL + VOLFRACTV(KK)
        ENDDO
        VOLFRACTL = VOLFRACTL / NCV
        IF(ID.EQ.2)VOLFRACTL=1.-VOLFRACTL
C
        CALL CLEAR(PLOCAL,8)
        DO 330 NPOV=1,6
        IF(ILOC(ID,NPOV).LT.4) GO TO 330
        POVRS=0.D0
C
CS      PETLJA PO GAUSOVIM TACKAMA       
        IF(NPOV.GT.2) GO TO 545
        KFIX=1
        NGXP=NGAUSY
        NGYP=NGAUSZ
        R=1.
        IF(NPOV.EQ.2) R=-1.
        GO TO 560
C
  545   IF(NPOV.GT.4) GO TO 550
        KFIX=2
        NGXP=NGAUSX
        NGYP=NGAUSZ
        S=1.
        IF(NPOV.EQ.4) S=-1.
        GO TO 560
C
  550   NGXP=NGAUSX
        NGYP=NGAUSY
        KFIX=3
        T=1.
        IF(NPOV.EQ.6) T=-1.
C
  560   DO 510 NGX=1,NGXP
        JR=NREF(NGXP) + NGX
        XX = XG(JR)
        WX=WGT(JR)
        DO 510 NGY=1,NGYP
        JS=NREF(NGYP) + NGY
        YY = XG(JS)
        WY=WGT(JS)
        GO TO (571,572,573),KFIX
  571   S=XX
        T=YY
        GO TO 575
  572   R=XX
        T=YY
        GO TO 575
  573   R=XX
        S=YY
  575   WT=WX*WY
C
        CALL JACT(R,S,T,NEL,KFIX)
C
        WDT=WT*DET*VOLFRACTL
        POVRS=POVRS+WDT
        DO K=1,8
           PLOCAL(K)=PLOCAL(K)+H(K)*VLOCAL(ID,K)*WDT
        ENDDO   
  510   CONTINUE                        
        DO K=1,8
           F21ES(K)=F21ES(K)-PLOCAL(K)
        ENDDO
C       THE SIGN ABOVE FOR PLOCAL WAS CHANGED - NORMAL VELOCITY IS IN DIRECTION OF NORMAL
C       POINTING OUT WITH RESPECT TO THE 3D ELEMENT  
C       POST-PROCESSING OF VELOCITIES AT NODAL POINTS TO BE EXECUTED IN 
C       ANOTHER SET OF SUBROUTINES (FOR 2D IS CODED HERE)
  330   CONTINUE         
        GO TO 149
      ENDIF
C
      IF (INDVEL .EQ. 1) GO TO 200
      IF(NSTAC.EQ.0) GO TO 253
      DO 105 K=1,MEL3D
  105 EL(K)=EL(K)/DT
  253 IF(INDSK.EQ.0.AND.NELZAD.EQ.0) GO TO 140
      DO 115 K=1,MEL3D
  115 HP(K)=HP(K)+EL(K)
  140 K=0
      DO 121 I=1,NCV
      DO 120 J=I,NCV
      K=K+1
      SKE(I,J)=EL(K)
      SKE(J,I)=SKE(I,J)
  120 CONTINUE
  121 CONTINUE
CE  CORECTION OF RIGHT-SIDE VECTOR AFTER FIRST PASS
      IF(LINTE.EQ.0) GO TO 123
      DO 122  I=1,NCV
      IF(LM(I).EQ.0) GO TO 122
      DO 124  J=1,NCV
      IF(LM(J).EQ.0) GO TO 124
      F21(I)= F21(I) - SKE(I,J)*T212(J)
  124 CONTINUE
  122 CONTINUE
CE RIGHT-SIDE VECTOR : EL*T210 FOR LINEAR TRANSIENT PROBLEMS
  123 IF(LINTE.EQ.1) GO TO 141
      DO 132  I=1,NCV
      IF(LM(I).EQ.0) GO TO 132
      DO 134  J=1,NCV
      IF(LM(J).EQ.0) GO TO 134
      F21(I)= F21(I) + SKE(I,J)*T210(J)
  134 CONTINUE
  132 CONTINUE
  141 CONTINUE
      MILOS=1
	IF(MILOS.EQ.1) GO TO 149
C     CORRECT RIGHT-HAND SIDE FOR PRESCRIBED VALUES AT NODES
      IF(NELZAD.EQ.0) GO TO 149
	  DO 148 I=1,NCV
	  IF(LM(I).EQ.0) GO TO 148
	  DO J=1,NCV
          IF(LMZADA(ID,J).EQ.1)F21(I)=F21(I)-SKE(I,J)*ZADLOCAL(ID,J)
	  ENDDO
  148 CONTINUE
  149 CONTINUE
C
      !IF(IDARCY.NE.0.AND.ID.LT.3) THEN
      IF(IDARCY.NE.0) THEN
        DO I=1,NDES
          DO J=1,NDES
            SKEES(I,J) = AEFF * SKEES(I,J)
          ENDDO
          F21ES(I) = AEFF * F21ES(I)
        ENDDO
      ENDIF
C          
      IF(INDFLUX.EQ.1) GO TO 137    
C
      IF(NHP.EQ.0.AND.NTOK.EQ.0.AND.NQP.EQ.0.AND.NHR.EQ.0) GO TO 135
CE    INTEGRALS OVER SURFACES OF ELEMENT
      CALL INTAB3(A(LNG3D),A(LNELG3),A(LNEL3D),A(LNTAHP),A(LHP),A(LHK),
     1A(LSKE),A(LNTAHR),A(LHR),A(LFOHR),NREF,XG,WGT)
CE  INSERTING MATRIX HP AND VECTOR F21 INTO SYSTEM
  135 continue  
C
      DO I=1,8
         LM(I)=LMS(ID,I)
      ENDDO 
      IF(IMUMPS.EQ.0) THEN    
        IF(IDARCY.EQ.0) THEN  
          CALL MATSTE (A(LSK),A(LMAXA),A(LF),HP,F21,LM,NCV,INDSK)
  	  ELSE
	    CALL ADDSTF(A(LALEVO),A(LSILE),A(LDESNO),SKE,F21,A(LMAXA),LM,
     1              NDES,1) 
        ENDIF
      ELSE
#if(MUMPS_CLUSTER)
c	 CALL MUMPSLEFT(SKEF,NEL,ID,NDES,NBREL,NDIM,NETIP,NDIMID)
#else
        CALL sparseassembler_addelemmatrix(8,LM,SKEES)  
#endif
        CALL SPAKDE(A(LSILE),F21ES,LM,8,JEDN)
      ENDIF 
      
  137 CONTINUE
  500 CONTINUE
  200 CONTINUE
C  
C     END LOOP OVER ELEMENTS
C
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTEB3DARCY(IDT,IDTCD,CORD,TCONS,NTAKV,NTACV,NEL,NQ,
     1 MATV,EL,HP,HK,SKE,TT1,TT2,TT0,IBFK,FAKP,HR,MATCONV,
     2 AMATFC,MATDIF,AMATFD,NZADJ,ZADFM,NODEIN,NODEOUT,FLUX,
     3 MATERH,AMATFRO,AMATFSH,AMATFK,NZADP,NDES,
     3 IDARCY,MAT3DCONV,MAT3DDIF,AEFF,VDARCY,NZADIN,NZADOUT,NDIMID) 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CE  MAIN PROGRAM TO PERFORM INTEGRATION OVER V OF ELEMENT
C
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA3/ LNEL3D,LMAT3D,LNQ3D,LITG3D,LIP3CV,LNG3D,LNELG3,
     1LEL,LHP,LHK,LSKE,LDEL,LDEHP,LDEHK,LHR
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON/REAL3D/ CK(21,3),P(3,21),PJ(3,21),XJ(3,3),H(21),T21(21),
     1AK,CC,HH,QQ,DET,DET1,F21(21),T212(21),T210(21),HHP
      COMMON /SRPSKI/ ISRPS
      COMMON/FLUXKC/INDFLUXKC
	COMMON/KONVERNDS/CONCT,CONCTOUT,KONV
      COMMON/UNSYMMETRIC/LALEVO,LDESNO,LSILE,ISYMM
      COMMON/SURFACE3DBC/NODSURF(8,3)
C
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ            
	common/elemmodels/modelel(20),ngele              	    
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
C
      DIMENSION XG(15),WGT(15),NREF(6),IG3D8(8)
      DIMENSION IDT(NDIMID,NPT),CORD(NPT,3),TCONS(*),NTAKV(*),NTACV(*),
     1NEL(NE3D,8),MATV(*),NQ(*),EL(*),HP(*),HK(*),SKE(NDES,NDES),
     2TT1(JEDN),TT2(JEDN),TT0(JEDN),IBFK(NMATT,*),FAKP(NMATT,*),TBK(3),
     3 HR(*),IDTCD(2,NPT)
      DIMENSION MATCONV(NMATTCONV),AMATFC(NMATTCONV,2,*),
     1          MATDIF(NMATTDIF),AMATFD(NMATTDIF,2,*)
      DIMENSION NZADJ(3,NZADP),ZADFM(NZADP)
      DIMENSION NODEIN(NZADIN),NODEOUT(NZADOUT),FLUX(NPT)
      DIMENSION MATERH(NMATTHEAT),AMATFRO(NMATTHEAT,2,*),
     2          AMATFSH(NMATTHEAT,2,*),AMATFK(NMATTHEAT,2,*)
      DIMENSION ZADLOCAL(16),ZADLOCAL0(16),ZADLOCAL32(16),LMZADA(16),
     1          VLOCAL(8),SKEM(8,8),SKEP(8,8),
     2          SKED(8,8),VCONV(8),GRADC(8),NLOCSU(24),ILOC(8),
     3          PLOCAL(27),DARCYV(4)
C     
      DATA IG3D8/7,3,6,2,8,4,5,1/
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
      DATA NLOCSU/1,4,8,5,2,6,7,3,2,1,5,6,3,7,8,4,1,2,3,4,5,6,7,8/
      DATA NODSURF /1, 2, 2, 1, 1, 2, 2, 1,
	2              3, 3, 4, 4, 3, 3, 4, 4,
	3              5, 5, 5, 5, 6, 6, 6, 6/
     
      IF(IZIP.EQ.2) GO TO 15
      IF(NQE.NE.1) GO TO 15
      CALL TABF(A(LQEFN),A(LNTAQE),NQE,NQE,VREME,QQ,NTA,IND)
      IF(IND.EQ.0) GO TO 15
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) NQE,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) NQE,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPL. IZVOR-VREME,  BR.=',I3/
     11X,'ARGUMENT VREME= ',F10.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME = ',1PD12.4)
      STOP
   15 CONTINUE
C
      ICONVV = ICONV
      IDIFFHEAT = 0
      IF(IDIFUSE.NE.0.OR.IHEAT.NE.0) IDIFFHEAT = 1
C
      IFORM  = 2
	AKTT   = 1./DT
	DDARCY = 0.d0
	VBR    = 1.0D35
C	
CE    LOOP OVER ELEMENTS =====================================
C
      DO 200 NLM = 1,NE3D
      KKIN  = 0   
      KKOUT = 0
      CC=1.D0  
c   
      IF (ITOR .EQ. 3)  WRITE(3,5100) NLM
 5100 FORMAT(' ELEMENT....................',I5)
      IF (INDVEL .EQ. 1) GO TO 300
      IF(IDARCY.EQ.0) THEN 
         DO 20 I = 1,MEL3D
         HP(I) = 0.
         HK(I) = 0.
         HR(I) = 0.
         EL(I) = 0.
   20    CONTINUE
      ENDIF
      DO 17 I=1,16
      T21(I) = 0.
      T212(I) = 0.
      T210(I) = 0.
      LM(I)=0
	LMZADA(I)=0
      ZADLOCAL(I)=0.D0
      ZADLOCAL0(I)=0.D0
      ZADLOCAL32(I)=0.D0
   17 F21(I)=0.
   
C     IF(NSTAC.EQ.0) GO TO 23
      CALL CLEAR(SKE,NDES*NDES)
      CALL CLEAR(SKEM,64)
      CALL CLEAR(SKEP,64)
      CALL CLEAR(SKED,64) 
      CALL ICLEAR(ILOC,8)   

      IF(NMAT3D.GT.1.OR.INDIFFUS.EQ.1) MAT3D=MATV(NLM)
      IQE=0
      IF(NQE.GT.0) IQE=NQ(NLM)
      ARG=0.
      IF(IDARCY.NE.0) GO TO 30
	IF(indiffus.EQ.1) THEN
	  CC=1.D0
	  GO TO 30 
	ENDIF
      IF(NSTAC.EQ.0.OR.KONC.EQ.1) GO TO 25
      CALL TABF(A(LTABC),A(LNTACV),MAT3D,NMATT,ARG,CC,NTA,IND)
   25 IF(IANIZ.EQ.0) GO TO 188
      FAX=FAKP(MAT3D,1)
      FAY=FAKP(MAT3D,2)
      FAZ=FAKP(MAT3D,3)
  188 IBX=IBFK(MAT3D,1)
      IBY=IBFK(MAT3D,2)
      IBZ=IBFK(MAT3D,3)
      IF(KONK.EQ.1) GO TO 30
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,ARG,AKX,NTA,IND)
      IF(IBY.GT.0.AND.IBZ.GT.0) GO TO 180
      IF(IANIZ.EQ.0) GO TO 189
      AKZ=AKX*FAZ
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 30
  189 AKY=AKX
      AKZ=AKX
      GO TO 30
  180 CALL TABF(A(LTABK),A(LNTAKV),IBY,NTABK,ARG,AKY,NTA,IND)
      CALL TABF(A(LTABK),A(LNTAKV),IBZ,NTABK,ARG,AKZ,NTA,IND)
   30 IF(IQE.EQ.0.OR.NQE.EQ.1) GO TO 44
      CALL TABF(A(LQEFN),A(LNTAQE),IQE,NQE,VREME,QQ,NTA,IND)
      IF(IND.EQ.0) GO TO 44
      WRITE(3,2000) IQE,VREME
      STOP
   44 IF(IZIP.NE.2.OR.MAXTQE.GT.1) GO TO 40
      CALL TABF(A(LQEFN),A(LNTAQE),IQE,NQE,ARG,QQ,NTA,IND)
C
CE    TEMPERATURE AT NODES  VECTOR
C
   40 NCV      = 0
      NND9     = 0
	NELZAD   = 0
	ICONTOUR = 0
C      
      DO 50 I=1,NBRE
      IF(I.LE.8) GO TO 41
      IDEL(I-8)=0
      IF(NEL(NLM,I).EQ.0) GO TO 50
      NND9=NND9+1
      NOD9(NND9)=I
      IDEL(I-8)=1
   41 J=NEL(NLM,I)
C   
      JJ1=IDT(1,J)
      JJ2=IDT(2,J)
C 
      NCV=NCV+1
      VLOCAL(NCV)=0.D0
      NCVDISP=NBRE+NCV  
C
C     PRESCRIBED VALUES
C     
      IF(NZADP.GT.0) THEN
	  DO KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
            IF(IDOF.EQ.3) THEN
              ICONTOUR = 1
              DO K=1,3
                JJ=NODSURF(NCV,K)
	          ILOC(JJ)=ILOC(JJ)+1
              ENDDO
            ENDIF	              	       
            NELZAD=NELZAD+1
            NF=NZADJ(3,KK)
            FAK = ZADFM(KK)
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,IND)
            IF(IND.NE.0) THEN    
              WRITE(3,6015) NF,VREME
              STOP
            ENDIF
            TIMET=VREME-DT
            IF(TIMET.LT.0) TIMET=0.D0
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,TIMET,FTT,NTMX,
     1                IND)
            IF(IND.NE.0) THEN    
              WRITE(3,6016) NF,TIMET
              STOP
            ENDIF
            IF(IDOF.EQ.1) THEN
              LMZADA(NCV)     = 1
              ZADLOCAL(NCV)   = FT*FAK
              ZADLOCAL0(NCV)  = FTT*FAK
              ZADLOCAL32(NCV) = ZADLOCAL(NCV)-ZADLOCAL0(NCV)
            ELSEIF(IDOF.EQ.2) THEN
              LMZADA(NCVDISP)     = 1
              ZADLOCAL(NCVDISP)   = FT*FAK
              ZADLOCAL0(NCVDISP)  = FTT*FAK
              ZADLOCAL32(NCVDISP) = ZADLOCAL(NCVDISP)-ZADLOCAL0(NCVDISP)
            ELSEIF(IDOF.EQ.3) THEN
              VLOCAL(NCV) = FT*FAK
            ENDIF
	    ENDIF
	  ENDDO
 6015   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  VREME =',1PD12.4)
 6016   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  TIMET=VREME-DT =',1PD12.4)
      ENDIF
C
   37 CONTINUE	
C
      LM(NCV)     = JJ1
      LM(NCVDISP) = JJ2
      IF(NTCONS.GT.0) THEN
        LM(NCV)     = IDT(1,J)
        LM(NCVDISP) = IDT(2,J)
      ENDIF
C
      IF(NTCONS.EQ.0) GO TO 45
      IF(IDT(1,J).LE.0.AND.IDT(2,J).LE.0) GO TO 42
      IF(NSTAC.EQ.0.AND.LINTE.EQ.0) GO TO 50
      DO KK=1,2
         K=IDT(KK,J)
         IF(K.GT.0) THEN
           KLOC=(KK-1)*NBRE+NCV
           T21(KLOC)  = TT1(K)
           T212(KLOC) = TT2(K)
           T210(KLOC) = TT0(K)
         ENDIF
      ENDDO
      GO TO 50
   42 T21(NCV)  = TCONS(J)
      T212(NCV) = TCONS(J)
      T210(NCV) = TCONS(J)
      GO TO 50
   45 CONTINUE
      IF (NSTAC.GT.0.OR.LINTE.GT.0.OR.NELZAD.GT.0) THEN
        DO KK=1,2
          JJ=IDT(KK,J)
          KLOC=(KK-1)*NBRE+NCV
          IF(JJ.GT.0) THEN
            T21(KLOC)  = TT1(JJ)
            T212(KLOC) = TT2(JJ)
            T210(KLOC) = TT0(JJ)
            IF(ITER.EQ.0) T212(KLOC)=0.D0
	    ELSE
	      IF(LMZADA(KLOC).EQ.1) THEN
              T21(KLOC)  = ZADLOCAL(KLOC)
              T212(KLOC) = ZADLOCAL32(KLOC)
              T210(KLOC) = ZADLOCAL0(KLOC)
            ENDIF
          ENDIF
        ENDDO
	ENDIF
   50 CONTINUE
C     END OF LOOP OVER ELEMENT NODES-----
C
  300 IELX=NCV
CE  NODE COORDINATES OF ELEMENTS MATRIX
      K=0
      DO 60 I=1,NBRE
      IF(NEL(NLM,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM,I)
      DO 55 J=1,3
   55 CK(K,J)=CORD(KK,J)
   60 CONTINUE  
C
CE    GAUSS POINTS  LOOP =============================================
C
      NGAUSC=0
      DO 102 NGX=1,NGAUSX
      JR=NREF(NGAUSX) + NGX
      R = XG(JR)
      DO 101 NGY=1,NGAUSY
      JS=NREF(NGAUSY) + NGY
      S = XG(JS)
      DO 100 NGZ=1,NGAUSZ
      NGAUSC=NGAUSC+1
      JT=NREF(NGAUSZ) + NGZ
      T = XG(JT)
      WT=WGT(JR)*WGT(JS)*WGT(JT)
      CALL JACT(R,S,T,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
CE    VELOCITIES CALCULATION
      IF (INDVEL.EQ.1) THEN
      VX = 0.0
      VY = 0.0
      VZ = 0.0
      DO 304 NV=1,NCV
      KK=NEL(NLM,NV)
      KK = LF +KK-1
      VX=VX-PJ(1,NV)*A(KK)
      VY=VY-PJ(2,NV)*A(KK)
      VZ=VZ-PJ(3,NV)*A(KK)
  304 CONTINUE
      WRITE (3,9990) NGX,NGY, NGZ, VX,VY,VZ
 9990 FORMAT ('   NG(',I1,',',I1,',',I1,')     VX = ',F12.6,
     *'  VY = ',F12.6,'  VZ = ',F12.6)
      GO TO 100
      ENDIF
C
CE    PRESSURE AT GAUSS POINT
C
      PRESS=0.0
      IF(ICONV.GT.0) THEN
         DO I=1,NCV
           PRESS=PRESS+H(I)*T21(I)
         ENDDO
      ENDIF     
C
CE    CONCENTRATION AT GAUSS POINT 
C
      CONC    =0.D0
      GRADC(1)=0.D0
      GRADC(2)=0.D0 
      GRADC(3)=0.D0    
      IF(IDIFUSE.NE.0.OR.IHEAT.NE.0) THEN
        DO I=1,NCV
          CONC     = CONC     + H(I)   *T21(NCV+I)
          GRADC(1) = GRADC(1) + PJ(1,I)*T21(NCV+I)
          GRADC(2) = GRADC(2) + PJ(2,I)*T21(NCV+I)
          GRADC(3) = GRADC(3) + PJ(3,I)*T21(NCV+I)
        ENDDO  
      ENDIF          
      IF(NSTAC.EQ.0.OR.KONC.EQ.0) GO TO 70
      IF(NTACV(MAT3D).EQ.0) GO TO 67
      CALL TABF(A(LTABC),A(LNTACV),MAT3D,NMATT,TEMP,CC,NTA,IND)
      IF(IND.EQ.0) GO TO 70
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) MAT3D,TEMP
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) MAT3D,TEMP
 2005 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA SPEC. TOPLOTA - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6005 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SPECIFIC HEAT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
   67 CALL ANALCF(MAT3D,TEMP,CC,A(LGUSM))
   70 CONTINUE
C
      IF(ICONVV.GT.0) THEN
        IF(IPASS.EQ.1) THEN
	    PRESSA=dabs(PRESS)      
          call tabdiff(MATCONV,AMATFC,MAT3DCONV,PRESSA,DDARCY,IND)
          MAT3D = MAT3DCONV
          TEMP  = PRESSA
          IF(IND.NE.0) GO TO 22
        ELSE
          !DDARCY = DARCYV(INDDEG)
        ENDIF
      ENDIF  
C
      IF(IDIFFHEAT.NE.0) THEN
        CONCA=dabs(CONC)
        IF(IHEAT.EQ.0) THEN
           call tabdiff(MATDIF,AMATFD,MAT3DDIF,CONCA,DDIFUS,IND)
           MAT3D=MAT3DdIF
           TEMP=CONCA
           IF(IND.NE.0) GO TO 22
        ELSE
           call tabdiff(MATERH,AMATFRO,MAT3DdIF,CONCA,RRO,IND1)
           call tabdiff(MATERH,AMATFSH,MAT3DdIF,CONCA,CC,IND2)
           call tabdiff(MATERH,AMATFK,MAT3DdIF,CONCA,DDIFUS,IND3)
           MAT3D=MAT3DdIF
           TEMP=CONCA
           IF(IND1.GT.0.OR.IND2.OR.IND3.GT.0) GO TO 22
           CC=RRO*CC           
        ENDIF
        IF(ICONV.NE.0) THEN
          CALL CLEAR(VCONV,8)
          DO K=1,NCV
            VCONV(1) = VCONV(1) - DDARCY*PJ(1,K)*T21(K)
            VCONV(2) = VCONV(2) - DDARCY*PJ(2,K)*T21(K)
            VCONV(3) = VCONV(3) - DDARCY*PJ(3,K)*T21(K)
          ENDDO
        ENDIF
      ENDIF
C
      IF(KONK.EQ.0) GO TO 80
      IF(IBX.EQ.0.AND.IBY.EQ.0.AND.IBZ.EQ.0) GO TO 77
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,TEMP,AKX,NTA,IND)
      IF(IND.GT.0) GO TO 22
      IF(IBY.GT.0.AND.IBZ.GT.0) GO TO 181
      IF(IANIZ.EQ.0) GO TO 186
      AKZ=AKX*FAZ
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 182
  186 AKY=AKX
      AKZ=AKX
      GO TO 182
  181 CALL TABF(A(LTABK),A(LNTAKV),IBY,NTABK,TEMP,AKY,NTA,IND)
      IF(IND.GT.0) GO TO 22
      CALL TABF(A(LTABK),A(LNTAKV),IBZ,NTABK,TEMP,AKZ,NTA,IND)
  182 IF(IND.EQ.0) GO TO 80
  
   22 CONTINUE
      IF(ISRPS.EQ.0)
     *WRITE(3,2001)  MAT3D,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6001)  MAT3D,TEMP
 2001 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. PROVODJENJA - TOPL.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6001 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'DARCY COEFF-PRESSURE OR DDIF-CONC,  NO. =',I5/
     11X,'CONCENTRARION,  CONC =',1PD12.4/
     21X,'S T O P'//' CHECK: INPUT DATA FOR DIFFUSION COEFFICIENT'/)
      STOP
      
   77 CALL ANALKF(MAT3D,TEMP,AKX,AKY,AKZ,A(LTOPM),A(LTMNM))
      IF(AKY.GT.0.AND.AKZ.GT.0) GO TO 80
      IF(IANIZ.EQ.0) GO TO 811
      AKZ=AKX*FAZ
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 80
  811 CONTINUE
	AKY=AKX
      AKZ=AKX
   80 CONTINUE
      IF(IZIP.NE.2.OR.MAXTQE.EQ.1) GO TO 81
      CALL TABF(A(LQEFN),A(LNTAQE),IQE,NQE,TEMP,QQ,NTA,IND)
      IF(IND.EQ.0) GO TO 81
      IF(ISRPS.EQ.0)
     *WRITE(3,2011) IQE,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6011) IQE,TEMP
 2011 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPLOTNOG IZVORA (PONORA)   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6011 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
CE  ELEMENT MATRIXES
   81 WDT=WT*DET1
      IF(IDARCY.NE.0) GO TO 400
CE  CALCULATION OF CONDUCTION MATRIX AND SPECIFIC HEAT MATRIX OF ELEMENT
      K=0
      DO 85 I=1,NCV
      DO 83 J=I,NCV
      K=K+1
      IF(NSTAC.EQ.0) GO TO 87
      HH = H(I)*H(J)*WDT
      EL(K)=EL(K)+CC*HH
   87 IF(INDSK.EQ.0) GO TO 83
      PJX=PJ(1,I)*PJ(1,J)
      PJY=PJ(2,I)*PJ(2,J)
      PJZ=PJ(3,I)*PJ(3,J)
      HP(K) = HP(K) +(AKX*PJX+AKY*PJY+AKZ*PJZ)*WDT
   83 CONTINUE
      IF(IQE.EQ.0) GO TO 85
CE  CALCULATION OF RIGHT-SIDE VECTOR
      F21(I)=F21(I)+H(I)*WDT*QQ
   85 CONTINUE
      IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
      TBK(1)=0.
      TBK(2)=0.
      TBK(3)=0.
      DO 151 J=1,3
      DO 150 I=1,NCV
  150 TBK(J)=TBK(J)+PJ(J,I)*T21(I)
  151 CONTINUE
      TBK(1)=AKX*TBK(1)
      TBK(2)=AKY*TBK(2)
      TBK(3)=AKZ*TBK(3)
      DO 152 I=1,NCV
      DO 153 J=1,3
  153 F21(I)=F21(I)-(PJ(J,I)*TBK(J))*WDT
  152 CONTINUE
      GO TO 100
C
  400 CONTINUE    ! JUMP HERE IF (IDARCY.NE.0)
C
C    DARCY AND DIFFUSION MATRICES
C
      IF(ICONVV.GT.0) THEN
        AKX = DDARCY
        AKY = DDARCY
        AKZ = DDARCY
        DO I=1,NCV
          DO J=1,NCV
            PJX = PJ(1,I)*PJ(1,J)
            PJY = PJ(2,I)*PJ(2,J)
            PJZ = PJ(3,I)*PJ(3,J)
            SKE(I,J)=SKE(I,J)+(AKX*PJX+AKY*PJY+AKZ*PJZ)*WDT 
          ENDDO
        ENDDO
      ENDIF
C 
      IF(IDIFFHEAT.NE.0) THEN
            
        AKTW     = CC*AKTT*WDT
        AKDW     = DDIFUS*WDT
        
        AKDARCYW = DDARCY*WDT
        DO 405 I=1,NCV
          H2TWI = H(I)*AKTW
          H2WI  = H(I)*WDT
          H2PI  = H(I)*AKDARCYW
          DO 405 J=1,NCV
            PJX = PJ(1,I)*PJ(1,J)
            PJY = PJ(2,I)*PJ(2,J)
            PJZ = PJ(3,I)*PJ(3,J)
            COEFFV = 0.D0
            IF(ICONV.GT.0) THEN
              COEFFV=VCONV(1)*PJ(1,J)+VCONV(2)*PJ(2,J)+VCONV(3)*PJ(3,J)
            ENDIF

            SKEM(I,J) = SKEM(I,J) + H2TWI*H(J)
            IF(IFORM.EQ.2) THEN
              SKED(I,J) = SKED(I,J) + (PJX+PJY+PJZ)*AKDW+H2WI*COEFFV
            ELSE
              SKED(I,J) = SKED(I,J) + (PJX+PJY+PJZ)*AKDW
              SKEP(I,J) = SKEP(I,J) - H2PI*(GRADC(1)*PJ(1,J)+
     1                  GRADC(2)*PJ(2,J)+GRADC(3)*PJ(3,J))
            ENDIF
  405   CONTINUE
      ENDIF
C
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
C
C     END LOOP OVER GAUSS POINTS
C-----KRAJ PETLJE PO GAUSOVIM TACKAMA ----------
C
      IF(IDARCY.NE.0) THEN
        IF(ICONVV.NE.0) THEN
          DO I=1,NCV
            DO J=1,NCV
              F21(I) = F21(I) - SKE(I,J)*T21(J)
            ENDDO
          ENDDO
        ENDIF
        
        IF(IDIFFHEAT.NE.0) THEN
          DO 430 I=1,NCV
            II=NCV+I
            DO 430 J=1,NCV
              JJ=NCV+J
              IF(IFORM.EQ.2) THEN
                SKE(II,JJ)= SKE(II,JJ)+SKEM(I,J)+SKED(I,J)
                F21(II)   = F21(II)   -SKEM(I,J)*(T21(JJ)-T210(JJ))-
     1                      SKED(I,J)*T21(JJ)
              ELSE
                SKE(II,JJ) = SKE(II,JJ)+SKEM(I,J)+SKED(I,J)
                SKE(II,J)  = SKE(II,J) +SKEP(I,J)
                F21(II)    = F21(II)-SKEM(I,J)*(T21(JJ)-T210(JJ))-
     1                       SKED(I,J)*T21(JJ)-SKEP(I,J)*T21(J)
              ENDIF
  430     CONTINUE
        ENDIF
C
C       FLUX USLED ZADATIH BRZINA NA POVRSINI
C
        IF(ICONTOUR.EQ.0) GO TO 149
        CALL CLEAR(PLOCAL,8)
        DO 330 NPOV=1,6
        IF(ILOC(NPOV).LT.4) GO TO 330
        POVRS=0.D0
C
CS      PETLJA PO GAUSOVIM TACKAMA       
        IF(NPOV.GT.2) GO TO 545
        KFIX=1
        NGXP=NGAUSY
        NGYP=NGAUSZ
        R=1.
        IF(NPOV.EQ.2) R=-1.
        GO TO 560
C
  545   IF(NPOV.GT.4) GO TO 550
        KFIX=2
        NGXP=NGAUSX
        NGYP=NGAUSZ
        S=1.
        IF(NPOV.EQ.4) S=-1.
        GO TO 560
C
  550   NGXP=NGAUSX
        NGYP=NGAUSY
        KFIX=3
        T=1.
        IF(NPOV.EQ.6) T=-1.
C
  560   DO 510 NGX=1,NGXP
        JR=NREF(NGXP) + NGX
        XX = XG(JR)
        WX=WGT(JR)
        DO 510 NGY=1,NGYP
        JS=NREF(NGYP) + NGY
        YY = XG(JS)
        WY=WGT(JS)
        GO TO (571,572,573),KFIX
  571   S=XX
        T=YY
        GO TO 575
  572   R=XX
        T=YY
        GO TO 575
  573   R=XX
        S=YY
  575   WT=WX*WY
C
        CALL JACT(R,S,T,NEL,KFIX)
C
        WDT=WT*DET
        POVRS=POVRS+WDT
        DO K=1,8
           PLOCAL(K)=PLOCAL(K)+H(K)*VLOCAL(K)*WDT
        ENDDO
        
  510   CONTINUE                        
  330   CONTINUE
        DO K=1,8
           F21(K)=F21(K)+PLOCAL(K)
        ENDDO        
        GO TO 149
      ENDIF
C
      IF (INDVEL .EQ. 1) GO TO 200
      IF(NSTAC.EQ.0) GO TO 253
      DO 105 K=1,MEL3D
  105 EL(K)=EL(K)/DT
  253 IF(INDSK.EQ.0.AND.NELZAD.EQ.0) GO TO 140
      DO 115 K=1,MEL3D
  115 HP(K)=HP(K)+EL(K)
  140 K=0
      DO 121 I=1,NCV
      DO 120 J=I,NCV
      K=K+1
      SKE(I,J)=EL(K)
      SKE(J,I)=SKE(I,J)
  120 CONTINUE
  121 CONTINUE
CE  CORECTION OF RIGHT-SIDE VECTOR AFTER FIRST PASS
      IF(LINTE.EQ.0) GO TO 123
      DO 122  I=1,NCV
      IF(LM(I).EQ.0) GO TO 122
      DO 124  J=1,NCV
      IF(LM(J).EQ.0) GO TO 124
      F21(I)= F21(I) - SKE(I,J)*T212(J)
  124 CONTINUE
  122 CONTINUE
CE RIGHT-SIDE VECTOR : EL*T210 FOR LINEAR TRANSIENT PROBLEMS
  123 IF(LINTE.EQ.1) GO TO 141
      DO 132  I=1,NCV
      IF(LM(I).EQ.0) GO TO 132
      DO 134  J=1,NCV
      IF(LM(J).EQ.0) GO TO 134
      F21(I)= F21(I) + SKE(I,J)*T210(J)
  134 CONTINUE
  132 CONTINUE
  141 CONTINUE
      MILOS=1
	IF(MILOS.EQ.1) GO TO 149
C     CORRECT RIGHT-HAND SIDE FOR PRESCRIBED VALUES AT NODES
      IF(NELZAD.EQ.0) GO TO 149
	  DO 148 I=1,NCV
	  IF(LM(I).EQ.0) GO TO 148
	  DO J=1,NCV
          IF(LMZADA(J).EQ.1)F21(I)=F21(I)-SKE(I,J)*ZADLOCAL(J)
	  ENDDO
  148 CONTINUE
  149 CONTINUE
C
      IF(IDARCY.NE.0) THEN
        DO I=1,NDES
          DO J=1,NDES
            SKE(I,J) = AEFF*SKE(I,J)
          ENDDO
          F21(I) = AEFF * F21(I)
        ENDDO
      ENDIF
C
      IF(INDFLUX.EQ.1) GO TO 137  
C
      IF(NHP.EQ.0.AND.NTOK.EQ.0.AND.NQP.EQ.0.AND.NHR.EQ.0) GO TO 135
CE    INTEGRALS OVER SURFACES OF ELEMENT
      CALL INTAB3(A(LNG3D),A(LNELG3),A(LNEL3D),A(LNTAHP),A(LHP),A(LHK),
     1A(LSKE),A(LNTAHR),A(LHR),A(LFOHR),NREF,XG,WGT)
CE  INSERTING MATRIX HP AND VECTOR F21 INTO SYSTEM
  135 continue  
C
      IF(IMUMPS.EQ.0) THEN    
        IF(IDARCY.EQ.0) THEN  
          CALL MATSTE (A(LSK),A(LMAXA),A(LF),HP,F21,LM,NCV,INDSK)
  	  ELSE
	    CALL ADDSTF(A(LALEVO),A(LSILE),A(LDESNO),SKE,F21,A(LMAXA),LM,
     1              NDES,1) 
        ENDIF
      ELSE
#if(MUMPS_CLUSTER)
c	 CALL MUMPSLEFT(SKEF,NEL,ID,NDES,NBREL,NDIM,NETIP,NDIMID)
#else
        CALL sparseassembler_addelemmatrix(NDES,LM,SKE)
#endif
        CALL SPAKDE(A(LSILE),F21,LM,NDES,JEDN) 
      ENDIF 
      
  137 CONTINUE
  200 CONTINUE
C  
C     END LOOP OVER ELEMENTS
C  
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTEB3(IDT,CORD,TCONS,NTAKV,NTACV,TT1,TT2,NEL,NQ,MATV,
     1 EL,HP,HK,SKE,TT0,IBFK,FAKP,HR,MATERP,AMATF,
     1 ZADATV0,ZADATV1,ZADATV2,NZADJ)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
CE  MAIN PROGRAM TO PERFORM INTEGRATION OVER V OF ELEMENT
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA3/ LNEL3D,LMAT3D,LNQ3D,LITG3D,LIP3CV,LNG3D,LNELG3,
     1LEL,LHP,LHK,LSKE,LDEL,LDEHP,LDEHK,LHR
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON/REAL3D/ CK(21,3),P(3,21),PJ(3,21),XJ(3,3),H(21),T21(21),
     1AK,CC,HH,QQ,DET,DET1,F21(21),T212(21),T210(21),HHP
      COMMON /SRPSKI/ ISRPS
      COMMON/FLUXKC/INDFLUXKC
	COMMON/KONVERNDS/CONCT,CONCTOUT,KONV
C
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ            
	common/elemmodels/modelel(20),ngele              
      COMMON/DIFINOUT/VOLIN,VOLOUT,CINLET0,COUTLET0,CINLET,COUTLET,
     1                WEIGHTMOL,Nzadin,NZADELIN,Nzadout,Lnodin,Lelnelin,
     2                Lnodout,IINLET	    
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP 
C
      DIMENSION IDT(*),CORD(NPT,*),TCONS(*),NTAKV(*),NTACV(*),
     1NEL(NE3D,*),MATV(*),NQ(*),EL(*),HP(*),HK(*),SKE(NBRE,*),
     2TT1(*),TT2(*),TT0(*),IBFK(NMATT,*),FAKP(NMATT,*),TBK(3),HR(*)
      DIMENSION XG(15),WGT(15),NREF(6),IG3D8(8)
      DIMENSION MATERP(NUMMAT),AMATF(NUMMAT,2,*)
	DIMENSION ZADATV0(NZADP),ZADATV1(NZADP),ZADATV2(NZADP),
	1          NZADJ(NZADP),ZADLOCAL(27),LMZADA(27)
C
      DATA IG3D8/7,3,6,2,8,4,5,1/
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
      IF(IZIP.EQ.2) GO TO 15
      IF(NQE.NE.1) GO TO 15
      CALL TABF(A(LQEFN),A(LNTAQE),NQE,NQE,VREME,QQ,NTA,IND)
      IF(IND.EQ.0) GO TO 15
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) NQE,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) NQE,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPL. IZVOR-VREME,  BR.=',I3/
     11X,'ARGUMENT VREME= ',F10.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME = ',1PD12.4)
      STOP
CE LOOP OVER ELEMENTS 
   15 DO 200 NLM = 1,NE3D
c   
      IF (ITOR .EQ. 3)  WRITE(3,5100) NLM
 5100 FORMAT(' ELEMENT....................',I5)
      IF (INDVEL .EQ. 1) GO TO 300
      DO 20 I = 1,MEL3D
C      IF(INDSK.EQ.0) GO TO 21
      HP(I) = 0.
      HK(I) = 0.
      HR(I) = 0.
C   21 IF(NSTAC.EQ.0) GO TO 20
      EL(I) = 0.
   20 CONTINUE
      DO 17 I=1,21
      T21(I) = 0.
      T212(I) = 0.
      T210(I) = 0.
      LM(I)=0
      ZADLOCAL(I)=0.D0
	LMZADA(I)=0
   17 F21(I)=0.
C     IF(NSTAC.EQ.0.AND.NZADP.EQ.0) GO TO 23
      DO 19 I=1,NBRE
      DO 18 J=1,NBRE
   18 SKE(I,J)=0.
   19 CONTINUE
   23 IF(NMAT3D.GT.1.OR.INDIFFUS.EQ.1) MAT3D=MATV(NLM)
      IQE=0
      IF(NQE.GT.0) IQE=NQ(NLM)
      ARG=0.
	IF(indiffus.EQ.1) THEN
	  CC=1.D0
	  GO TO 30 
	ENDIF
      IF(NSTAC.EQ.0.OR.KONC.EQ.1) GO TO 25
      CALL TABF(A(LTABC),A(LNTAC),MAT3D,NMATT,ARG,CC,NTA,IND)
   25 IF(IANIZ.EQ.0) GO TO 188
      FAX=FAKP(MAT3D,1)
      FAY=FAKP(MAT3D,2)
      FAZ=FAKP(MAT3D,3)
  188 IBX=IBFK(MAT3D,1)
      IBY=IBFK(MAT3D,2)
      IBZ=IBFK(MAT3D,3)
      IF(KONK.EQ.1) GO TO 30
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,ARG,AKX,NTA,IND)
      IF(IBY.GT.0.AND.IBZ.GT.0) GO TO 180
      IF(IANIZ.EQ.0) GO TO 189
      AKZ=AKX*FAZ
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 30
  189 AKY=AKX
      AKZ=AKX
      GO TO 30
  180 CALL TABF(A(LTABK),A(LNTAKV),IBY,NTABK,ARG,AKY,NTA,IND)
      CALL TABF(A(LTABK),A(LNTAKV),IBZ,NTABK,ARG,AKZ,NTA,IND)
   30 IF(IQE.EQ.0.OR.NQE.EQ.1) GO TO 44
      CALL TABF(A(LQEFN),A(LNTAQE),IQE,NQE,VREME,QQ,NTA,IND)
      IF(IND.EQ.0) GO TO 44
      WRITE(3,2000) IQE,VREME
      STOP
   44 IF(IZIP.NE.2.OR.MAXTQE.GT.1) GO TO 40
      CALL TABF(A(LQEFN),A(LNTAQE),IQE,NQE,ARG,QQ,NTA,IND)
CE  TEMPERATURE AT NODES  VECTOR
   40 NCV=0
      NND9=0
	NELZAD=0
      DO 50 I=1,NBRE
      IF(I.LE.8) GO TO 41
      IDEL(I-8)=0
      IF(NEL(NLM,I).EQ.0) GO TO 50
      NND9=NND9+1
      NOD9(NND9)=I
      IDEL(I-8)=1
   41 J=NEL(NLM,I)
      JJ=IDT(J)
      NCV=NCV+1
      IF(NZADP.GT.0) THEN
	  DO KK=1,NZADP
	    IF(NZADJ(KK).EQ.J) THEN
             NELZAD=NELZAD+1
             LMZADA(NCV)=1
	       ZADLOCAL(NCV)=ZADATV1(KK)
	       GO TO 244
	    ENDIF
	  ENDDO
	ENDIF
c      LM(NCV)=J
  244 LM(NCV)=JJ
C      IF(NTCONS.GT.0) LM(NCV)=IDT(J)
      IF(NTCONS.EQ.0) GO TO 45
      IF(IDT(J).LE.0) GO TO 42
      IF(NSTAC.EQ.0.AND.LINTE.EQ.0) GO TO 50
      K=IDT(J)
      T21(NCV)=TT1(K)
      T212(NCV)=TT2(K)
      T210(NCV) = TT0(K)
      GO TO 50
   42 T21(NCV)=TCONS(J)
      T212(NCV)=TCONS(J)
      T210(NCV) =TCONS(J)
      GO TO 50
   45 CONTINUE
      IF (NSTAC.GT.0.OR.LINTE.GT.0) THEN
         IF(JJ.GT.0) THEN
           T21(NCV)=TT1(JJ)
           T212(NCV)=TT2(JJ)
	     IF(ITER.EQ.0)T212(NCV)=0.D0
           T210(NCV)=TT0(JJ)
	   ELSE
	   IF(LMZADA(NCV).EQ.1) THEN
           T21(NCV)=ZADATV1(KK)
           T212(NCV)=ZADATV2(KK)
           T210(NCV)=ZADATV0(KK)
         ENDIF
	   ENDIF
	ENDIF
   50 CONTINUE
  300 IELX=NCV
CE  NODE COORDINATES OF ELEMENTS MATRIX
      K=0
      DO 60 I=1,NBRE
      IF(NEL(NLM,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM,I)
      DO 55 J=1,3
   55 CK(K,J)=CORD(KK,J)
   60 CONTINUE
CE GAUSS POINTS  LOOP
      NGAUSC=0
      DO 102 NGX=1,NGAUSX
      JR=NREF(NGAUSX) + NGX
      R = XG(JR)
      DO 101 NGY=1,NGAUSY
      JS=NREF(NGAUSY) + NGY
      S = XG(JS)
      DO 100 NGZ=1,NGAUSZ
      NGAUSC=NGAUSC+1
      JT=NREF(NGAUSZ) + NGZ
      T = XG(JT)
      WT=WGT(JR)*WGT(JS)*WGT(JT)
      CALL JACT(R,S,T,NEL,0)
CE  VELUES OF MATERIAL CONSTANTS AT GAUSS POINTS
CE    VELOCITIES CALCULATION
      IF (INDVEL .EQ. 1) THEN
      VX = 0.0
      VY = 0.0
      VZ = 0.0
      DO 304 NV=1,NCV
      KK=NEL(NLM,NV)
      KK = LF +KK-1
      VX=VX-PJ(1,NV)*A(KK)
      VY=VY-PJ(2,NV)*A(KK)
      VZ=VZ-PJ(3,NV)*A(KK)
  304 CONTINUE
      WRITE (3,9990) NGX,NGY, NGZ, VX,VY,VZ
 9990 FORMAT ('   NG(',I1,',',I1,',',I1,')     VX = ',F12.6,
     *'  VY = ',F12.6,'  VZ = ',F12.6)
      GO TO 100
      ENDIF
 
C      IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 81
CE  TEMPERATURE AT GAUSS POINT
      TEMP=0.
      DO 65 I=1,NCV
   65 TEMP=TEMP+H(I)*T21(I)
      if(indiffus.EQ.1) go to 70
      IF(NSTAC.EQ.0.OR.KONC.EQ.0) GO TO 70
      IF(NTACV(MAT3D).EQ.0) GO TO 67
      CALL TABF(A(LTABC),A(LNTACV),MAT3D,NMATT,TEMP,CC,NTA,IND)
      IF(IND.EQ.0) GO TO 70
      IF(ISRPS.EQ.0)
     *   WRITE(3,2005) MAT3D,TEMP
      IF(ISRPS.EQ.1)
     *   WRITE(3,6005) MAT3D,TEMP
 2005 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA SPEC. TOPLOTA - TEMP.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6005 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SPECIFIC HEAT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
   67 CALL ANALCF(MAT3D,TEMP,CC,A(LGUSM))
   70 CONTINUE
      if(indiffus.EQ.1) then
	  tempa=dabs(temp)
        call tabdiff(MATERP,AMATF,MAT3D,TEMPa,ddifus,IND)
	  akx=ddifus
C	    
	  IF(IND.GT.0) GO TO 22
        IF(IANIZ.EQ.0)THEN
	    AKY=AKX
          AKZ=AKX
        ELSE
          AKZ=AKX*FAZ
          AKY=AKX*FAY
          AKX=AKX*FAX
	  ENDIF
	  GO TO 80
	endif
      IF(KONK.EQ.0) GO TO 80
      IF(IBX.EQ.0.AND.IBY.EQ.0.AND.IBZ.EQ.0) GO TO 77
      CALL TABF(A(LTABK),A(LNTAKV),IBX,NTABK,TEMP,AKX,NTA,IND)
      IF(IND.GT.0) GO TO 22
      IF(IBY.GT.0.AND.IBZ.GT.0) GO TO 181
      IF(IANIZ.EQ.0) GO TO 186
      AKZ=AKX*FAZ
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 182
  186 AKY=AKX
      AKZ=AKX
      GO TO 182
  181 CALL TABF(A(LTABK),A(LNTAKV),IBY,NTABK,TEMP,AKY,NTA,IND)
      IF(IND.GT.0) GO TO 22
      CALL TABF(A(LTABK),A(LNTAKV),IBZ,NTABK,TEMP,AKZ,NTA,IND)
  182 IF(IND.EQ.0) GO TO 80
   22 CONTINUE
      IF(ISRPS.EQ.0)
     *WRITE(3,2001)  MAT3D,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6001)  MAT3D,TEMP
 2001 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. PROVODJENJA - TOPL.   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6001 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'DIFFUSION COEFICIENT - CONCENTRATION,  NO. =',I5/
     11X,'CONCENTRARION,  CONC =',1PD12.4/
     21X,'S T O P'//' CHECK: INPUT DATA FOR DIFFUSION COEFFICIENT'/
     38X,'AND BOUNDARY CONDITIONS FOR INLET AND OUTLET RESERVOIRS')
      STOP
   77 CALL ANALKF(MAT3D,TEMP,AKX,AKY,AKZ,A(LTOPM),A(LTMNM))
      IF(AKY.GT.0.AND.AKZ.GT.0) GO TO 80
      IF(IANIZ.EQ.0) GO TO 811
      AKZ=AKX*FAZ
      AKY=AKX*FAY
      AKX=AKX*FAX
      GO TO 80
  811 CONTINUE
	AKY=AKX
      AKZ=AKX
   80 CONTINUE
      IF(IZIP.NE.2.OR.MAXTQE.EQ.1) GO TO 81
      CALL TABF(A(LQEFN),A(LNTAQE),IQE,NQE,TEMP,QQ,NTA,IND)
      IF(IND.EQ.0) GO TO 81
      IF(ISRPS.EQ.0)
     *WRITE(3,2011) IQE,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6011) IQE,TEMP
 2011 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TOPLOTNOG IZVORA (PONORA)   BR.=',I3/
     11X,'ARGUMENT TEMP.  TEMP= ',D12.4)
 6011 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE HEAT SOURCE - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE,  TEMP =',1PD12.4)
      STOP
CE  ELEMENT MATRIXES
   81 WDT=WT*DET1
CE  CALCULATION OF CONDUCTION MATRIX AND SPECIFIC HEAT MATRIX OF ELEMENT
      K=0
      DO 85 I=1,NCV
      DO 83 J=I,NCV
      K=K+1
      IF(NSTAC.EQ.0) GO TO 87
      HH = H(I)*H(J)*WDT
      EL(K)=EL(K)+CC*HH
   87 IF(INDSK.EQ.0) GO TO 83
      PJX=PJ(1,I)*PJ(1,J)
      PJY=PJ(2,I)*PJ(2,J)
      PJZ=PJ(3,I)*PJ(3,J)
      HP(K) = HP(K) +(AKX*PJX+AKY*PJY+AKZ*PJZ)*WDT
   83 CONTINUE
      IF(IQE.EQ.0) GO TO 85
CE  CALCULATION OF RIGHT-SIDE VECTOR
      F21(I)=F21(I)+H(I)*WDT*QQ
   85 CONTINUE
      IF(LINTE.EQ.0.AND.NELZAD.EQ.0) GO TO 100
      TBK(1)=0.
      TBK(2)=0.
      TBK(3)=0.
      DO 151 J=1,3
      DO 150 I=1,NCV
  150 TBK(J)=TBK(J)+PJ(J,I)*T21(I)
  151 CONTINUE
      TBK(1)=AKX*TBK(1)
      TBK(2)=AKY*TBK(2)
      TBK(3)=AKZ*TBK(3)
      DO 152 I=1,NCV
      DO 153 J=1,3
  153 F21(I)=F21(I)-(PJ(J,I)*TBK(J))*WDT
  152 CONTINUE
C
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
C
C     END LOOP OVER GAUSS POINTS
C
      IF (INDVEL .EQ. 1) GO TO 200
      IF(NSTAC.EQ.0) GO TO 253
      DO 105 K=1,MEL3D
  105 EL(K)=EL(K)/DT
  253 IF(INDSK.EQ.0.AND.NELZAD.EQ.0) GO TO 140
      DO 115 K=1,MEL3D
  115 HP(K)=HP(K)+EL(K)
  140 K=0
      DO 121 I=1,NCV
      DO 120 J=I,NCV
      K=K+1
      SKE(I,J)=EL(K)
      SKE(J,I)=SKE(I,J)
  120 CONTINUE
  121 CONTINUE
CE  CORECTION OF RIGHT-SIDE VECTOR AFTER FIRST PASS
      IF(LINTE.EQ.0) GO TO 123
      DO 122  I=1,NCV
      IF(LM(I).EQ.0) GO TO 122
      DO 124  J=1,NCV
      IF(LM(J).EQ.0) GO TO 124
      F21(I)= F21(I) - SKE(I,J)*T212(J)
  124 CONTINUE
  122 CONTINUE
CE RIGHT-SIDE VECTOR : EL*T210 FOR LINEAR TRANSIENT PROBLEMS
  123 IF(LINTE.EQ.1) GO TO 141
      DO 132  I=1,NCV
      IF(LM(I).EQ.0) GO TO 132
      DO 134  J=1,NCV
      IF(LM(J).EQ.0) GO TO 134
      F21(I)= F21(I) + SKE(I,J)*T210(J)
  134 CONTINUE
  132 CONTINUE
  141 CONTINUE
      MILOS=1
	IF(MILOS.EQ.1) GO TO 149
C     CORRECT RIGHT-HAND SIDE FOR PRESCRIBED VALUES AT NODES
      IF(NELZAD.EQ.0) GO TO 149
	  DO 148 I=1,NCV
	  IF(LM(I).EQ.0) GO TO 148
	  DO J=1,NCV
          IF(LMZADA(J).EQ.1)F21(I)=F21(I)-SKE(I,J)*ZADLOCAL(J)
	  ENDDO
  148 CONTINUE
  149 IF(NHP.EQ.0.AND.NTOK.EQ.0.AND.NQP.EQ.0.AND.NHR.EQ.0) GO TO 135
CE    INTEGRALS OVER SURFACES OF ELEMENT
      CALL INTAB3(A(LNG3D),A(LNELG3),A(LNEL3D),A(LNTAHP),A(LHP),A(LHK),
     1A(LSKE),A(LNTAHR),A(LHR),A(LFOHR),NREF,XG,WGT)
CE  INSERTING MATRIX HP AND VECTOR F21 INTO SYSTEM
  135 continue  
C      
      CALL MATSTE (A(LSK),A(LMAXA),A(LF),HP,F21,LM,NCV,INDSK)
  200 CONTINUE
C  
C     END LOOP OVER ELEMENTS
C  
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTAB3(NG3D,NELG,NEL,NTA HP,HP,HK,SKE,NTAHR,HR,FOHR,
     1NREF,XG,WGT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
CE  PROGRAM TO PERFORM INTEGRATION OVER 3D ELEMENT SURFACES
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA3/ LNEL3D,LMAT3D,LNQ3D,LITG3D,LIP3CV,LNG3D,LNELG3,
     1LEL,LHP,LHK,LSKE,LDEL,LDEHP,LDEHK,LHR
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON/REAL3D/ CK(21,3),P(3,21),PJ(3,21),XJ(3,3),H(21),T21(21),
     1AK,CC,HH,QQ,DET,DET1,F21(21),T212(21),T210(21),HHP
      COMMON /SRPSKI/ ISRPS
      DIMENSION NG3D(*),NELG(5,6,*),NEL(NE3D,*),NTAHP(*),HR(*),
     1HP(*),HK(*),SKE(NBRE,*),NREF(*),XG(*),WGT(*),FOHR(*),NTAHR(*)
      IVR=NG3D(NLM)
      IF(IVR.EQ.0) RETURN
CE  CE LOOP OVER BORDER ELEMENT SURFACES
      IHPS = 0
      IHRS = 0
      DO 200 NPOV=1,6
      IFL=NELG(1,NPOV,IVR)
      IHP=NELG(2,NPOV,IVR)
      IHR=NELG(4,NPOV,IVR)
      IF(IFL.EQ.0.AND.IHP.EQ.0.AND.IHR.EQ.0) GO TO 200
      ITOK=NELG(3,NPOV,IVR)
      IFO=NELG(5,NPOV,IVR)
      IF(IHP.EQ.0) GO TO 5
      IHPS = 1
      IF(NTAHP(IHP).GT.1) GO TO 5
      CALL TABF(A(LHPFN),A(LNTAHP),IHP,NHP,TEMP,HHP,NTA,IND)
    5 IF(IHR.EQ.0) GO TO 6
      IHRS = 1
      IF(NTAHR(IHR).GT.1) GO TO 6
      CALL TABF(A(LHRFN),A(LNTAHR),IHR,NHR,TEMP,HHR,NTA,IND)
    6 IF(IFL.EQ.0) GO TO 20
      CALL TABF(A(LQPFN),A(LNTAQP),IFL,NQP,VREME,QQP,NTA,IND)
      IF(IND.EQ.0) GO TO 20
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) IFL,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) IFL,VREME
 2000 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA FLUKS-VREME BR.=',I3/
     11X,'ARGUMENT VREME ',D12.4)
 6000 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE SURFACE FLUX - TIME,  No. =',I5/
     11X,'ARGUMENT TIME, TIME =',1PD12.4)
      STOP
   20 IF(ITOK.EQ.0) GO TO 40
      CALL TABF(A(LTOKFN),A(LNTAOK),ITOK,NTOK,VREME,TT,NTA,IND)
      IF(IND.EQ.0) GO TO 40
      IF(ISRPS.EQ.0)
     *WRITE(3,2001) ITOK,VREME
      IF(ISRPS.EQ.1)
     *WRITE(3,6001) ITOK,VREME
 2001 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA TEMP. OKOLINE-VREME BR.=',I3/
     11X,'ARGUMENT VREME ',D12.4)
 6001 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE ENVIRONMENT TEMPERATURE - TIME,  No. =',I5/
     11X,'ARGUMENT TIME, TIME =',1PD12.4)
      STOP
CE  GAUSS POINTS LOOP
   40 IF(NPOV.GT.2) GO TO 45
      KFIX=1
      NGXP=NGAUSY
      NGYP=NGAUSZ
      R=1.
      IF(NPOV.EQ.2) R=-1.
      GO TO 60
   45 IF(NPOV.GT.4) GO TO 50
      KFIX=2
      NGXP=NGAUSX
      NGYP=NGAUSZ
      S=1.
      IF(NPOV.EQ.4) S=-1.
      GO TO 60
   50 NGXP=NGAUSX
      NGYP=NGAUSY
      KFIX=3
      T=1.
      IF(NPOV.EQ.6) T=-1.
   60 DO 100 NGX=1,NGXP
      JR=NREF(NGXP) + NGX
      XX = XG(JR)
      WX=WGT(JR)
      DO 100 NGY=1,NGYP
      JS=NREF(NGYP) + NGY
      YY = XG(JS)
      WY=WGT(JS)
      GO TO (71,72,73),KFIX
   71 S=XX
      T=YY
      GO TO 75
   72 R=XX
      T=YY
      GO TO 75
   73 R=XX
      S=YY
   75 WT=WX*WY
      CALL JACT(R,S,T,NEL,KFIX)
      WDT=WT*DET
      IF(LINTE.EQ.0) GO TO 81
      TEMP=0.
      DO 65 I=1,NCV
   65 TEMP=TEMP+H(I)*T21(I)
      IF(IHP.EQ.0) GO TO 80
      IF((NHP.EQ.1.AND.MAXTHP.EQ.1).OR.NTAHP(IHP).EQ.1) GO TO 80
      CALL TABF(A(LHPFN),A(LNTAHP),IHP,NHP,TEMP,HHP,NTA,IND)
      IF(IND.EQ.0) GO TO 80
      IF(ISRPS.EQ.0)
     *WRITE(3,2002) IHP,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6002) IHP,TEMP
 2002 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. PRELAZA TOPL. BR.=',I3/
     11X,'ARGUMENT TEMP= ',D12.4)
 6002 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE CONVECTION COEFICIENT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE, TEMP =',1PD12.4)
      STOP
   80 IF(IHR.EQ.0) GO TO 81
      IF((NHR.EQ.1.AND.MAXTHR.EQ.1).OR.NTAHR(IHR).EQ.1) GO TO 81
      CALL TABF(A(LHRFN),A(LNTAHR),IHR,NHR,TEMP,HHR,NTA,IND)
      IF(IND.EQ.0) GO TO 81
      IF(ISRPS.EQ.0)
     *WRITE(3,2003) IHR,TEMP
      IF(ISRPS.EQ.1)
     *WRITE(3,6003) IHR,TEMP
 2003 FORMAT(//1X,'ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     11X,'KRIVA KOEF. EMISIVNOSTI BR.=',I3/
     11X,'ARGUMENT TEMP= ',D12.4)
 6003 FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     11X,'CURVE RADIATION COEFICIENT - TEMPERATURE,  No. =',I5/
     11X,'ARGUMENT TEMPERATURE, TEMP =',1PD12.4)
      STOP
   81 K=0
      IF(IFL.GT.0) WQP=WDT*QQP
      IF(IHP.GT.0) WHP=WDT*HHP
      IF(ITOK.EQ.0) GO TO 97
      IF(IHR.EQ.0) GO TO 82
      FOR=1.
      IF(NFO.EQ.0) GO TO 79
      FOR=FOHR(IHR)
   79 HRR=HHR*FOR*SBC
      HKR=HRR*(TT**2+TEMP**2)*(TT+TEMP)
      WHR=WDT*HKR
CE CALCULATION OF TEMPERATURE DIFERENCE AT BORDER CONVECTION LINE
   82 TTT=0.
      IF(LINTE.EQ.0) GO TO 98
      DO 88 I=1,NCV
   88 TTT=TTT+H(I)*(TT-T21(I))
   98 IF(LINTE.EQ.1) GO TO 97
      DO 87 I=1,NCV
   87 TTT=TTT+H(I)*TT
   97 K=0
      KK=0
      DO 86 I=1,NCV
      IF(LINTE.EQ.0) GO TO 83
      IF(IHR.EQ.0) GO TO 83
      IF(INDSK.EQ.0) GO TO 91
      DO 92 J=I,NCV
      KK=KK+1
      HR(KK)=HR(KK) + H(I)*H(J)*WHR
   92 CONTINUE
   91 F21(I)=F21(I) + H(I)*WHR*TTT
   83 IF(IHP.EQ.0) GO TO 85
      IF(INDSK.EQ.0) GO TO 89
      DO 84 J=I,NCV
      K=K+1
      HK(K)=HK(K) + H(I)*H(J)*WHP
   84 CONTINUE
   89 F21(I)=F21(I) + H(I)*WHP*TTT
   85 IF(IFL.EQ.0) GO TO 86
      F21(I)=F21(I) + H(I)*WQP
   86 CONTINUE
  100 CONTINUE
  200 CONTINUE
CE  CORECTION OF LEFT-SIDE MATRIX
      IF(INDSK.EQ.0) GO TO 300
      IF(IHPS.EQ.0) GO TO 250
      DO 105 I=1,MEL3D
  105 HP(I) = HP(I) + HK(I)
  250 IF(IHRS.EQ.0) GO TO 300
      DO 115 I=1,MEL3D
  115 HP(I) = HP(I) + HR(I)
  300 RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE JACT(R,S,T,NEL,KFIX)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
CE    PROGRAM TO FORM JACOBIAN AND JACOBIAN DETERMINANT AT POINT R,S,T
      COMMON/REAL3D/ CK(21,3),P(3,21),PJ(3,21),XJ(3,3),H(21),T21(21),
     1AK,CC,HH,QQ,DET,DET1,F21(21),T212(21),T210(21),HHP
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON /SRPSKI/ ISRPS
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ             
	COMMON/NORMALS/ENSX,ENSY,ENSZ
      DIMENSION NEL(NE3D,*),IPERM(8),LE(3),ME(3)
      DATA IPERM/2,3,4,1,6,7,8,5/
      RP=1.0+R
      SP=1.0+S
      TP=1.0+T
      RM=1.0-R
      TM=1.0-T
      SM=1.0-S
      RR=1.0-R*R
      SS=1.0-S*S
      TT=1.0-T*T
      DO 82 I=1,21
      H(I)=0.
      DO 82 J=1,3
   82 P(J,I)=0.
CE    INTERPOLATION FUNCTIONS AND DERIVATIVES
CE    FIRST 4 NODES
      H(1)=0.125*RP*SP*TP
      H(2)=0.125*RM*SP*TP
      H(3)=0.125*RM*SM*TP
      H(4)=0.125*RP*SM*TP
      H(5)=0.125*RP*SP*TM
      H(6)=0.125*RM*SP*TM
      H(7)=0.125*RM*SM*TM
      H(8)=0.125*RP*SM*TM
      P(1,1)=0.125*SP*TP
      P(1,2)=-P(1,1)
      P(1,3)=-0.125*SM*TP
      P(1,4)=-P(1,3)
      P(1,5)=0.125*SP*TM
      P(1,6)=-P(1,5)
      P(1,7)=-0.125*SM*TM
      P(1,8)=-P(1,7)
      P(2,1)=0.125*RP*TP
      P(2,2)=0.125*RM*TP
      P(2,3)=-P(2,2)
      P(2,4)=-P(2,1)
      P(2,5)=0.125*RP*TM
      P(2,6)=0.125*RM*TM
      P(2,7)=-P(2,6)
      P(2,8)=-P(2,5)
      P(3,1)=0.125*RP*SP
      P(3,2)=0.125*RM*SP
      P(3,3)=0.125*RM*SM
      P(3,4)=0.125*RP*SM
      P(3,5)=-P(3,1)
      P(3,6)=-P(3,2)
      P(3,7)=-P(3,3)
      P(3,8)=-P(3,4)
      IF (IELX.EQ.8) GO TO 50
CE     DEGREES OF FREADOM FOR NODES OVER 8
      I=0
    2 I=I+1
      IF (I.GT.NND9) GO TO 30
      NN=NOD9(I)-8
      GO TO (9,10,11,12,13,14,15,16,17,18,19,20,21),NN
    9 H(9)=0.25*RR*SP*TP
      P(1,9)=-0.50*R*SP*TP
      P(2,9)=0.25*RR*TP
      P(3,9)=0.25*RR*SP
      GO TO 2
   10 H(10)=0.25*RM*SS*TP
      P(1,10)=-0.25*SS*TP
      P(2,10)=-0.50*RM*S*TP
      P(3,10)=0.25*RM*SS
      GO TO 2
   11 H(11)=0.25*RR*SM*TP
      P(1,11)=-0.50*R*SM*TP
      P(2,11)=-0.25*RR*TP
      P(3,11)=0.25*RR*SM
      GO TO 2
   12 H(12)=0.25*RP*SS*TP
      P(1,12)=0.25*SS*TP
      P(2,12)=-0.50*RP*S*TP
      P(3,12)=0.25*RP*SS
      GO TO 2
   13 H(13)=0.25*RR*SP*TM
      P(1,13)=-0.50*R*SP*TM
      P(2,13)=0.25*RR*TM
      P(3,13)=-0.25*RR*SP
      GO TO 2
   14 H(14)=0.25*RM*SS*TM
      P(1,14)=-0.25*SS*TM
      P(2,14)=-0.50*RM*S*TM
      P(3,14)=-0.25*RM*SS
      GO TO 2
   15 H(15)=0.25*RR*SM*TM
      P(1,15)=-0.50*R*SM*TM
      P(2,15)=-0.25*RR*TM
      P(3,15)=-0.25*RR*SM
      GO TO 2
   16 H(16)=0.25*RP*SS*TM
      P(1,16)=0.25*SS*TM
      P(2,16)=-0.50*RP*S*TM
      P(3,16)=-0.25*RP*SS
      GO TO 2
   17 H(17)=0.25*RP*SP*TT
      P(1,17)=0.25*SP*TT
      P(2,17)=0.25*RP*TT
      P(3,17)=-0.50*RP*SP*T
      GO TO 2
   18 H(18)=0.25*RM*SP*TT
      P(1,18)=-0.25*SP*TT
      P(2,18)=0.25*RM*TT
      P(3,18)=-0.50*RM*SP*T
      GO TO 2
   19 H(19)=0.25*RM*SM*TT
      P(1,19)=-0.25*SM*TT
      P(2,19)=-0.25*RM*TT
      P(3,19)=-0.50*RM*SM*T
      GO TO 2
   20 H(20)=0.25*RP*SM*TT
      P(1,20)=0.25*SM*TT
      P(2,20)=-0.25*RP*TT
      P(3,20)=-0.50*RP*SM*T
      GO TO 2
   21 H(21)=RR*SS*TT
      P(1,21)=-2.0*R*SS*TT
      P(2,21)=-2.0*S*RR*TT
      P(3,21)=-2.0*T*RR*SS
      GO TO 2
CE    CORECTION OF FIRST 20 FUNCTIONS IF NODE 21 EXISTS
   30 IN=NOD9(NND9)
      IF(IN.NE.21) GO TO 40
      DO 36 I=1,8
      H(I)=H(I)-0.125*H(21)
      DO 36 J=1,3
   36 P(J,I)=P(J,I)-0.125*P(J,21)
      IF(NND9.EQ.1) GO TO 51
      DO 37 I=1,NND9-1
      IN=NOD9(I)
      H(IN)=H(IN)-0.25*H(21)
      DO 37 J=1,3
   37 P(J,IN)=P(J,IN)-0.25*P(J,21)
CE    CORECTION OF FIRST 8 FUNCTIONS IF NODES OVER 8 EXISTS
   40 IH=0
   41 IH=IH+1
      IF(IH.GT.NND9) GO TO 50
      IN=NOD9(IH)
      IF(IN.GT.16) GO TO 46
      I1=IN-8
      I2=IPERM(I1)
      H(I1)=H(I1)-0.5*H(IN)
      H(I2)=H(I2)-0.5*H(IN)
      H(IH+8)=H(IN)
      DO 45 J=1,3
      P(J,I1)=P(J,I1)-0.5*P(J,IN)
      P(J,I2)=P(J,I2)-0.5*P(J,IN)
   45 P(J,IH+8)=P(J,IN)
      GO TO 41
   46 IF(IN.EQ.21) GO TO 51
      I1=IN-16
      I2=I1+4
      H(I1)=H(I1)-0.5*H(IN)
      H(I2)=H(I2)-0.5*H(IN)
      H(IH+8)=H(IN)
      DO 47 J=1,3
      P(J,I1)=P(J,I1)-0.5*P(J,IN)
      P(J,I2)=P(J,I2)-0.5*P(J,IN)
   47 P(J,IH+8)=P(J,IN)
      GO TO 41
   51 H(NND9+8)=H(21)
      DO 39 J=1,3
   39 P(J,NND9+8)=P(J,21)
CE    JACOBIAN AT POINT R,S,T
   50 DO 61 I=1,3
      DO 61 J=1,3
      XJ(I,J)=0.
      DO 61 KK=1,NCV
      XJ(I,J)=XJ(I,J)+P(I,KK)*CK(KK,J)
   61 CONTINUE
      IF(KFIX.GT.0) GO TO 70
CE     JACOBIAN DETERMINANT AT POINT R,S,T
      CALL MINV(XJ,3,DET1,LE,ME)
      IF (DET1.GT.1.D-15) GO TO 77
      WRITE(3,2000) NLM,KFIX,R,S,T,DET1
      STOP
   77 DO 85 I=1,3
      DO 85 JJ=1,NCV
      PJ(I,JJ)=0.
      DO 85 K=1,3
      PJ(I,JJ)=PJ(I,JJ) + XJ(I,K)*P(K,JJ)
   85 CONTINUE
      RETURN
CE     SURFACE JACOBIAN DETERMINANT
   70 GO TO (71,72,73),KFIX
CE     CONSTANT KSI
   71 GX=XJ(2,2)*XJ(3,3)-XJ(2,3)*XJ(3,2)
      GY=XJ(3,1)*XJ(2,3)-XJ(3,3)*XJ(2,1)
	GZ=XJ(2,1)*XJ(3,2)-XJ(2,2)*XJ(3,1)
C   71 DET=(XJ(2,2)*XJ(3,3)-XJ(2,3)*XJ(3,2))**2+(XJ(3,1)*XJ(2,3)-
C     1XJ(3,3)*XJ(2,1))**2+(XJ(2,1)*XJ(3,2)-XJ(2,2)*XJ(3,1))**2
      GO TO 74
CE     CONSTANT ETA
   72 GX=XJ(1,3)*XJ(3,2)- XJ(1,2)*XJ(3,3)
      GY=XJ(1,1)*XJ(3,3)-XJ(1,3)*XJ(3,1)
	GZ=XJ(1,2)*XJ(3,1)-XJ(1,1)*XJ(3,2)
C   72 DET=(XJ(1,2)*XJ(3,3)-XJ(1,3)*XJ(3,2))**2+(XJ(1,1)*XJ(3,3)-
C     1XJ(1,3)*XJ(3,1))**2+(XJ(1,1)*XJ(3,2)-XJ(1,2)*XJ(3,1))**2
      GO TO 74
CE     CONSTANT ZETA
   73 GX=XJ(1,2)*XJ(2,3)-XJ(1,3)*XJ(2,2)
	GY=XJ(1,3)*XJ(2,1)-XJ(1,1)*XJ(2,3)
	GZ=XJ(1,1)*XJ(2,2)-XJ(1,2)*XJ(2,1)
C   73 DET=(XJ(1,2)*XJ(2,3)-XJ(1,3)*XJ(2,2))**2+(XJ(1,1)*
C     1XJ(2,3)-XJ(1,3)*XJ(2,1))**2+(XJ(1,1)*XJ(2,2)-XJ(1,2)*XJ(2,1))**2
   74 DET=DSQRT(GX*GX+GY*GY+GZ*GZ)
C
C   74 DET=DSQRT(DET)
      IF ( DET.GT.1.D-15) GO TO 285
      IF(ISRPS.EQ.0)
     *WRITE(3,2000) NLM,KFIX,R,S,T,DET
      IF(ISRPS.EQ.1)
     *WRITE(3,6000) NLM,KFIX,R,S,T,DET
      STOP
  285 CONTINUE
      IF(NDS.EQ.0) RETURN
C     CALCULATE DERIVATIVES WRT X,Y,Z FOR NDS DEVICE
CE     JACOBIAN DETERMINANT AT POINT R,S,T
      CALL MINV(XJ,3,DET1,LE,ME)
      IF (DET1.GT.1.D-15) GO TO 177
   
      WRITE(3,2000) NLM,KFIX,R,S,T,DET1
      STOP
  177 DO 185 I=1,3
      DO 185 JJ=1,NCV
      PJ(I,JJ)=0.
      DO 185 K=1,3
      PJ(I,JJ)=PJ(I,JJ) + XJ(I,K)*P(K,JJ)
  185 CONTINUE
      ENSX=GX/DET
	ENSY=GY/DET
	ENSZ=GZ/DET
      RETURN
 2000 FORMAT(' ** GRESKA **: JAKOBIJAN JEDNAK ILI MANJI OD NULE',
     1       ' ZA ELEMENT No.',I5/
     1       9X,'KFIX=',I5/
     2       12X,'R=',F10.5/
     3       12X,'S=',F10.5/
     4       12X,'T=',F10.5/
     5       10X,'DET=',F10.5)
 6000 FORMAT(' ** ERROR **: JACOBIAN EQUAL OR LESS THEN ZERO',
     1       ' FOR ELEMENT No.',I5/
     1       9X,'KFIX=',I5/
     2       12X,'R=',F10.5/
     3       12X,'S=',F10.5/
     4       12X,'T=',F10.5/
     5       10X,'DET=',F10.5)
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE VELOCITIES3D(IDT,CORD,NEL,SKE,TT1,VELOC,INODE,
     1 MATCONV,AMATFC,NZADJ,ZADFM,NZADP,NDES,MAT3DCONV,NDIMID)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CE  MAIN PROGRAM TO PERFORM INTEGRATION OVER V OF ELEMENT
C
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA3/ LNEL3D,LMAT3D,LNQ3D,LITG3D,LIP3CV,LNG3D,LNELG3,
     1LEL,LHP,LHK,LSKE,LDEL,LDEHP,LDEHK,LHR
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON/REAL3D/ CK(21,3),P(3,21),PJ(3,21),XJ(3,3),H(21),T21(21),
     1AK,CC,HH,QQ,DET,DET1,F21(21),T212(21),T210(21),HHP
      COMMON /SRPSKI/ ISRPS
      COMMON/SURFACE3DBC/NODSURF(8,3)
C
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ            
	common/elemmodels/modelel(20),ngele
      COMMON /EFTREP/ NTABFT,MAXTFT,LNTFT,LTABFT
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON /MUMPS_PAK/ IMUMPS,MUFILE,MUFILE2
C
      DIMENSION XG(15),WGT(15),NREF(6),IG3D8(8)
      DIMENSION IDT(NDIMID,NPT),CORD(NPT,3),NEL(NE3D,8),
     1 SKE(NDES,NDES),TT1(JEDN),TBK(3)
      DIMENSION MATCONV(NMATTCONV),AMATFC(NMATTCONV,2,*)
      DIMENSION NZADJ(3,NZADP),ZADFM(NZADP),VELOC(3,NPT),INODE(NPT)
      DIMENSION ZADLOCAL(16),ZADLOCAL0(16),ZADLOCAL32(16),LMZADA(16),
     1          VLOCAL(8),ILOC(8),PLOCAL(27),ILOCV(8),VLOC(3,8),GRADP(3)
C     
      DATA IG3D8/7,3,6,2,8,4,5,1/
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
      DATA NODSURF /1, 2, 2, 1, 1, 2, 2, 1,
	2              3, 3, 4, 4, 3, 3, 4, 4,
	3              5, 5, 5, 5, 6, 6, 6, 6/
C
      IFORM  = 2
	AKTT   = 1./DT
	DDARCY = 0.d0
C	
CE    LOOP OVER ELEMENTS =====================================
C
      DO 200 NLM = 1,NE3D

      CC=1.D0  
c   
      IF (ITOR .EQ. 3)  WRITE(3,5100) NLM
 5100 FORMAT(' ELEMENT....................',I5)
      IF (INDVEL .EQ. 1) GO TO 300
      DO 17 I=1,16
      T21(I) = 0.
      T212(I) = 0.
      T210(I) = 0.
      LM(I)=0
	LMZADA(I)=0
      ZADLOCAL(I)=0.D0
      ZADLOCAL0(I)=0.D0
      ZADLOCAL32(I)=0.D0
   17 F21(I)=0.
C
      CALL CLEAR(SKE,NDES*NDES)
      CALL ICLEAR(ILOC,8)
      CALL ICLEAR(ILOCV,8)
C
CE    TEMPERATURE AT NODES  VECTOR
C
   40 NCV      = 0
      NND9     = 0
	NELZAD   = 0
	ICONTOUR = 0
C      
      DO 50 I=1,NBRE
      IF(I.LE.8) GO TO 41
      IDEL(I-8)=0
      IF(NEL(NLM,I).EQ.0) GO TO 50
      NND9=NND9+1
      NOD9(NND9)=I
      IDEL(I-8)=1
   41 J=NEL(NLM,I)
      JJ1=IDT(1,J)
      JJ2=IDT(2,J)
      NCV=NCV+1
      VLOCAL(NCV)=0.D0
      NCVDISP=NBRE+NCV  
C
C     PRESCRIBED VALUES
C     
      IF(NZADP.GT.0) THEN
	  DO KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
            IF(IDOF.EQ.3) THEN
              ICONTOUR = 1
              DO K=1,3
                JJ=NODSURF(NCV,K)
	          ILOC(JJ)=ILOC(JJ)+1
              ENDDO
            ENDIF	              	       
            NELZAD=NELZAD+1
            NF=NZADJ(3,KK)
            FAK = ZADFM(KK)
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,IND)
            IF(IND.NE.0) THEN    
              WRITE(3,6015) NF,VREME
              STOP
            ENDIF
            TIMET=VREME-DT
            IF(TIMET.LT.0) TIMET=0.D0
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,TIMET,FTT,NTMX,
     1                IND)
            IF(IND.NE.0) THEN    
              WRITE(3,6016) NF,TIMET
              STOP
            ENDIF
            IF(IDOF.EQ.1) THEN
              LMZADA(NCV)     = 1
              ZADLOCAL(NCV)   = FT*FAK
              ZADLOCAL0(NCV)  = FTT*FAK
              ZADLOCAL32(NCV) = ZADLOCAL(NCV)-ZADLOCAL0(NCV)
            ELSEIF(IDOF.EQ.2) THEN
            ELSEIF(IDOF.EQ.3) THEN
              VLOCAL(NCV) = FT*FAK
            ENDIF
	    ENDIF
	  ENDDO
 6015   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  VREME =',1PD12.4)
 6016   FORMAT(//1X,'CURVE ARGUMENT IS OUT OF RANGE'/
     1  1X,'CURVE TIME-PRESCRIBED VALUE  No. =',I5/
     1  1X,'ARGUMENT TIME,  TIMET=VREME-DT =',1PD12.4)
      ENDIF
C
      LM(NCV)     = JJ1
      IF (NSTAC.GT.0.OR.LINTE.GT.0.OR.NELZAD.GT.0) THEN
        KK=1
        JJ=IDT(KK,J)
        KLOC=(KK-1)*NBRE+NCV
        IF(JJ.GT.0) THEN
          T21(KLOC)  = TT1(JJ)
	  ELSE
	    IF(LMZADA(KLOC).EQ.1) THEN
            T21(KLOC)  = ZADLOCAL(KLOC)
          ENDIF
        ENDIF
	ENDIF
   50 CONTINUE
C     END OF LOOP OVER ELEMENT NODES-----
C
  300 IELX=NCV
CE  NODE COORDINATES OF ELEMENTS MATRIX
      K=0
      DO 60 I=1,NBRE
      IF(NEL(NLM,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM,I)
      DO 55 J=1,3
   55 CK(K,J)=CORD(KK,J)
   60 CONTINUE  
C
CE    GAUSS POINTS  LOOP =============================================
C
      NGAUSC=0
      DO 102 NGX=1,NGAUSX
      JR=NREF(NGAUSX) + NGX
      R = XG(JR)
      DO 101 NGY=1,NGAUSY
      JS=NREF(NGAUSY) + NGY
      S = XG(JS)
      DO 100 NGZ=1,NGAUSZ
      NGAUSC=NGAUSC+1
      JT=NREF(NGAUSZ) + NGZ
      T = XG(JT)
      WT=WGT(JR)*WGT(JS)*WGT(JT)
      CALL JACT(R,S,T,NEL,0)
C
CE    PRESSURE AT GAUSS POINT
C
      PRESS    = 0.0
      GRADP(1) = 0.D0
      GRADP(2) = 0.D0
      GRADP(3) = 0.D0
      DO I=1,NCV
        PRESS    = PRESS    + H(I)    * T21(I)
        GRADP(1) = GRADP(1) + PJ(1,I) * T21(I)
        GRADP(2) = GRADP(2) + PJ(2,I) * T21(I)
        GRADP(3) = GRADP(3) + PJ(3,I) * T21(I)
      ENDDO
C
CE    PRESSURE AT GAUSS POINT 
C
	PRESSA = dabs(PRESS)      
      call tabdiff(MATCONV,AMATFC,MAT3DCONV,PRESSA,DDARCY,IND)
      IF(IND.NE.0) STOP
C
CE  ELEMENT MATRIXES
C
   81 WDT=WT*DET1
C     
      !DO I = 1,NCV2
      !  DO J = 1,3
      !    VLOC(J,I) = VLOC(J,I) - H(I) * GRADP(J) * DDARCY
      !  ENDDO
      !ENDDO
      
      I = IG3D8(NGAUSC)
      DO J = 1,3
        VLOC(J,I) = - GRADP(J) * DDARCY
      ENDDO
C
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
C     KRAJ PETLJE PO GAUSOVIM TACKAMA
C
      DO I = 1,NCV
        IN = NEL(NLM,I)
        VELOC(1,IN) = VELOC(1,IN) + VLOC(1,I)
        VELOC(2,IN) = VELOC(2,IN) + VLOC(2,I)
        VELOC(3,IN) = VELOC(3,IN) + VLOC(3,I)
      
        INODE(IN) = INODE(IN) + 1
      ENDDO
 
C  
  200 CONTINUE
C     KRAJ PETLJE PO ELEMENTIMA
C
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE PRINTSMEAREDV3(LVELGLO)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
CE MAIN PROGRAM TO TO PRINTOUT VELOCITIES FOR 3D SMEARED CONTINUUM
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA3/ LNEL3D,LMAT3D,LNQ3D,LITG3D,LIP3CV,LNG3D,LNELG3,
     1LEL,LHP,LHK,LSKE,LDEL,LDEHP,LDEHK,LHR
      COMMON /FUNKTE/ NANLK,NTABK,NANLC,NTABC,MAXTK,MAXTC,NQP,MAXTQP,
     2NHR,MAXTHR,NHP,MAXTHP,NTOK,MAXTOK,MAXTQE,KONK,KONC,NFCON,SBC,NFO
      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON /SRPSKI/ ISRPS
	common/diffusmain/indiffus,NDS,maxdt,NPRINTnds,lvreme,leprdt,
	1                  NUMMAT,maxPmat,LMATER,LMATFUN,LAREAD,LFLUXDX,
     1                  LFLUXDY,LFLUXDZ
	common/elemmodels/modelel(20),ngele
	COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON/DARCYEQ/ ELDARCYX,ELDARCYY,ELDARCYZ,VDARCY,PINLET,
     1       DARCYX,JEDNDARCY,ISOLVER,IDARCY,LDARCYD,LDARCYMI,
     2       LIDARCYMA,NPTINDARCY 
 	COMMON/DARCYCONV/ICONV,IDINF,GUSTF,IDIFUSE,LMATCONV,LMATDIF,
     1       NMATTCONV,NMATTDIF,maxPmatC,maxPmatD,LMATFUNC,LMATFUND,
     2       LNELFICT,MAXCONNP,MAXCONNP2
      COMMON/MAINIDT/NDIMIDT  
      COMMON/ELEMENTS2D3D/NELEDAT(100,50),RNELDAT(100,10)
      COMMON/DARCYHEAT/IHEAT,NMATTHEAT,maxPmatH,LMATHEAT,LMATFUNHRO,
     1      LMATFUNHSH,LMATFUNHK
      COMMON/PIPEMIX/FLAMREF,IPIPEMIX,NETIP,LIDPRESS,LPRESS,LIDP,
     2               LLAMDAV,IDEFORMG,INDFLUXE,ILAMDA    
      COMMON/CSMEARED/ISMEARED,VOLFRACT,POROSSME,LVOLFRACTV,LDWALLSMEV,
     1 LPWALLSMEV,LDIAMSMEV,LTHICKSMEV,IPARTSME,LVOLSMEV,IRAVSME,DRAVSME
      COMMON/CSMEAREDG/ISMEAREDG,NDIMIDG,ICONVG,INDIFFUSG,LAMIV,
     1     LDARCYCOEFV,MATNEWUSE,LHYDRCOEFV,LDPIPE,LDTISSUE,IPRINTVEL,
     2     IACTIVE(4),LZADATA1,LZADATA0,LZADAVXYZ,LWALLAREAV,
     3     LWALLPOROSV,LIPIPENODV,ILARGEVES
      COMMON/CSMEARED2/IPASSME,JEDNPRES,JEDNCONC,LTT1P,LTT1C,LTT10P,
     1      LTT10C,LDIRCOEFF,LDPIPECAP,LDARCYCAP,I2D3D,IANIZS,NDIMTENSOR
C
C
      NET      = NELEDAT(NGE,2)
      IZIP     = NELEDAT(NGE,4)
      MAT3DCONV= NELEDAT(NGE,5)
      MAT3DDIF = NELEDAT(NGE,6) 
 	LNEL3D   = NELEDAT(NGE,7)
      LMAT3D   = NELEDAT(NGE,8)
      LNQ3D    = NELEDAT(NGE,9)
      LITG3D   = NELEDAT(NGE,11)
      LIP3CV   = NELEDAT(NGE,12)
      IDIFUSE  = NELEDAT(NGE,13)
      NE3D     = NET        
C
      LMAXSAVE=LMAX
      LIDINV=LMAX 
      LVELOC=LIDINV+NPT
      LIDNODV=LVELOC+3*NPT
      LMAX=LIDNODV+NPT
C
      CALL VELOCITIES3DSME(A(LIDT),A(LCORD),A(LNEL3D),A(LTT1P),
     1   A(LNZADJ),A(LZADFM),A(LAMIV),A(LDARCYCOEFV),A(LDIAMSMEV),
     2   A(LZADATA1),A(LIDINV),A(LVELOC),A(LIDNODV),A(LVELGLO),
     3   A(LDARCYCAP),IACTIVE,NZADP,ISMEAREDG,NDIMIDG,JEDNPRES,IPASSME)
      LMAX=LMAXSAVE   
C 
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE VELOCITIES3DSME(IDT,CORD,NEL,TT1P,NZADJ,ZADFM,AMIV,
     1 DARCYCOEFV,DIAMSMEV,ZADATA1,IDINV,VELOC,IDNODV,VELGLOB,DARCYCAP,
     2 IACTIVE,NZADP,ISMEARED,NDIMID,JEDNPRES,IPASSME)  
     
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CE  MAIN PROGRAM TO PERFORM TO CALCULATE NODAL VELOCITIES FOR 3D SMEARED CONTINUUM
C
      COMMON A(1)
      COMMON /TEMPGL/ NPT,NGET,NMATT,NSTAC,MAXIT,NDT,NTCONS,
     1NET,NGE,JEDN,DT,TMAX,VREME,NPOC,NWK,NPRINT,LINTE,
     2KONF,INDSK,INDF,KOR,NTOTA,ITER,INDSC,INTEB,INDAX,IANIZ,NQE,IZIP,
     3ITOR,INDVEL,INDFL
      COMMON /REPEAT/ LCORD,LTABK,LTABC,LNTAKV,LNTACV,LIDTE,LIDT,LTCONS,
     1LMAX,LMAXA,LMAXM,LMHT,LNTAQE,LQEFN,LNTAQP,LQPFN,LNTAOK,LTOKFN,
     2LNTAHP,LHPFN,LNTAHR,LHRFN,LTT1,LTT2,LTT0,LSK,LCONM,LF,LFC,LNEL,
     3LIBFK,LFAKP,LISKC,LGUSM,LTOPM,LTMNM,LFOHR,LFVPOT
      COMMON /REPEA3/ LNEL3D,LMAT3D,LNQ3D,LITG3D,LIP3CV,LNG3D,LNELG3,
     1LEL,LHP,LHK,LSKE,LDEL,LDEHP,LDEHK,LHR

      COMMON /EL3K21/NMAT3D,MAT3D,NE3D,NGAUSX,NGAUSY,NGAUSZ,NP3DMX,
     1IPR3DC,IPTGA,N3DGU,MEL3D,IQE,NBRE,NCV,LM(21),IDEL(13),
     2NOD9(13),NND9,IELX,NLM
      COMMON/REAL3D/ CK(21,3),P(3,21),PJ(3,21),XJ(3,3),H(21),T21(21),
     1AK,CC,HH,QQ,DET,DET1,F21(21),T212(21),T210(21),HHP
      COMMON /SRPSKI/ ISRPS
      COMMON/CMATDATA/NDIMPIPEMAX,NDIMCAPMAX,NDIMCELLMAX,NDIMPMAX,
     4 NDIMAMAX,NDIMSMAX,NDIMADHMAX,NDIMWPIPEMAX,NDIMWCAPMAX,
     5 NDIMWCELLMAX,DARCYCOEF,AMICOEFP,AMICOEFC,HYDROCOEFP,HYDROCOEFC,
     6 DARCYTENSOR(6),DPIPE,DTISSUE,DIFFTENSOR(6),PARTPIPE1,PARTPIPE2,
     7 PARTCELL(2,4),ACTIVECOEF(2,4),SOURCECOEFF(4),ADHCOEFF(2,4),
     8 DWALLPIPE,DWALLCAP,DWALLCELL(4),INODEDTOT,INODEWTOT,LDPIPEEXA,
     9 LDPIPECAPA,LCELLA,LPARTA,LACTIVEA,LSOURCEA,LADHISEA,LWALLPIPEA,
     1 LWALLCAPA,LWALLCELLA,IREADDIFNODE
      COMMON/MATERCONST/ICMTABLE(10),IDMTABLE(10,7),IWMTABLE(10,12),
     1 NDIMPIPE(10),NDIMCAP(10),NDIMCELLV(10),NDIMPART(10),NDIMACT(10),
     2 NDIMSOURCE(10),NDIMADH(10),NDIMWPIPE(10),NDIMWCAP(10),
     3 NDIMWCELL(10),IDPIPEEXC(2,10),DPIPEEXC(2,10),IDPIPECAPC(10),
     1 DPIPECAPC(6,10),ICELLC(10,10),CELLC(10,10),IPARTC(12,10),
     2 PARTC(12,10),IACTIVEC(10,10),ACTIVEC(2,10,10),ISOURCEC(10,10),
     3 SOURCEC(10,10),IADHISEC(12,10),ADHISEC(2,12,10),IWALLPIPEC(10),
     4 WALLPIPEC(10),IWALLCAPC(10),WALLCAPC(10),IWALLCELLC(10,10),
     5 WALLCELLC(10,10),ICRITICALV(10,10),CRITICALV(10,10),
     6 WEIGHTMOLV(10)
      COMMON/SURFACE3DBC/NODSURF(8,3)    
C
      DIMENSION XG(15),WGT(15),NREF(6),IG3D8(8),NLOCSU(24)
      DIMENSION IDT(NDIMID,NPT),CORD(NPT,3),NEL(NE3D,8),TT1P(JEDNPRES)
      DIMENSION NZADJ(3,NZADP),ZADFM(NZADP),VELGLOB(6,NPT) 
      DIMENSION AMIV(NPT),DARCYCOEFV(NPT),DIAMSMEV(NPT),ZADATA1(NZADP),
     2          IDINV(NPT),VELOC(3,NPT),IDNODV(NPT),DARCYCAP(3,NPT),
     3          IACTIVE(4) 
     
      DIMENSION ZADLOCAL(8),LMZADA(8),VLOCAL(8),VLOC(3,8),
     2          DARCYVS(4),ILOC(8)
      DIMENSION NODEL(8),ENV(3),GRADP(3)
      DIMENSION AN(3),NODSV(4),LMMINUS(8)       
     
C     
      DATA IG3D8/7,3,6,2,8,4,5,1/
      DATA NREF/0,1,3,6,10,15/
      DATA WGT/2.,1.00000000000000,1.00000000000000,
     10.55555555555556,0.88888888888889,0.55555555555556,
     20.34785484513745,0.65214515486255,0.65214515486255,
     30.34785484513745,0.23692688505619,0.47862867049937,
     40.56888888888889,0.47862867049937,0.23692688505619/
      DATA XG/0.,-0.5773502691896,0.57735026918963,
     1-0.7745966692415,0.,0.77459666924148,-0.8611363115941,
     2-0.3399810435849,0.33998104358486,0.86113631159405,
     3-0.9061798459387,-0.5384693101057,0.,0.53846931010568,
     40.90617984593866/
      DATA NLOCSU/1,4,8,5,2,6,7,3,2,1,5,6,3,7,8,4,1,2,3,4,5,6,7,8/
      DATA NODSURF /1, 2, 2, 1, 1, 2, 2, 1,
	2              3, 3, 4, 4, 3, 3, 4, 4,
	3              5, 5, 5, 5, 6, 6, 6, 6/  
C
      NBRE=8
C
C     LOOP OVER DOMAINS 
C
      DO 500 ID=1,2
      
      IF(IACTIVE(ID).EQ.0) GO TO 500
      IF(ISMEARED.EQ.0.AND.ID.EQ.1) GO TO 500
C      
      CALL ICLEAR(IDINV,NPT)
      CALL ICLEAR(IDNODV,NPT) 
      CALL CLEAR(VELOC,3*NPT)
C
      IF (NPRINT.GT.0) THEN
        IF(ID.EQ.1) THEN
          WRITE(3,3200)
        ELSE
           WRITE(3,3201)
        ENDIF
      ENDIF
 3200 FORMAT(/' CAPILLARY DOMAIN - NODAL POINT VELOCITIES'/
     1 '    NODE            VX          VY           VZ') 
 3201 FORMAT(/' TISSUE DOMAIN - NODAL POINT VELOCITIES'/
     1 '    NODE            VX          VY           VZ')    
CE    LOOP OVER ELEMENTS =====================================
C
      DO 200 NLM = 1,NE3D     
c   
      CALL CLEAR(ZADLOCAL,8)
      CALL ICLEAR(LMZADA,8)
      CALL CLEAR(VLOCAL,8)
      CALL CLEAR(VLOC,24) 
      CALL ICLEAR(ILOC,8)
      CALL ICLEAR(LM,8)
      CALL CLEAR(T21,16)
      CALL ICLEAR(LMMINUS,8)
C
	ICONTOUR = 0
C      
      DO 50 I=1,NBRE
      J=NEL(NLM,I)
      IDNODV(J)=1               
      NCV=I
      NODEL(NCV)=J  
C
C     PRESCRIBED VALUES
C
      IF(NZADP.GT.0) THEN
	  DO 345 KK=1,NZADP
	    NJ=NZADJ(1,KK)
	    IF(NJ.EQ.J) THEN
	      IDOF=NZADJ(2,KK)
	      IDOFA=IABS(IDOF)
	      IF(IDOFA.GT.2) GO TO 345
	      IF(IDOFA.EQ.1.AND.ID.EQ.2) GO TO 345
	      IF(IDOFA.EQ.2.AND.ID.EQ.1) GO TO 345
            IF(IDOF.LT.0) THEN
              ICONTOUR = 1
              DO K=1,3
                JJ=NODSURF(NCV,K)
	          ILOC(JJ)=ILOC(JJ)+1
              ENDDO
            ENDIF	      
            IF(IDOF.GT.0) THEN
               LMZADA(NCV)     = 1
               ZADLOCAL(NCV)   = ZADATA1(KK)
            ELSE
              LMMINUS(NCV)=1
              VLOCAL(NCV) = ZADATA1(KK)
            ENDIF
	    ENDIF
  345   CONTINUE
	ENDIF
C
      JJ=IDT(ID,J)
      LM(NCV)=JJ
   45 CONTINUE
      IF(JJ.GT.0) THEN
         T21(NCV)= TT1P(JJ)  
	ELSE
	   IF(LMZADA(NCV).EQ.1) THEN
             T21(NCV)=ZADLOCAL(NCV)
         ENDIF
      ENDIF
	
   50 CONTINUE
C     END OF LOOP OVER ELEMENT NODES-----
C
  300 IELX=NCV
CE  NODE COORDINATES OF ELEMENTS MATRIX
      K=0
      DO 60 I=1,NBRE
      IF(NEL(NLM,I).EQ.0) GO TO 60
      K=K+1
      KK=NEL(NLM,I)
      DO 55 J=1,3
   55 CK(K,J)=CORD(KK,J)
   60 CONTINUE
C
CE    GAUSS POINTS  LOOP =============================================
C
      NGAUSC=0
      DO 102 NGX=1,NGAUSX
      JR=NREF(NGAUSX) + NGX
      R = XG(JR)
      DO 101 NGY=1,NGAUSY
      JS=NREF(NGAUSY) + NGY
      S = XG(JS)
      DO 100 NGZ=1,NGAUSZ
      NGAUSC=NGAUSC+1
      JT=NREF(NGAUSZ) + NGZ
      T = XG(JT)
      WT=WGT(JR)*WGT(JS)*WGT(JT)
      CALL JACT(R,S,T,NEL,0)
CE    VELOCITIES CALCULATION
C     FOR SMEARED CONDITIONS MATERIAL PARAMETERS ARE INTERPOLATED FROM NODES
      DIAM=0.D0
      DO I=1,NCV
         DIAM=DIAM+H(I)*DIAMSMEV(NODEL(I))
      ENDDO
      AMI=0.D0
      DDARCY1=0.D0
      DDARCY2=0.D0
      DDARCY3=0.D0
      IF(ID.EQ.1) THEN
          DDARCY1=DARCYTENSOR(1)
          DDARCY2=DARCYTENSOR(2)
          DDARCY3=DARCYTENSOR(3)
      ELSE
         DDARCY=0.0
         IF(ICMTABLE(1).NE.3) THEN 
            DDARCY=DARCYCOEF
         ELSE 
            DO I=1,NCV
               DDARCY=DDARCY+H(I)*DARCYCOEFV(NODEL(I))
            ENDDO
         ENDIF
         DDARCY1=DDARCY
         DDARCY2=DDARCY
         DDARCY3=DDARCY     
      ENDIF
      GRADP(1) = 0.D0
      GRADP(2) = 0.D0
      GRADP(3) = 0.D0
      DO I=1,NCV
        GRADP(1) = GRADP(1) + PJ(1,I) * T21(I)
        GRADP(2) = GRADP(2) + PJ(2,I) * T21(I)
        GRADP(3) = GRADP(3) + PJ(3,I) * T21(I)
      ENDDO
C    
      I = IG3D8(NGAUSC)
      VLOC(1,I) = - GRADP(1) * DDARCY1
      VLOC(2,I) = - GRADP(2) * DDARCY2
      VLOC(3,I) = - GRADP(3) * DDARCY3
C
  100 CONTINUE
  101 CONTINUE
  102 CONTINUE
C     KRAJ PETLJE PO GAUSOVIM TACKAMA
C
      DO I = 1,NCV
        IN = NEL(NLM,I)
        VELOC(1,IN) = VELOC(1,IN) + VLOC(1,I)
        VELOC(2,IN) = VELOC(2,IN) + VLOC(2,I)
        VELOC(3,IN) = VELOC(3,IN) + VLOC(3,I)
        IDINV(IN) = IDINV(IN) + 1
      ENDDO
      
C       ZADATE BRZINE NA POVRSINI
      IF(ICONTOUR.EQ.0) GO TO 149
C      CALL CLEAR(PLOCAL,8)
      DO 330 NPOV=1,6
        IF(ILOC(NPOV).LT.4) GO TO 330
C       NORMALA NA POVRSINU
        KK=4*(NPOV-1)
        DO I=1,4
           K=KK+I
           IN=NLOCSU(K)
           NODSV(I)=NEL(NLM,IN)
        ENDDO
        CALL SURFACE3DNORMAL(CORD,NODSV,AN,NPT) 
        DO I=1,4 
           K=KK+I
           II=NLOCSU(K)
           IN=NODSV(I)
           IF(LMMINUS(II).EQ.1) THEN 
               IDINV(IN)=1     
               DO J=1,3
                  VELOC(J,IN)=AN(J)*VLOCAL(II)
               ENDDO
           ENDIF
        ENDDO       
  330 CONTINUE         
C
  149 CONTINUE
C
  200 CONTINUE 
C
C     AVERAGED NODAL VELOCITIES
      DO 201 NODE=1,NPT
          IF(IDNODV(NODE).EQ.0) GO TO 201
          IF(IDINV(NODE).GT.1) THEN
             AAA=IDINV(NODE)
             DO I=1,3
                VELOC(I,NODE)=VELOC(I,NODE)/AAA
             ENDDO
          ENDIF           
  201 CONTINUE  
C
      II = (ID-1) * 3
      DO NODE=1,NPT
        VELGLOB(II+1,NODE) = VELOC(1,NODE)
        VELGLOB(II+2,NODE) = VELOC(2,NODE)
        VELGLOB(II+3,NODE) = VELOC(3,NODE)
      ENDDO
C
      IF (NPRINT.LT.0) GOTO 500
C
C     PRINTOUT VELOCITIES FOR NODES BELONGING TO SMEARED 3D CONTINUUM  
C
      DO 202 NODE=1,NPT
          IF(IDNODV(NODE).EQ.0) GO TO 202
          DO I=1,3
            IF(DABS(VELOC(I,NODE)).LT.1.E-10)VELOC(I,NODE)=0.D0 
          ENDDO
          WRITE(3,2010) NODE,(VELOC(I,NODE),I=1,3)
  202 CONTINUE   
 2010 FORMAT(I8,5X,3D13.4)                

  500 CONTINUE
C  
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE SURFACE3DNORMAL(CORD,NODSV,AN,NPT)  
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     CALCULATE NORMAL TO THE 3DELEMENT SURFACE            
      
      DIMENSION CORD(NPT,3),NODSV(4),AN(3),X1(3),X2(3),AN1(3),AN2(3) 
      
      I1=NODSV(1)
      I2=NODSV(2)
      I3=NODSV(3)
      CALL CLEAR(AN1,3)
      CALL CLEAR(AN2,3)
      DO I=1,3
         X1(I)=CORD(I2,I)-CORD(I1,I)
         X2(I)=CORD(I3,I)-CORD(I1,I)
      ENDDO
      AN1(1)=X1(2)*X2(3)-X1(3)*X2(2)
      AN1(2)=X1(3)*X2(1)-X1(1)*X2(3)
      AN1(3)=X1(1)*X2(2)-X1(2)*X2(1)
      AAA=DSQRT(AN1(1)*AN1(1)+AN1(2)*AN1(2)+AN1(3)*AN1(3))
      IF(AAA.GT.1.E-10) THEN
         DO I=1,3
            AN1(I)=AN1(I)/AAA
         ENDDO
      ENDIF
C
      I1=NODSV(1)
      I2=NODSV(3)
      I3=NODSV(4)
      DO I=1,3
         X1(I)=CORD(I2,I)-CORD(I1,I)
         X2(I)=CORD(I3,I)-CORD(I1,I)
      ENDDO
      AN2(1)=X1(2)*X2(3)-X1(3)*X2(2)
      AN2(2)=X1(3)*X2(1)-X1(1)*X2(3)
      AN2(3)=X1(1)*X2(2)-X1(2)*X2(1)
      AAA=DSQRT(AN2(1)*AN2(1)+AN2(2)*AN2(2)+AN2(3)*AN2(3))
      IF(AAA.GT.1.E-10) THEN
         DO I=1,3
            AN2(I)=AN2(I)/AAA
         ENDDO
      ENDIF 
C
      DO I=1,3
         AN(I)=AN1(I)+AN2(I)  
      ENDDO
      AAA=DSQRT(AN(1)*AN(1)+AN(2)*AN(2)+AN(3)*AN(3))  
      IF(AAA.GT.1.E-10) THEN
         DO I=1,3
            AN(I)=AN(I)/AAA
         ENDDO
      ENDIF 
C
      RETURN
      END 
C=======================================================================
C
C=======================================================================